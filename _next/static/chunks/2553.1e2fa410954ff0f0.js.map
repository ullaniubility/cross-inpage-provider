{"version":3,"file":"static/chunks/2553.1e2fa410954ff0f0.js","mappings":"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","sources":["webpack://_N_E/./components/dappList/DAppList.tsx","webpack://_N_E/./components/suiStandard/dapps.config.ts","webpack://_N_E/./components/suiStandard/SuiExample.tsx","webpack://_N_E/./styles/Home.module.css","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/tweetnacl|crypto","webpack://_N_E/<anon>"],"sourcesContent":["import React from 'react';\nimport styles from '../../styles/Home.module.css';\n\ninterface DApp {\n  name: string;\n  url: string;\n}\n\ninterface Props {\n  dapps: DApp[];\n}\n\nfunction DAppList(props: Props) {\n  const { dapps } = props;\n\n  return (\n    <div className={styles.container}>\n      <h3>Top DApps</h3>\n      <ul>\n        {dapps.map((dapp) => (\n          <li key={dapp.name}>\n            <a href={dapp.url} target={'_blank'}>\n              {dapp.name} â†—\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport { DAppList };\n","export const dapps = [\n  {\n    name: 'Cetus',\n    url: 'https://app.cetus.zone/',\n  },\n  {\n    name: 'SuiSwap',\n    url: 'https://suiswap.app/',\n  },\n  {\n    name: 'Sui Names',\n    url: 'https://sui-names.com/',\n  },\n];\n","import React, { useCallback } from 'react';\nimport { useState, useEffect } from 'react';\nimport { hexToBytes } from '@noble/hashes/utils';\nimport { DAppList } from '../dappList/DAppList';\nimport { dapps } from './dapps.config';\nimport { TransactionBlock } from '@mysten/sui.js/transactions';\nimport { WalletKitProvider, ConnectButton, useWalletKit } from '@mysten/wallet-kit';\n\nfunction DappTest() {\n  const [network, setNetwork] = useState<string>('MainNet');\n  const [address, setAddress] = useState<string>();\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const {\n    isConnected,\n    accounts,\n    disconnect,\n    currentAccount,\n    signTransactionBlock,\n    signAndExecuteTransactionBlock,\n    signMessage,\n    signPersonalMessage,\n  } = useWalletKit();\n\n  useEffect(() => {\n    const [address] = accounts || [];\n    if (address) setAddress(address.address);\n  }, [accounts]);\n\n  const _getAccounts = useCallback(() => {\n    try {\n      console.log('[getAccounts] accounts:', accounts);\n    } catch (err) {\n      console.warn(err);\n      console.log(`[error] getAccounts: ${JSON.stringify(err)}`);\n    }\n  }, [accounts]);\n\n  const disconnectWallet = async () => {\n    try {\n      await disconnect();\n    } catch (err) {\n      console.warn(err);\n      console.log(`[error] disconnect: ${JSON.stringify(err)}`);\n    }\n  };\n\n  const signAndExecuteTransaction = async () => {\n    try {\n      const address = accounts[0].address;\n\n      const transfer = new TransactionBlock();\n      transfer.setSender(address);\n      const [coin] = transfer.splitCoins(transfer.gas, [transfer.pure(100000)]);\n      transfer.transferObjects(\n        [coin],\n        transfer.pure('0xe40a5a0133cac4e9059f58f9d2074a3386d631390e40eadb43d2606e8975f3eb'),\n      );\n      const res: unknown = await signAndExecuteTransactionBlock({\n        transactionBlock: transfer,\n        chain: network.toLowerCase() === 'sui:testnet' ? 'sui:testnet' : 'sui:mainnet',\n        account: currentAccount,\n      });\n\n      console.log('[signAndExecuteTransaction]', res);\n    } catch (err) {\n      console.warn(err);\n      console.log(`[error] signAndExecuteTransaction: ${JSON.stringify(err)}`);\n    }\n  };\n\n  const signTransaction = async () => {\n    try {\n      const address = accounts[0].address;\n\n      const transfer = new TransactionBlock();\n      transfer.setSender(address);\n      const [coin] = transfer.splitCoins(transfer.gas, [transfer.pure(100000)]);\n      transfer.transferObjects(\n        [coin],\n        transfer.pure('0xe40a5a0133cac4e9059f58f9d2074a3386d631390e40eadb43d2606e8975f3eb'),\n      );\n\n      const res: unknown = await signTransactionBlock({\n        transactionBlock: transfer,\n        chain: network.toLowerCase() === 'sui:testnet' ? 'sui:testnet' : 'sui:mainnet',\n        account: currentAccount,\n      });\n\n      console.log('[signTransaction]', res);\n    } catch (err) {\n      console.warn(err);\n      console.log(`[error] signTransaction: ${JSON.stringify(err)}`);\n    }\n  };\n\n  const signMessageAction = async () => {\n    try {\n      const res: unknown = await signMessage({\n        message: hexToBytes('010203'),\n        account: currentAccount,\n      });\n\n      console.log('[signMessage]', res);\n    } catch (err) {\n      console.warn(err);\n      console.log(`[error] signMessage: ${JSON.stringify(err)}`);\n    }\n  };\n\n  const signPersonalMessageAction = async () => {\n    try {\n      const res: unknown = await signPersonalMessage({\n        message: hexToBytes('010203'),\n        account: currentAccount,\n      });\n\n      console.log('[signPersonalMessage]', res);\n    } catch (err) {\n      console.warn(err);\n      console.log(`[error] signPersonalMessage: ${JSON.stringify(err)}`);\n    }\n  };\n\n  return (\n    <div>\n      <DAppList dapps={dapps} />\n\n      {isConnected && (\n        <>\n          <div>\n            <pre>\n              Network:{' '}\n              <select value={network} onChange={(e) => setNetwork(e.target.value)}>\n                <option value=\"TestNet\">TestNet</option>\n                <option value=\"MainNet\">MainNet</option>\n              </select>\n            </pre>\n            <pre>Connected as: {address}</pre>\n          </div>\n\n          <br />\n          <button onClick={_getAccounts}>Get Accounts</button>\n          <button onClick={async () => await signAndExecuteTransaction()}>\n            Sign & Execute Transaction\n          </button>\n          <button onClick={async () => await signTransaction()}>Sign Transaction</button>\n          <button onClick={async () => await signMessageAction()}>Sign Message</button>\n          <button onClick={async () => await signPersonalMessageAction()}>\n            Sign Personal Message\n          </button>\n          <button onClick={() => disconnectWallet()}>Disconnect</button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <WalletKitProvider features={['sui:signTransactionBlock']} enableUnsafeBurner>\n      <ConnectButton />\n      <DappTest />\n    </WalletKitProvider>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__d256j\",\"main\":\"Home_main__VkIEL\",\"footer\":\"Home_footer__yFiaX\",\"title\":\"Home_title__hYX6j\",\"description\":\"Home_description__uXNdx\",\"code\":\"Home_code__VVrIr\",\"grid\":\"Home_grid__AVljO\",\"card\":\"Home_card__E5spL\",\"logo\":\"Home_logo__IOQAX\"};","/* (ignored) */"],"names":["DAppList","props","dapps","_jsxs","className","styles","children","_jsx","map","dapp","href","url","target","name","DappTest","_ref3","_ref4","_ref5","_ref6","_ref7","_useState","useState","_useState2","_slicedToArray","network","setNetwork","_useState3","_useState4","address","setAddress","_useWalletKit","useWalletKit","isConnected","accounts","disconnect","currentAccount","signTransactionBlock","signAndExecuteTransactionBlock","signMessage","signPersonalMessage","useEffect","_ref","_ref2","_getAccounts","useCallback","console","log","err","warn","concat","JSON","stringify","disconnectWallet","_asyncToGenerator","apply","arguments","signAndExecuteTransaction","transfer","TransactionBlock","setSender","_transfer$splitCoins","splitCoins","gas","pure","coin","_transfer$splitCoins2","transferObjects","res","transactionBlock","chain","toLowerCase","account","signTransaction","_transfer$splitCoins3","_transfer$splitCoins4","signMessageAction","message","hexToBytes","signPersonalMessageAction","_Fragment","value","onChange","e","onClick","App","WalletKitProvider","features","enableUnsafeBurner","ConnectButton","module","exports"],"sourceRoot":""}