"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8766],{59917:function(e,t,r){let i;r.d(t,{GS:function(){return VersionedTransaction},Wf:function(){return clusterApiUrl},YW:function(){return Transaction},ew:function(){return Connection},j5:function(){return tu},nh:function(){return PublicKey},yc:function(){return SystemProgram}});var n,s=r(64285),o=r(7409),a=r(15866),c=r(13384),l=r.n(c),u=r(10011),d=r.n(u),h=r(23651),g=r(11633),p=r(39386),m=r(40475),b=r(26067),f=r(44115),y=r(31198),S=r.n(y),k=r(17905),w=r(45826),_=r(27760);a.P6.sha512Sync=(...e)=>(0,o.o)(a.P6.concatBytes(...e)),a.P6.randomPrivateKey;let generateKeypair=()=>{let e=a.P6.randomPrivateKey(),t=I(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),{publicKey:t,secretKey:r}},I=a.Z_.getPublicKey;function isOnCurve(e){try{return a.E9.fromHex(e,!0),!0}catch{return!1}}let sign=(e,t)=>a.Z_.sign(e,t.slice(0,32)),A=a.Z_.verify,toBuffer=e=>s.lW.isBuffer(e)?e:e instanceof Uint8Array?s.lW.from(e.buffer,e.byteOffset,e.byteLength):s.lW.from(e);let Struct=class Struct{constructor(e){Object.assign(this,e)}encode(){return s.lW.from((0,g.serialize)(R,this))}static decode(e){return(0,g.deserialize)(R,this,e)}static decodeUnchecked(e){return(0,g.deserializeUnchecked)(R,this,e)}};let R=new Map,x=1;let PublicKey=class PublicKey extends Struct{constructor(e){if(super({}),this._bn=void 0,void 0!==e._bn)this._bn=e._bn;else{if("string"==typeof e){let t=d().decode(e);if(32!=t.length)throw Error("Invalid public key input");this._bn=new(l())(t)}else this._bn=new(l())(e);if(this._bn.byteLength()>32)throw Error("Invalid public key input")}}static unique(){let e=new PublicKey(x);return x+=1,new PublicKey(e.toBuffer())}equals(e){return this._bn.eq(e._bn)}toBase58(){return d().encode(this.toBytes())}toJSON(){return this.toBase58()}toBytes(){return this.toBuffer()}toBuffer(){let e=this._bn.toArrayLike(s.lW);if(32===e.length)return e;let t=s.lW.alloc(32);return e.copy(t,32-e.length),t}toString(){return this.toBase58()}static async createWithSeed(e,t,r){let i=s.lW.concat([e.toBuffer(),s.lW.from(t),r.toBuffer()]),n=(0,h.J)(i);return new PublicKey(n)}static createProgramAddressSync(e,t){let r=s.lW.alloc(0);e.forEach(function(e){if(e.length>32)throw TypeError("Max seed length exceeded");r=s.lW.concat([r,toBuffer(e)])}),r=s.lW.concat([r,t.toBuffer(),s.lW.from("ProgramDerivedAddress")]);let i=(0,h.J)(r);if(isOnCurve(i))throw Error("Invalid seeds, address must fall off the curve");return new PublicKey(i)}static async createProgramAddress(e,t){return this.createProgramAddressSync(e,t)}static findProgramAddressSync(e,t){let r,i=255;for(;0!=i;){try{let n=e.concat(s.lW.from([i]));r=this.createProgramAddressSync(n,t)}catch(e){if(e instanceof TypeError)throw e;i--;continue}return[r,i]}throw Error("Unable to find a viable program address nonce")}static async findProgramAddress(e,t){return this.findProgramAddressSync(e,t)}static isOnCurve(e){let t=new PublicKey(e);return isOnCurve(t.toBytes())}};PublicKey.default=new PublicKey("11111111111111111111111111111111"),R.set(PublicKey,{kind:"struct",fields:[["_bn","u256"]]}),new PublicKey("BPFLoader1111111111111111111111111111111111");let TransactionExpiredBlockheightExceededError=class TransactionExpiredBlockheightExceededError extends Error{constructor(e){super(`Signature ${e} has expired: block height exceeded.`),this.signature=void 0,this.signature=e}};Object.defineProperty(TransactionExpiredBlockheightExceededError.prototype,"name",{value:"TransactionExpiredBlockheightExceededError"});let TransactionExpiredTimeoutError=class TransactionExpiredTimeoutError extends Error{constructor(e,t){super(`Transaction was not confirmed in ${t.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature ${e} using the Solana Explorer or CLI tools.`),this.signature=void 0,this.signature=e}};Object.defineProperty(TransactionExpiredTimeoutError.prototype,"name",{value:"TransactionExpiredTimeoutError"});let MessageAccountKeys=class MessageAccountKeys{constructor(e,t){this.staticAccountKeys=void 0,this.accountKeysFromLookups=void 0,this.staticAccountKeys=e,this.accountKeysFromLookups=t}keySegments(){let e=[this.staticAccountKeys];return this.accountKeysFromLookups&&(e.push(this.accountKeysFromLookups.writable),e.push(this.accountKeysFromLookups.readonly)),e}get(e){for(let t of this.keySegments()){if(e<t.length)return t[e];e-=t.length}}get length(){return this.keySegments().flat().length}compileInstructions(e){if(this.length>256)throw Error("Account index overflow encountered during compilation");let t=new Map;this.keySegments().flat().forEach((e,r)=>{t.set(e.toBase58(),r)});let findKeyIndex=e=>{let r=t.get(e.toBase58());if(void 0===r)throw Error("Encountered an unknown instruction account key during compilation");return r};return e.map(e=>({programIdIndex:findKeyIndex(e.programId),accountKeyIndexes:e.keys.map(e=>findKeyIndex(e.pubkey)),data:e.data}))}};let publicKey=(e="publicKey")=>p.Ik(32,e),signature=(e="signature")=>p.Ik(64,e),rustString=(e="string")=>{let t=p.n_([p.Jq("length"),p.Jq("lengthPadding"),p.Ik(p.cv(p.Jq(),-8),"chars")],e),r=t.decode.bind(t),i=t.encode.bind(t);return t.decode=(e,t)=>{let i=r(e,t);return i.chars.toString()},t.encode=(e,t,r)=>{let n={chars:s.lW.from(e,"utf8")};return i(n,t,r)},t.alloc=e=>p.Jq().span+p.Jq().span+s.lW.from(e,"utf8").length,t};function decodeLength(e){let t=0,r=0;for(;;){let i=e.shift();if(t|=(127&i)<<7*r,r+=1,(128&i)==0)break}return t}function encodeLength(e,t){let r=t;for(;;){let t=127&r;if(0==(r>>=7)){e.push(t);break}t|=128,e.push(t)}}function assert(e,t){if(!e)throw Error(t||"Assertion failed")}let CompiledKeys=class CompiledKeys{constructor(e,t){this.payer=void 0,this.keyMetaMap=void 0,this.payer=e,this.keyMetaMap=t}static compile(e,t){let r=new Map,getOrInsertDefault=e=>{let t=e.toBase58(),i=r.get(t);return void 0===i&&(i={isSigner:!1,isWritable:!1,isInvoked:!1},r.set(t,i)),i},i=getOrInsertDefault(t);for(let t of(i.isSigner=!0,i.isWritable=!0,e))for(let e of(getOrInsertDefault(t.programId).isInvoked=!0,t.keys)){let t=getOrInsertDefault(e.pubkey);t.isSigner||(t.isSigner=e.isSigner),t.isWritable||(t.isWritable=e.isWritable)}return new CompiledKeys(t,r)}getMessageComponents(){let e=[...this.keyMetaMap.entries()];assert(e.length<=256,"Max static account keys length exceeded");let t=e.filter(([,e])=>e.isSigner&&e.isWritable),r=e.filter(([,e])=>e.isSigner&&!e.isWritable),i=e.filter(([,e])=>!e.isSigner&&e.isWritable),n=e.filter(([,e])=>!e.isSigner&&!e.isWritable),s={numRequiredSignatures:t.length+r.length,numReadonlySignedAccounts:r.length,numReadonlyUnsignedAccounts:n.length};{assert(t.length>0,"Expected at least one writable signer key");let[e]=t[0];assert(e===this.payer.toBase58(),"Expected first writable signer key to be the fee payer")}let o=[...t.map(([e])=>new PublicKey(e)),...r.map(([e])=>new PublicKey(e)),...i.map(([e])=>new PublicKey(e)),...n.map(([e])=>new PublicKey(e))];return[s,o]}extractTableLookup(e){let[t,r]=this.drainKeysFoundInLookupTable(e.state.addresses,e=>!e.isSigner&&!e.isInvoked&&e.isWritable),[i,n]=this.drainKeysFoundInLookupTable(e.state.addresses,e=>!e.isSigner&&!e.isInvoked&&!e.isWritable);if(0!==t.length||0!==i.length)return[{accountKey:e.key,writableIndexes:t,readonlyIndexes:i},{writable:r,readonly:n}]}drainKeysFoundInLookupTable(e,t){let r=[],i=[];for(let[n,s]of this.keyMetaMap.entries())if(t(s)){let t=new PublicKey(n),s=e.findIndex(e=>e.equals(t));s>=0&&(assert(s<256,"Max lookup table index exceeded"),r.push(s),i.push(t),this.keyMetaMap.delete(n))}return[r,i]}};let Message=class Message{constructor(e){this.header=void 0,this.accountKeys=void 0,this.recentBlockhash=void 0,this.instructions=void 0,this.indexToProgramIds=new Map,this.header=e.header,this.accountKeys=e.accountKeys.map(e=>new PublicKey(e)),this.recentBlockhash=e.recentBlockhash,this.instructions=e.instructions,this.instructions.forEach(e=>this.indexToProgramIds.set(e.programIdIndex,this.accountKeys[e.programIdIndex]))}get version(){return"legacy"}get staticAccountKeys(){return this.accountKeys}get compiledInstructions(){return this.instructions.map(e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:d().decode(e.data)}))}get addressTableLookups(){return[]}getAccountKeys(){return new MessageAccountKeys(this.staticAccountKeys)}static compile(e){let t=CompiledKeys.compile(e.instructions,e.payerKey),[r,i]=t.getMessageComponents(),n=new MessageAccountKeys(i),s=n.compileInstructions(e.instructions).map(e=>({programIdIndex:e.programIdIndex,accounts:e.accountKeyIndexes,data:d().encode(e.data)}));return new Message({header:r,accountKeys:i,recentBlockhash:e.recentBlockhash,instructions:s})}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){let t=this.header.numRequiredSignatures;if(e>=this.header.numRequiredSignatures){let r=this.accountKeys.length-t,i=r-this.header.numReadonlyUnsignedAccounts;return e-t<i}{let r=t-this.header.numReadonlySignedAccounts;return e<r}}isProgramId(e){return this.indexToProgramIds.has(e)}programIds(){return[...this.indexToProgramIds.values()]}nonProgramIds(){return this.accountKeys.filter((e,t)=>!this.isProgramId(t))}serialize(){let e=this.accountKeys.length,t=[];encodeLength(t,e);let r=this.instructions.map(e=>{let{accounts:t,programIdIndex:r}=e,i=Array.from(d().decode(e.data)),n=[];encodeLength(n,t.length);let o=[];return encodeLength(o,i.length),{programIdIndex:r,keyIndicesCount:s.lW.from(n),keyIndices:t,dataLength:s.lW.from(o),data:i}}),i=[];encodeLength(i,r.length);let n=s.lW.alloc(1232);s.lW.from(i).copy(n);let o=i.length;r.forEach(e=>{let t=p.n_([p.u8("programIdIndex"),p.Ik(e.keyIndicesCount.length,"keyIndicesCount"),p.A9(p.u8("keyIndex"),e.keyIndices.length,"keyIndices"),p.Ik(e.dataLength.length,"dataLength"),p.A9(p.u8("userdatum"),e.data.length,"data")]),r=t.encode(e,n,o);o+=r}),n=n.slice(0,o);let a=p.n_([p.Ik(1,"numRequiredSignatures"),p.Ik(1,"numReadonlySignedAccounts"),p.Ik(1,"numReadonlyUnsignedAccounts"),p.Ik(t.length,"keyCount"),p.A9(publicKey("key"),e,"keys"),publicKey("recentBlockhash")]),c={numRequiredSignatures:s.lW.from([this.header.numRequiredSignatures]),numReadonlySignedAccounts:s.lW.from([this.header.numReadonlySignedAccounts]),numReadonlyUnsignedAccounts:s.lW.from([this.header.numReadonlyUnsignedAccounts]),keyCount:s.lW.from(t),keys:this.accountKeys.map(e=>toBuffer(e.toBytes())),recentBlockhash:d().decode(this.recentBlockhash)},l=s.lW.alloc(2048),u=a.encode(c,l);return n.copy(l,u),l.slice(0,u+n.length)}static from(e){let t=[...e],r=t.shift();if(r!==(127&r))throw Error("Versioned messages must be deserialized with VersionedMessage.deserialize()");let i=t.shift(),n=t.shift(),o=decodeLength(t),a=[];for(let e=0;e<o;e++){let e=t.slice(0,32);t=t.slice(32),a.push(new PublicKey(s.lW.from(e)))}let c=t.slice(0,32);t=t.slice(32);let l=decodeLength(t),u=[];for(let e=0;e<l;e++){let e=t.shift(),r=decodeLength(t),i=t.slice(0,r);t=t.slice(r);let n=decodeLength(t),o=t.slice(0,n),a=d().encode(s.lW.from(o));t=t.slice(n),u.push({programIdIndex:e,accounts:i,data:a})}let h={header:{numRequiredSignatures:r,numReadonlySignedAccounts:i,numReadonlyUnsignedAccounts:n},recentBlockhash:d().encode(s.lW.from(c)),accountKeys:a,instructions:u};return new Message(h)}};let MessageV0=class MessageV0{constructor(e){this.header=void 0,this.staticAccountKeys=void 0,this.recentBlockhash=void 0,this.compiledInstructions=void 0,this.addressTableLookups=void 0,this.header=e.header,this.staticAccountKeys=e.staticAccountKeys,this.recentBlockhash=e.recentBlockhash,this.compiledInstructions=e.compiledInstructions,this.addressTableLookups=e.addressTableLookups}get version(){return 0}get numAccountKeysFromLookups(){let e=0;for(let t of this.addressTableLookups)e+=t.readonlyIndexes.length+t.writableIndexes.length;return e}getAccountKeys(e){let t;if(e&&"accountKeysFromLookups"in e&&e.accountKeysFromLookups){if(this.numAccountKeysFromLookups!=e.accountKeysFromLookups.writable.length+e.accountKeysFromLookups.readonly.length)throw Error("Failed to get account keys because of a mismatch in the number of account keys from lookups");t=e.accountKeysFromLookups}else if(e&&"addressLookupTableAccounts"in e&&e.addressLookupTableAccounts)t=this.resolveAddressTableLookups(e.addressLookupTableAccounts);else if(this.addressTableLookups.length>0)throw Error("Failed to get account keys because address table lookups were not resolved");return new MessageAccountKeys(this.staticAccountKeys,t)}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){let t=this.header.numRequiredSignatures,r=this.staticAccountKeys.length;if(e>=r){let t=this.addressTableLookups.reduce((e,t)=>e+t.writableIndexes.length,0);return e-r<t}if(e>=this.header.numRequiredSignatures){let i=r-t-this.header.numReadonlyUnsignedAccounts;return e-t<i}{let r=t-this.header.numReadonlySignedAccounts;return e<r}}resolveAddressTableLookups(e){let t={writable:[],readonly:[]};for(let r of this.addressTableLookups){let i=e.find(e=>e.key.equals(r.accountKey));if(!i)throw Error(`Failed to find address lookup table account for table key ${r.accountKey.toBase58()}`);for(let e of r.writableIndexes)if(e<i.state.addresses.length)t.writable.push(i.state.addresses[e]);else throw Error(`Failed to find address for index ${e} in address lookup table ${r.accountKey.toBase58()}`);for(let e of r.readonlyIndexes)if(e<i.state.addresses.length)t.readonly.push(i.state.addresses[e]);else throw Error(`Failed to find address for index ${e} in address lookup table ${r.accountKey.toBase58()}`)}return t}static compile(e){let t=CompiledKeys.compile(e.instructions,e.payerKey),r=[],i={writable:[],readonly:[]},n=e.addressLookupTableAccounts||[];for(let e of n){let n=t.extractTableLookup(e);if(void 0!==n){let[e,{writable:t,readonly:s}]=n;r.push(e),i.writable.push(...t),i.readonly.push(...s)}}let[s,o]=t.getMessageComponents(),a=new MessageAccountKeys(o,i),c=a.compileInstructions(e.instructions);return new MessageV0({header:s,staticAccountKeys:o,recentBlockhash:e.recentBlockhash,compiledInstructions:c,addressTableLookups:r})}serialize(){let e=[];encodeLength(e,this.staticAccountKeys.length);let t=this.serializeInstructions(),r=[];encodeLength(r,this.compiledInstructions.length);let i=this.serializeAddressTableLookups(),n=[];encodeLength(n,this.addressTableLookups.length);let s=p.n_([p.u8("prefix"),p.n_([p.u8("numRequiredSignatures"),p.u8("numReadonlySignedAccounts"),p.u8("numReadonlyUnsignedAccounts")],"header"),p.Ik(e.length,"staticAccountKeysLength"),p.A9(publicKey(),this.staticAccountKeys.length,"staticAccountKeys"),publicKey("recentBlockhash"),p.Ik(r.length,"instructionsLength"),p.Ik(t.length,"serializedInstructions"),p.Ik(n.length,"addressTableLookupsLength"),p.Ik(i.length,"serializedAddressTableLookups")]),o=new Uint8Array(1232),a=s.encode({prefix:128,header:this.header,staticAccountKeysLength:new Uint8Array(e),staticAccountKeys:this.staticAccountKeys.map(e=>e.toBytes()),recentBlockhash:d().decode(this.recentBlockhash),instructionsLength:new Uint8Array(r),serializedInstructions:t,addressTableLookupsLength:new Uint8Array(n),serializedAddressTableLookups:i},o);return o.slice(0,a)}serializeInstructions(){let e=0,t=new Uint8Array(1232);for(let r of this.compiledInstructions){let i=[];encodeLength(i,r.accountKeyIndexes.length);let n=[];encodeLength(n,r.data.length);let s=p.n_([p.u8("programIdIndex"),p.Ik(i.length,"encodedAccountKeyIndexesLength"),p.A9(p.u8(),r.accountKeyIndexes.length,"accountKeyIndexes"),p.Ik(n.length,"encodedDataLength"),p.Ik(r.data.length,"data")]);e+=s.encode({programIdIndex:r.programIdIndex,encodedAccountKeyIndexesLength:new Uint8Array(i),accountKeyIndexes:r.accountKeyIndexes,encodedDataLength:new Uint8Array(n),data:r.data},t,e)}return t.slice(0,e)}serializeAddressTableLookups(){let e=0,t=new Uint8Array(1232);for(let r of this.addressTableLookups){let i=[];encodeLength(i,r.writableIndexes.length);let n=[];encodeLength(n,r.readonlyIndexes.length);let s=p.n_([publicKey("accountKey"),p.Ik(i.length,"encodedWritableIndexesLength"),p.A9(p.u8(),r.writableIndexes.length,"writableIndexes"),p.Ik(n.length,"encodedReadonlyIndexesLength"),p.A9(p.u8(),r.readonlyIndexes.length,"readonlyIndexes")]);e+=s.encode({accountKey:r.accountKey.toBytes(),encodedWritableIndexesLength:new Uint8Array(i),writableIndexes:r.writableIndexes,encodedReadonlyIndexesLength:new Uint8Array(n),readonlyIndexes:r.readonlyIndexes},t,e)}return t.slice(0,e)}static deserialize(e){let t=[...e],r=t.shift(),i=127&r;assert(r!==i,"Expected versioned message but received legacy message"),assert(0===i,`Expected versioned message with version 0 but found version ${i}`);let n={numRequiredSignatures:t.shift(),numReadonlySignedAccounts:t.shift(),numReadonlyUnsignedAccounts:t.shift()},s=[],o=decodeLength(t);for(let e=0;e<o;e++)s.push(new PublicKey(t.splice(0,32)));let a=d().encode(t.splice(0,32)),c=decodeLength(t),l=[];for(let e=0;e<c;e++){let e=t.shift(),r=decodeLength(t),i=t.splice(0,r),n=decodeLength(t),s=new Uint8Array(t.splice(0,n));l.push({programIdIndex:e,accountKeyIndexes:i,data:s})}let u=decodeLength(t),h=[];for(let e=0;e<u;e++){let e=new PublicKey(t.splice(0,32)),r=decodeLength(t),i=t.splice(0,r),n=decodeLength(t),s=t.splice(0,n);h.push({accountKey:e,writableIndexes:i,readonlyIndexes:s})}return new MessageV0({header:n,staticAccountKeys:s,recentBlockhash:a,compiledInstructions:l,addressTableLookups:h})}};let P={deserializeMessageVersion(e){let t=e[0],r=127&t;return r===t?"legacy":r},deserialize:e=>{let t=P.deserializeMessageVersion(e);if("legacy"===t)return Message.from(e);if(0===t)return MessageV0.deserialize(e);throw Error(`Transaction message version ${t} deserialization is not supported`)}};(n=i||(i={}))[n.BLOCKHEIGHT_EXCEEDED=0]="BLOCKHEIGHT_EXCEEDED",n[n.PROCESSED=1]="PROCESSED",n[n.TIMED_OUT=2]="TIMED_OUT";let v=s.lW.alloc(64).fill(0);let TransactionInstruction=class TransactionInstruction{constructor(e){this.keys=void 0,this.programId=void 0,this.data=s.lW.alloc(0),this.programId=e.programId,this.keys=e.keys,e.data&&(this.data=e.data)}toJSON(){return{keys:this.keys.map(({pubkey:e,isSigner:t,isWritable:r})=>({pubkey:e.toJSON(),isSigner:t,isWritable:r})),programId:this.programId.toJSON(),data:[...this.data]}}};let Transaction=class Transaction{get signature(){return this.signatures.length>0?this.signatures[0].signature:null}constructor(e){if(this.signatures=[],this.feePayer=void 0,this.instructions=[],this.recentBlockhash=void 0,this.lastValidBlockHeight=void 0,this.nonceInfo=void 0,this._message=void 0,this._json=void 0,!e)return;if(e.feePayer&&(this.feePayer=e.feePayer),e.signatures&&(this.signatures=e.signatures),Object.prototype.hasOwnProperty.call(e,"lastValidBlockHeight")){let{blockhash:t,lastValidBlockHeight:r}=e;this.recentBlockhash=t,this.lastValidBlockHeight=r}else{let{recentBlockhash:t,nonceInfo:r}=e;r&&(this.nonceInfo=r),this.recentBlockhash=t}}toJSON(){return{recentBlockhash:this.recentBlockhash||null,feePayer:this.feePayer?this.feePayer.toJSON():null,nonceInfo:this.nonceInfo?{nonce:this.nonceInfo.nonce,nonceInstruction:this.nonceInfo.nonceInstruction.toJSON()}:null,instructions:this.instructions.map(e=>e.toJSON()),signers:this.signatures.map(({publicKey:e})=>e.toJSON())}}add(...e){if(0===e.length)throw Error("No instructions");return e.forEach(e=>{"instructions"in e?this.instructions=this.instructions.concat(e.instructions):"data"in e&&"programId"in e&&"keys"in e?this.instructions.push(e):this.instructions.push(new TransactionInstruction(e))}),this}compileMessage(){let e,t,r;if(this._message&&JSON.stringify(this.toJSON())===JSON.stringify(this._json))return this._message;if(this.nonceInfo?(e=this.nonceInfo.nonce,t=this.instructions[0]!=this.nonceInfo.nonceInstruction?[this.nonceInfo.nonceInstruction,...this.instructions]:this.instructions):(e=this.recentBlockhash,t=this.instructions),!e)throw Error("Transaction recentBlockhash required");if(t.length<1&&console.warn("No instructions provided"),this.feePayer)r=this.feePayer;else if(this.signatures.length>0&&this.signatures[0].publicKey)r=this.signatures[0].publicKey;else throw Error("Transaction fee payer required");for(let e=0;e<t.length;e++)if(void 0===t[e].programId)throw Error(`Transaction instruction index ${e} has undefined program id`);let i=[],n=[];t.forEach(e=>{e.keys.forEach(e=>{n.push({...e})});let t=e.programId.toString();i.includes(t)||i.push(t)}),i.forEach(e=>{n.push({pubkey:new PublicKey(e),isSigner:!1,isWritable:!1})});let s=[];n.forEach(e=>{let t=e.pubkey.toString(),r=s.findIndex(e=>e.pubkey.toString()===t);r>-1?(s[r].isWritable=s[r].isWritable||e.isWritable,s[r].isSigner=s[r].isSigner||e.isSigner):s.push(e)}),s.sort(function(e,t){return e.isSigner!==t.isSigner?e.isSigner?-1:1:e.isWritable!==t.isWritable?e.isWritable?-1:1:e.pubkey.toBase58().localeCompare(t.pubkey.toBase58())});let o=s.findIndex(e=>e.pubkey.equals(r));if(o>-1){let[e]=s.splice(o,1);e.isSigner=!0,e.isWritable=!0,s.unshift(e)}else s.unshift({pubkey:r,isSigner:!0,isWritable:!0});for(let e of this.signatures){let t=s.findIndex(t=>t.pubkey.equals(e.publicKey));if(t>-1)s[t].isSigner||(s[t].isSigner=!0,console.warn("Transaction references a signature that is unnecessary, only the fee payer and instruction signer accounts should sign a transaction. This behavior is deprecated and will throw an error in the next major version release."));else throw Error(`unknown signer: ${e.publicKey.toString()}`)}let a=0,c=0,l=0,u=[],h=[];s.forEach(({pubkey:e,isSigner:t,isWritable:r})=>{t?(u.push(e.toString()),a+=1,r||(c+=1)):(h.push(e.toString()),r||(l+=1))});let g=u.concat(h),p=t.map(e=>{let{data:t,programId:r}=e;return{programIdIndex:g.indexOf(r.toString()),accounts:e.keys.map(e=>g.indexOf(e.pubkey.toString())),data:d().encode(t)}});return p.forEach(e=>{assert(e.programIdIndex>=0),e.accounts.forEach(e=>assert(e>=0))}),new Message({header:{numRequiredSignatures:a,numReadonlySignedAccounts:c,numReadonlyUnsignedAccounts:l},accountKeys:g,recentBlockhash:e,instructions:p})}_compile(){let e=this.compileMessage(),t=e.accountKeys.slice(0,e.header.numRequiredSignatures);if(this.signatures.length===t.length){let r=this.signatures.every((e,r)=>t[r].equals(e.publicKey));if(r)return e}return this.signatures=t.map(e=>({signature:null,publicKey:e})),e}serializeMessage(){return this._compile().serialize()}async getEstimatedFee(e){return(await e.getFeeForMessage(this.compileMessage())).value}setSigners(...e){if(0===e.length)throw Error("No signers");let t=new Set;this.signatures=e.filter(e=>{let r=e.toString();return!t.has(r)&&(t.add(r),!0)}).map(e=>({signature:null,publicKey:e}))}sign(...e){if(0===e.length)throw Error("No signers");let t=new Set,r=[];for(let i of e){let e=i.publicKey.toString();t.has(e)||(t.add(e),r.push(i))}this.signatures=r.map(e=>({signature:null,publicKey:e.publicKey}));let i=this._compile();this._partialSign(i,...r)}partialSign(...e){if(0===e.length)throw Error("No signers");let t=new Set,r=[];for(let i of e){let e=i.publicKey.toString();t.has(e)||(t.add(e),r.push(i))}let i=this._compile();this._partialSign(i,...r)}_partialSign(e,...t){let r=e.serialize();t.forEach(e=>{let t=sign(r,e.secretKey);this._addSignature(e.publicKey,toBuffer(t))})}addSignature(e,t){this._compile(),this._addSignature(e,t)}_addSignature(e,t){assert(64===t.length);let r=this.signatures.findIndex(t=>e.equals(t.publicKey));if(r<0)throw Error(`unknown signer: ${e.toString()}`);this.signatures[r].signature=s.lW.from(t)}verifySignatures(){return this._verifySignatures(this.serializeMessage(),!0)}_verifySignatures(e,t){for(let{signature:r,publicKey:i}of this.signatures)if(null===r){if(t)return!1}else if(!A(r,e,i.toBuffer()))return!1;return!0}serialize(e){let{requireAllSignatures:t,verifySignatures:r}=Object.assign({requireAllSignatures:!0,verifySignatures:!0},e),i=this.serializeMessage();if(r&&!this._verifySignatures(i,t))throw Error("Signature verification failed");return this._serialize(i)}_serialize(e){let{signatures:t}=this,r=[];encodeLength(r,t.length);let i=r.length+64*t.length+e.length,n=s.lW.alloc(i);return assert(t.length<256),s.lW.from(r).copy(n,0),t.forEach(({signature:e},t)=>{null!==e&&(assert(64===e.length,"signature has invalid length"),s.lW.from(e).copy(n,r.length+64*t))}),e.copy(n,r.length+64*t.length),assert(n.length<=1232,`Transaction too large: ${n.length} > 1232`),n}get keys(){return assert(1===this.instructions.length),this.instructions[0].keys.map(e=>e.pubkey)}get programId(){return assert(1===this.instructions.length),this.instructions[0].programId}get data(){return assert(1===this.instructions.length),this.instructions[0].data}static from(e){let t=[...e],r=decodeLength(t),i=[];for(let e=0;e<r;e++){let e=t.slice(0,64);t=t.slice(64),i.push(d().encode(s.lW.from(e)))}return Transaction.populate(Message.from(t),i)}static populate(e,t=[]){let r=new Transaction;return r.recentBlockhash=e.recentBlockhash,e.header.numRequiredSignatures>0&&(r.feePayer=e.accountKeys[0]),t.forEach((t,i)=>{let n={signature:t==d().encode(v)?null:d().decode(t),publicKey:e.accountKeys[i]};r.signatures.push(n)}),e.instructions.forEach(t=>{let i=t.accounts.map(t=>{let i=e.accountKeys[t];return{pubkey:i,isSigner:r.signatures.some(e=>e.publicKey.toString()===i.toString())||e.isAccountSigner(t),isWritable:e.isAccountWritable(t)}});r.instructions.push(new TransactionInstruction({keys:i,programId:e.accountKeys[t.programIdIndex],data:d().decode(t.data)}))}),r._message=e,r._json=r.toJSON(),r}};let VersionedTransaction=class VersionedTransaction{get version(){return this.message.version}constructor(e,t){if(this.signatures=void 0,this.message=void 0,void 0!==t)assert(t.length===e.header.numRequiredSignatures,"Expected signatures length to be equal to the number of required signatures"),this.signatures=t;else{let t=[];for(let r=0;r<e.header.numRequiredSignatures;r++)t.push(new Uint8Array(64));this.signatures=t}this.message=e}serialize(){let e=this.message.serialize(),t=[];encodeLength(t,this.signatures.length);let r=p.n_([p.Ik(t.length,"encodedSignaturesLength"),p.A9(signature(),this.signatures.length,"signatures"),p.Ik(e.length,"serializedMessage")]),i=new Uint8Array(2048),n=r.encode({encodedSignaturesLength:new Uint8Array(t),signatures:this.signatures,serializedMessage:e},i);return i.slice(0,n)}static deserialize(e){let t=[...e],r=[],i=decodeLength(t);for(let e=0;e<i;e++)r.push(new Uint8Array(t.splice(0,64)));let n=P.deserialize(new Uint8Array(t));return new VersionedTransaction(n,r)}sign(e){let t=this.message.serialize(),r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures);for(let i of e){let e=r.findIndex(e=>e.equals(i.publicKey));assert(e>=0,`Cannot sign with non signer key ${i.publicKey.toBase58()}`),this.signatures[e]=sign(t,i.secretKey)}}addSignature(e,t){assert(64===t.byteLength,"Signature must be 64 bytes long");let r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures),i=r.findIndex(t=>t.equals(e));assert(i>=0,`Can not add signature; \`${e.toBase58()}\` is not required to sign this transaction`),this.signatures[i]=t}};let C=new PublicKey("SysvarC1ock11111111111111111111111111111111");new PublicKey("SysvarEpochSchedu1e111111111111111111111111"),new PublicKey("Sysvar1nstructions1111111111111111111111111");let B=new PublicKey("SysvarRecentB1ockHashes11111111111111111111"),E=new PublicKey("SysvarRent111111111111111111111111111111111");new PublicKey("SysvarRewards111111111111111111111111111111"),new PublicKey("SysvarS1otHashes111111111111111111111111111"),new PublicKey("SysvarS1otHistory11111111111111111111111111");let K=new PublicKey("SysvarStakeHistory1111111111111111111111111");async function sendAndConfirmTransaction(e,t,r,i){let n=i&&{skipPreflight:i.skipPreflight,preflightCommitment:i.preflightCommitment||i.commitment,maxRetries:i.maxRetries,minContextSlot:i.minContextSlot},s=await e.sendTransaction(t,r,n),o=null!=t.recentBlockhash&&null!=t.lastValidBlockHeight?(await e.confirmTransaction({signature:s,blockhash:t.recentBlockhash,lastValidBlockHeight:t.lastValidBlockHeight},i&&i.commitment)).value:(await e.confirmTransaction(s,i&&i.commitment)).value;if(o.err)throw Error(`Transaction ${s} failed (${JSON.stringify(o)})`);return s}function sleep(e){return new Promise(t=>setTimeout(t,e))}function encodeData(e,t){let r=e.layout.span>=0?e.layout.span:function getAlloc(e,t){let getItemAlloc=e=>{if(e.span>=0)return e.span;if("function"==typeof e.alloc)return e.alloc(t[e.property]);if("count"in e&&"elementLayout"in e){let r=t[e.property];if(Array.isArray(r))return r.length*getItemAlloc(e.elementLayout)}else if("fields"in e)return getAlloc({layout:e},t[e.property]);return 0},r=0;return e.layout.fields.forEach(e=>{r+=getItemAlloc(e)}),r}(e,t),i=s.lW.alloc(r),n=Object.assign({instruction:e.index},t);return e.layout.encode(n,i),i}let T=p._O("lamportsPerSignature"),W=p.n_([p.Jq("version"),p.Jq("state"),publicKey("authorizedPubkey"),publicKey("nonce"),p.n_([T],"feeCalculator")]),O=W.span;let NonceAccount=class NonceAccount{constructor(e){this.authorizedPubkey=void 0,this.nonce=void 0,this.feeCalculator=void 0,this.authorizedPubkey=e.authorizedPubkey,this.nonce=e.nonce,this.feeCalculator=e.feeCalculator}static fromAccountData(e){let t=W.decode(toBuffer(e),0);return new NonceAccount({authorizedPubkey:new PublicKey(t.authorizedPubkey),nonce:new PublicKey(t.nonce).toString(),feeCalculator:t.feeCalculator})}};let encodeDecode=e=>{let t=e.decode.bind(e),r=e.encode.bind(e);return{decode:t,encode:r}},u64=e=>{let t=(0,p.Ik)(8,e),{encode:r,decode:i}=encodeDecode(t);return t.decode=(e,t)=>{let r=i(e,t);return(0,m.oU)(s.lW.from(r))},t.encode=(e,t,i)=>{let n=(0,m.k$)(e,8);return r(n,t,i)},t},L=Object.freeze({Create:{index:0,layout:p.n_([p.Jq("instruction"),p.gM("lamports"),p.gM("space"),publicKey("programId")])},Assign:{index:1,layout:p.n_([p.Jq("instruction"),publicKey("programId")])},Transfer:{index:2,layout:p.n_([p.Jq("instruction"),u64("lamports")])},CreateWithSeed:{index:3,layout:p.n_([p.Jq("instruction"),publicKey("base"),rustString("seed"),p.gM("lamports"),p.gM("space"),publicKey("programId")])},AdvanceNonceAccount:{index:4,layout:p.n_([p.Jq("instruction")])},WithdrawNonceAccount:{index:5,layout:p.n_([p.Jq("instruction"),p.gM("lamports")])},InitializeNonceAccount:{index:6,layout:p.n_([p.Jq("instruction"),publicKey("authorized")])},AuthorizeNonceAccount:{index:7,layout:p.n_([p.Jq("instruction"),publicKey("authorized")])},Allocate:{index:8,layout:p.n_([p.Jq("instruction"),p.gM("space")])},AllocateWithSeed:{index:9,layout:p.n_([p.Jq("instruction"),publicKey("base"),rustString("seed"),p.gM("space"),publicKey("programId")])},AssignWithSeed:{index:10,layout:p.n_([p.Jq("instruction"),publicKey("base"),rustString("seed"),publicKey("programId")])},TransferWithSeed:{index:11,layout:p.n_([p.Jq("instruction"),u64("lamports"),rustString("seed"),publicKey("programId")])},UpgradeNonceAccount:{index:12,layout:p.n_([p.Jq("instruction")])}});let SystemProgram=class SystemProgram{constructor(){}static createAccount(e){let t=L.Create,r=encodeData(t,{lamports:e.lamports,space:e.space,programId:toBuffer(e.programId.toBuffer())});return new TransactionInstruction({keys:[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!0,isWritable:!0}],programId:this.programId,data:r})}static transfer(e){let t,r;if("basePubkey"in e){let i=L.TransferWithSeed;t=encodeData(i,{lamports:BigInt(e.lamports),seed:e.seed,programId:toBuffer(e.programId.toBuffer())}),r=[{pubkey:e.fromPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]}else{let i=L.Transfer;t=encodeData(i,{lamports:BigInt(e.lamports)}),r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]}return new TransactionInstruction({keys:r,programId:this.programId,data:t})}static assign(e){let t,r;if("basePubkey"in e){let i=L.AssignWithSeed;t=encodeData(i,{base:toBuffer(e.basePubkey.toBuffer()),seed:e.seed,programId:toBuffer(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]}else{let i=L.Assign;t=encodeData(i,{programId:toBuffer(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]}return new TransactionInstruction({keys:r,programId:this.programId,data:t})}static createAccountWithSeed(e){let t=L.CreateWithSeed,r=encodeData(t,{base:toBuffer(e.basePubkey.toBuffer()),seed:e.seed,lamports:e.lamports,space:e.space,programId:toBuffer(e.programId.toBuffer())}),i=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!1,isWritable:!0}];return e.basePubkey!=e.fromPubkey&&i.push({pubkey:e.basePubkey,isSigner:!0,isWritable:!1}),new TransactionInstruction({keys:i,programId:this.programId,data:r})}static createNonceAccount(e){let t=new Transaction;"basePubkey"in e&&"seed"in e?t.add(SystemProgram.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:O,programId:this.programId})):t.add(SystemProgram.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,lamports:e.lamports,space:O,programId:this.programId}));let r={noncePubkey:e.noncePubkey,authorizedPubkey:e.authorizedPubkey};return t.add(this.nonceInitialize(r)),t}static nonceInitialize(e){let t=L.InitializeNonceAccount,r=encodeData(t,{authorized:toBuffer(e.authorizedPubkey.toBuffer())}),i={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:B,isSigner:!1,isWritable:!1},{pubkey:E,isSigner:!1,isWritable:!1}],programId:this.programId,data:r};return new TransactionInstruction(i)}static nonceAdvance(e){let t=L.AdvanceNonceAccount,r=encodeData(t),i={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:B,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:r};return new TransactionInstruction(i)}static nonceWithdraw(e){let t=L.WithdrawNonceAccount,r=encodeData(t,{lamports:e.lamports});return new TransactionInstruction({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0},{pubkey:B,isSigner:!1,isWritable:!1},{pubkey:E,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:r})}static nonceAuthorize(e){let t=L.AuthorizeNonceAccount,r=encodeData(t,{authorized:toBuffer(e.newAuthorizedPubkey.toBuffer())});return new TransactionInstruction({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:r})}static allocate(e){let t,r;if("basePubkey"in e){let i=L.AllocateWithSeed;t=encodeData(i,{base:toBuffer(e.basePubkey.toBuffer()),seed:e.seed,space:e.space,programId:toBuffer(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]}else{let i=L.Allocate;t=encodeData(i,{space:e.space}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]}return new TransactionInstruction({keys:r,programId:this.programId,data:t})}};SystemProgram.programId=new PublicKey("11111111111111111111111111111111");let Loader=class Loader{constructor(){}static getMinNumSignatures(e){return 2*(Math.ceil(e/Loader.chunkSize)+1+1)}static async load(e,t,r,i,n){{let s=await e.getMinimumBalanceForRentExemption(n.length),o=await e.getAccountInfo(r.publicKey,"confirmed"),a=null;if(null!==o){if(o.executable)return console.error("Program load failed, account is already executable"),!1;o.data.length!==n.length&&(a=a||new Transaction).add(SystemProgram.allocate({accountPubkey:r.publicKey,space:n.length})),o.owner.equals(i)||(a=a||new Transaction).add(SystemProgram.assign({accountPubkey:r.publicKey,programId:i})),o.lamports<s&&(a=a||new Transaction).add(SystemProgram.transfer({fromPubkey:t.publicKey,toPubkey:r.publicKey,lamports:s-o.lamports}))}else a=new Transaction().add(SystemProgram.createAccount({fromPubkey:t.publicKey,newAccountPubkey:r.publicKey,lamports:s>0?s:1,space:n.length,programId:i}));null!==a&&await sendAndConfirmTransaction(e,a,[t,r],{commitment:"confirmed"})}let o=p.n_([p.Jq("instruction"),p.Jq("offset"),p.Jq("bytesLength"),p.Jq("bytesLengthPadding"),p.A9(p.u8("byte"),p.cv(p.Jq(),-8),"bytes")]),a=Loader.chunkSize,c=0,l=n,u=[];for(;l.length>0;){let n=l.slice(0,a),d=s.lW.alloc(a+16);o.encode({instruction:0,offset:c,bytes:n,bytesLength:0,bytesLengthPadding:0},d);let h=new Transaction().add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0}],programId:i,data:d});u.push(sendAndConfirmTransaction(e,h,[t,r],{commitment:"confirmed"})),e._rpcEndpoint.includes("solana.com")&&await sleep(250),c+=a,l=l.slice(a)}await Promise.all(u);{let n=p.n_([p.Jq("instruction")]),o=s.lW.alloc(n.span);n.encode({instruction:1},o);let a=new Transaction().add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0},{pubkey:E,isSigner:!1,isWritable:!1}],programId:i,data:o});await sendAndConfirmTransaction(e,a,[t,r],{commitment:"confirmed"})}return!0}};Loader.chunkSize=932,new PublicKey("BPFLoader2111111111111111111111111111111111");var q=Object.prototype.toString,N=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t},fastStableStringify$1=function(e){var t=function stringify(e,t){var r,i,n,s,o,a,c;if(!0===e)return"true";if(!1===e)return"false";switch(typeof e){case"object":if(null===e)return null;if(e.toJSON&&"function"==typeof e.toJSON)return stringify(e.toJSON(),t);if("[object Array]"===(c=q.call(e))){for(r=0,n="[",i=e.length-1;r<i;r++)n+=stringify(e[r],!0)+",";return i>-1&&(n+=stringify(e[r],!0)),n+"]"}if("[object Object]"!==c)return JSON.stringify(e);for(i=(s=N(e).sort()).length,n="",r=0;r<i;)void 0!==(a=stringify(e[o=s[r]],!1))&&(n&&(n+=","),n+=JSON.stringify(o)+":"+a),r++;return"{"+n+"}";case"function":case"undefined":return t?null:void 0;case"string":return JSON.stringify(e);default:return isFinite(e)?e:null}}(e,!1);if(void 0!==t)return""+t};function trailingZeros(e){let t=0;for(;e>1;)e/=2,t++;return t}let EpochSchedule=class EpochSchedule{constructor(e,t,r,i,n){this.slotsPerEpoch=void 0,this.leaderScheduleSlotOffset=void 0,this.warmup=void 0,this.firstNormalEpoch=void 0,this.firstNormalSlot=void 0,this.slotsPerEpoch=e,this.leaderScheduleSlotOffset=t,this.warmup=r,this.firstNormalEpoch=i,this.firstNormalSlot=n}getEpoch(e){return this.getEpochAndSlotIndex(e)[0]}getEpochAndSlotIndex(e){if(e<this.firstNormalSlot){var t;let r=trailingZeros(0===(t=e+32+1)?1:(t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,(t|=t>>32)+1))-trailingZeros(32)-1,i=this.getSlotsInEpoch(r),n=e-(i-32);return[r,n]}{let t=e-this.firstNormalSlot,r=Math.floor(t/this.slotsPerEpoch),i=this.firstNormalEpoch+r,n=t%this.slotsPerEpoch;return[i,n]}}getFirstSlotInEpoch(e){return e<=this.firstNormalEpoch?(Math.pow(2,e)-1)*32:(e-this.firstNormalEpoch)*this.slotsPerEpoch+this.firstNormalSlot}getLastSlotInEpoch(e){return this.getFirstSlotInEpoch(e)+this.getSlotsInEpoch(e)-1}getSlotsInEpoch(e){return e<this.firstNormalEpoch?Math.pow(2,e+trailingZeros(32)):this.slotsPerEpoch}};let SendTransactionError=class SendTransactionError extends Error{constructor(e,t){super(e),this.logs=void 0,this.logs=t}};let SolanaJSONRPCError=class SolanaJSONRPCError extends Error{constructor({code:e,message:t,data:r},i){super(null!=i?`${i}: ${t}`:t),this.code=void 0,this.data=void 0,this.code=e,this.data=r,this.name="SolanaJSONRPCError"}};var z=globalThis.fetch;let AddressLookupTableAccount=class AddressLookupTableAccount{constructor(e){this.key=void 0,this.state=void 0,this.key=e.key,this.state=e.state}isActive(){let e=BigInt("0xffffffffffffffff");return this.state.deactivationSlot===e}static deserialize(e){let t=function(e,t){let r;try{r=e.layout.decode(t)}catch(e){throw Error("invalid instruction; "+e)}if(r.typeIndex!==e.index)throw Error(`invalid account data; account type mismatch ${r.typeIndex} != ${e.index}`);return r}(j,e),r=e.length-56;assert(r>=0,"lookup table is invalid"),assert(r%32==0,"lookup table is invalid");let i=r/32,{addresses:n}=p.n_([p.A9(publicKey(),i,"addresses")]).decode(e.slice(56));return{deactivationSlot:t.deactivationSlot,lastExtendedSlot:t.lastExtendedSlot,lastExtendedSlotStartIndex:t.lastExtendedStartIndex,authority:0!==t.authority.length?new PublicKey(t.authority[0]):void 0,addresses:n.map(e=>new PublicKey(e))}}};let j={index:1,layout:p.n_([p.Jq("typeIndex"),u64("deactivationSlot"),p._O("lastExtendedSlot"),p.u8("lastExtendedStartIndex"),p.u8(),p.A9(publicKey(),p.cv(p.u8(),-1),"authority")])},J=/^[^:]+:\/\/([^:[]+|\[[^\]]+\])(:\d+)?(.*)/i,U=(0,b.oQ)((0,b.eE)(PublicKey),(0,b.Z_)(),e=>new PublicKey(e)),M=(0,b.bc)([(0,b.Z_)(),(0,b.i0)("base64")]),F=(0,b.oQ)((0,b.eE)(s.lW),M,e=>s.lW.from(e[0],"base64"));function extractCommitmentFromConfig(e){let t,r;if("string"==typeof e)t=e;else if(e){let{commitment:i,...n}=e;t=i,r=n}return{commitment:t,config:r}}function createRpcResult(e){return(0,b.G0)([(0,b.dt)({jsonrpc:(0,b.i0)("2.0"),id:(0,b.Z_)(),result:e}),(0,b.dt)({jsonrpc:(0,b.i0)("2.0"),id:(0,b.Z_)(),error:(0,b.dt)({code:(0,b._4)(),message:(0,b.Z_)(),data:(0,b.jt)((0,b.Yj)())})})])}let D=createRpcResult((0,b._4)());function jsonRpcResult(e){return(0,b.oQ)(createRpcResult(e),D,t=>"error"in t?t:{...t,result:(0,b.Ue)(t.result,e)})}function jsonRpcResultAndContext(e){return jsonRpcResult((0,b.dt)({context:(0,b.dt)({slot:(0,b.Rx)()}),value:e}))}function notificationResultAndContext(e){return(0,b.dt)({context:(0,b.dt)({slot:(0,b.Rx)()}),value:e})}function versionedMessageFromResponse(e,t){return 0===e?new MessageV0({header:t.header,staticAccountKeys:t.accountKeys.map(e=>new PublicKey(e)),recentBlockhash:t.recentBlockhash,compiledInstructions:t.instructions.map(e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:d().decode(e.data)})),addressTableLookups:t.addressTableLookups}):new Message(t)}let G=(0,b.dt)({foundation:(0,b.Rx)(),foundationTerm:(0,b.Rx)(),initial:(0,b.Rx)(),taper:(0,b.Rx)(),terminal:(0,b.Rx)()}),Z=jsonRpcResult((0,b.IX)((0,b.AG)((0,b.dt)({epoch:(0,b.Rx)(),effectiveSlot:(0,b.Rx)(),amount:(0,b.Rx)(),postBalance:(0,b.Rx)()})))),$=(0,b.dt)({epoch:(0,b.Rx)(),slotIndex:(0,b.Rx)(),slotsInEpoch:(0,b.Rx)(),absoluteSlot:(0,b.Rx)(),blockHeight:(0,b.jt)((0,b.Rx)()),transactionCount:(0,b.jt)((0,b.Rx)())}),X=(0,b.dt)({slotsPerEpoch:(0,b.Rx)(),leaderScheduleSlotOffset:(0,b.Rx)(),warmup:(0,b.O7)(),firstNormalEpoch:(0,b.Rx)(),firstNormalSlot:(0,b.Rx)()}),H=(0,b.IM)((0,b.Z_)(),(0,b.IX)((0,b.Rx)())),V=(0,b.AG)((0,b.G0)([(0,b.dt)({}),(0,b.Z_)()])),Q=(0,b.dt)({err:V}),Y=(0,b.i0)("receivedSignature"),ee=(0,b.dt)({"solana-core":(0,b.Z_)(),"feature-set":(0,b.jt)((0,b.Rx)())}),et=jsonRpcResultAndContext((0,b.dt)({err:(0,b.AG)((0,b.G0)([(0,b.dt)({}),(0,b.Z_)()])),logs:(0,b.AG)((0,b.IX)((0,b.Z_)())),accounts:(0,b.jt)((0,b.AG)((0,b.IX)((0,b.AG)((0,b.dt)({executable:(0,b.O7)(),owner:(0,b.Z_)(),lamports:(0,b.Rx)(),data:(0,b.IX)((0,b.Z_)()),rentEpoch:(0,b.jt)((0,b.Rx)())}))))),unitsConsumed:(0,b.jt)((0,b.Rx)()),returnData:(0,b.jt)((0,b.AG)((0,b.dt)({programId:(0,b.Z_)(),data:(0,b.bc)([(0,b.Z_)(),(0,b.i0)("base64")])})))})),er=jsonRpcResultAndContext((0,b.dt)({byIdentity:(0,b.IM)((0,b.Z_)(),(0,b.IX)((0,b.Rx)())),range:(0,b.dt)({firstSlot:(0,b.Rx)(),lastSlot:(0,b.Rx)()})})),ei=jsonRpcResult(G),en=jsonRpcResult($),es=jsonRpcResult(X),eo=jsonRpcResult(H),ea=jsonRpcResult((0,b.Rx)()),ec=jsonRpcResultAndContext((0,b.dt)({total:(0,b.Rx)(),circulating:(0,b.Rx)(),nonCirculating:(0,b.Rx)(),nonCirculatingAccounts:(0,b.IX)(U)})),el=(0,b.dt)({amount:(0,b.Z_)(),uiAmount:(0,b.AG)((0,b.Rx)()),decimals:(0,b.Rx)(),uiAmountString:(0,b.jt)((0,b.Z_)())}),eu=jsonRpcResultAndContext((0,b.IX)((0,b.dt)({address:U,amount:(0,b.Z_)(),uiAmount:(0,b.AG)((0,b.Rx)()),decimals:(0,b.Rx)(),uiAmountString:(0,b.jt)((0,b.Z_)())}))),ed=jsonRpcResultAndContext((0,b.IX)((0,b.dt)({pubkey:U,account:(0,b.dt)({executable:(0,b.O7)(),owner:U,lamports:(0,b.Rx)(),data:F,rentEpoch:(0,b.Rx)()})}))),eh=(0,b.dt)({program:(0,b.Z_)(),parsed:(0,b._4)(),space:(0,b.Rx)()}),eg=jsonRpcResultAndContext((0,b.IX)((0,b.dt)({pubkey:U,account:(0,b.dt)({executable:(0,b.O7)(),owner:U,lamports:(0,b.Rx)(),data:eh,rentEpoch:(0,b.Rx)()})}))),ep=jsonRpcResultAndContext((0,b.IX)((0,b.dt)({lamports:(0,b.Rx)(),address:U}))),em=(0,b.dt)({executable:(0,b.O7)(),owner:U,lamports:(0,b.Rx)(),data:F,rentEpoch:(0,b.Rx)()}),eb=(0,b.dt)({pubkey:U,account:em}),ef=(0,b.oQ)((0,b.G0)([(0,b.eE)(s.lW),eh]),(0,b.G0)([M,eh]),e=>Array.isArray(e)?(0,b.Ue)(e,F):e),ey=(0,b.dt)({executable:(0,b.O7)(),owner:U,lamports:(0,b.Rx)(),data:ef,rentEpoch:(0,b.Rx)()}),eS=(0,b.dt)({pubkey:U,account:ey}),ek=(0,b.dt)({state:(0,b.G0)([(0,b.i0)("active"),(0,b.i0)("inactive"),(0,b.i0)("activating"),(0,b.i0)("deactivating")]),active:(0,b.Rx)(),inactive:(0,b.Rx)()}),ew=jsonRpcResult((0,b.IX)((0,b.dt)({signature:(0,b.Z_)(),slot:(0,b.Rx)(),err:V,memo:(0,b.AG)((0,b.Z_)()),blockTime:(0,b.jt)((0,b.AG)((0,b.Rx)()))}))),e_=jsonRpcResult((0,b.IX)((0,b.dt)({signature:(0,b.Z_)(),slot:(0,b.Rx)(),err:V,memo:(0,b.AG)((0,b.Z_)()),blockTime:(0,b.jt)((0,b.AG)((0,b.Rx)()))}))),eI=(0,b.dt)({subscription:(0,b.Rx)(),result:notificationResultAndContext(em)}),eA=(0,b.dt)({pubkey:U,account:em}),eR=(0,b.dt)({subscription:(0,b.Rx)(),result:notificationResultAndContext(eA)}),ex=(0,b.dt)({parent:(0,b.Rx)(),slot:(0,b.Rx)(),root:(0,b.Rx)()}),eP=(0,b.dt)({subscription:(0,b.Rx)(),result:ex}),ev=(0,b.G0)([(0,b.dt)({type:(0,b.G0)([(0,b.i0)("firstShredReceived"),(0,b.i0)("completed"),(0,b.i0)("optimisticConfirmation"),(0,b.i0)("root")]),slot:(0,b.Rx)(),timestamp:(0,b.Rx)()}),(0,b.dt)({type:(0,b.i0)("createdBank"),parent:(0,b.Rx)(),slot:(0,b.Rx)(),timestamp:(0,b.Rx)()}),(0,b.dt)({type:(0,b.i0)("frozen"),slot:(0,b.Rx)(),timestamp:(0,b.Rx)(),stats:(0,b.dt)({numTransactionEntries:(0,b.Rx)(),numSuccessfulTransactions:(0,b.Rx)(),numFailedTransactions:(0,b.Rx)(),maxTransactionsPerEntry:(0,b.Rx)()})}),(0,b.dt)({type:(0,b.i0)("dead"),slot:(0,b.Rx)(),timestamp:(0,b.Rx)(),err:(0,b.Z_)()})]),eC=(0,b.dt)({subscription:(0,b.Rx)(),result:ev}),eB=(0,b.dt)({subscription:(0,b.Rx)(),result:notificationResultAndContext((0,b.G0)([Q,Y]))}),eE=(0,b.dt)({subscription:(0,b.Rx)(),result:(0,b.Rx)()}),eK=(0,b.dt)({pubkey:(0,b.Z_)(),gossip:(0,b.AG)((0,b.Z_)()),tpu:(0,b.AG)((0,b.Z_)()),rpc:(0,b.AG)((0,b.Z_)()),version:(0,b.AG)((0,b.Z_)())}),eT=(0,b.dt)({votePubkey:(0,b.Z_)(),nodePubkey:(0,b.Z_)(),activatedStake:(0,b.Rx)(),epochVoteAccount:(0,b.O7)(),epochCredits:(0,b.IX)((0,b.bc)([(0,b.Rx)(),(0,b.Rx)(),(0,b.Rx)()])),commission:(0,b.Rx)(),lastVote:(0,b.Rx)(),rootSlot:(0,b.AG)((0,b.Rx)())}),eW=jsonRpcResult((0,b.dt)({current:(0,b.IX)(eT),delinquent:(0,b.IX)(eT)})),eO=(0,b.G0)([(0,b.i0)("processed"),(0,b.i0)("confirmed"),(0,b.i0)("finalized")]),eL=(0,b.dt)({slot:(0,b.Rx)(),confirmations:(0,b.AG)((0,b.Rx)()),err:V,confirmationStatus:(0,b.jt)(eO)}),eq=jsonRpcResultAndContext((0,b.IX)((0,b.AG)(eL))),eN=jsonRpcResult((0,b.Rx)()),ez=(0,b.dt)({accountKey:U,writableIndexes:(0,b.IX)((0,b.Rx)()),readonlyIndexes:(0,b.IX)((0,b.Rx)())}),ej=(0,b.dt)({signatures:(0,b.IX)((0,b.Z_)()),message:(0,b.dt)({accountKeys:(0,b.IX)((0,b.Z_)()),header:(0,b.dt)({numRequiredSignatures:(0,b.Rx)(),numReadonlySignedAccounts:(0,b.Rx)(),numReadonlyUnsignedAccounts:(0,b.Rx)()}),instructions:(0,b.IX)((0,b.dt)({accounts:(0,b.IX)((0,b.Rx)()),data:(0,b.Z_)(),programIdIndex:(0,b.Rx)()})),recentBlockhash:(0,b.Z_)(),addressTableLookups:(0,b.jt)((0,b.IX)(ez))})}),eJ=(0,b.dt)({parsed:(0,b._4)(),program:(0,b.Z_)(),programId:U}),eU=(0,b.dt)({accounts:(0,b.IX)(U),data:(0,b.Z_)(),programId:U}),eM=(0,b.G0)([eU,eJ]),eF=(0,b.G0)([(0,b.dt)({parsed:(0,b._4)(),program:(0,b.Z_)(),programId:(0,b.Z_)()}),(0,b.dt)({accounts:(0,b.IX)((0,b.Z_)()),data:(0,b.Z_)(),programId:(0,b.Z_)()})]),eD=(0,b.oQ)(eM,eF,e=>"accounts"in e?(0,b.Ue)(e,eU):(0,b.Ue)(e,eJ)),eG=(0,b.dt)({signatures:(0,b.IX)((0,b.Z_)()),message:(0,b.dt)({accountKeys:(0,b.IX)((0,b.dt)({pubkey:U,signer:(0,b.O7)(),writable:(0,b.O7)(),source:(0,b.jt)((0,b.G0)([(0,b.i0)("transaction"),(0,b.i0)("lookupTable")]))})),instructions:(0,b.IX)(eD),recentBlockhash:(0,b.Z_)(),addressTableLookups:(0,b.jt)((0,b.AG)((0,b.IX)(ez)))})}),eZ=(0,b.dt)({accountIndex:(0,b.Rx)(),mint:(0,b.Z_)(),owner:(0,b.jt)((0,b.Z_)()),uiTokenAmount:el}),e$=(0,b.dt)({writable:(0,b.IX)(U),readonly:(0,b.IX)(U)}),eX=(0,b.dt)({err:V,fee:(0,b.Rx)(),innerInstructions:(0,b.jt)((0,b.AG)((0,b.IX)((0,b.dt)({index:(0,b.Rx)(),instructions:(0,b.IX)((0,b.dt)({accounts:(0,b.IX)((0,b.Rx)()),data:(0,b.Z_)(),programIdIndex:(0,b.Rx)()}))})))),preBalances:(0,b.IX)((0,b.Rx)()),postBalances:(0,b.IX)((0,b.Rx)()),logMessages:(0,b.jt)((0,b.AG)((0,b.IX)((0,b.Z_)()))),preTokenBalances:(0,b.jt)((0,b.AG)((0,b.IX)(eZ))),postTokenBalances:(0,b.jt)((0,b.AG)((0,b.IX)(eZ))),loadedAddresses:(0,b.jt)(e$),computeUnitsConsumed:(0,b.jt)((0,b.Rx)())}),eH=(0,b.dt)({err:V,fee:(0,b.Rx)(),innerInstructions:(0,b.jt)((0,b.AG)((0,b.IX)((0,b.dt)({index:(0,b.Rx)(),instructions:(0,b.IX)(eD)})))),preBalances:(0,b.IX)((0,b.Rx)()),postBalances:(0,b.IX)((0,b.Rx)()),logMessages:(0,b.jt)((0,b.AG)((0,b.IX)((0,b.Z_)()))),preTokenBalances:(0,b.jt)((0,b.AG)((0,b.IX)(eZ))),postTokenBalances:(0,b.jt)((0,b.AG)((0,b.IX)(eZ))),loadedAddresses:(0,b.jt)(e$),computeUnitsConsumed:(0,b.jt)((0,b.Rx)())}),eV=(0,b.G0)([(0,b.i0)(0),(0,b.i0)("legacy")]),eQ=jsonRpcResult((0,b.AG)((0,b.dt)({blockhash:(0,b.Z_)(),previousBlockhash:(0,b.Z_)(),parentSlot:(0,b.Rx)(),transactions:(0,b.IX)((0,b.dt)({transaction:ej,meta:(0,b.AG)(eX),version:(0,b.jt)(eV)})),rewards:(0,b.jt)((0,b.IX)((0,b.dt)({pubkey:(0,b.Z_)(),lamports:(0,b.Rx)(),postBalance:(0,b.AG)((0,b.Rx)()),rewardType:(0,b.AG)((0,b.Z_)())}))),blockTime:(0,b.AG)((0,b.Rx)()),blockHeight:(0,b.AG)((0,b.Rx)())}))),eY=jsonRpcResult((0,b.AG)((0,b.dt)({blockhash:(0,b.Z_)(),previousBlockhash:(0,b.Z_)(),parentSlot:(0,b.Rx)(),transactions:(0,b.IX)((0,b.dt)({transaction:ej,meta:(0,b.AG)(eX)})),rewards:(0,b.jt)((0,b.IX)((0,b.dt)({pubkey:(0,b.Z_)(),lamports:(0,b.Rx)(),postBalance:(0,b.AG)((0,b.Rx)()),rewardType:(0,b.AG)((0,b.Z_)())}))),blockTime:(0,b.AG)((0,b.Rx)())}))),e0=jsonRpcResult((0,b.AG)((0,b.dt)({blockhash:(0,b.Z_)(),previousBlockhash:(0,b.Z_)(),parentSlot:(0,b.Rx)(),signatures:(0,b.IX)((0,b.Z_)()),blockTime:(0,b.AG)((0,b.Rx)())}))),e1=jsonRpcResult((0,b.AG)((0,b.dt)({slot:(0,b.Rx)(),meta:eX,blockTime:(0,b.jt)((0,b.AG)((0,b.Rx)())),transaction:ej,version:(0,b.jt)(eV)}))),e8=jsonRpcResult((0,b.AG)((0,b.dt)({slot:(0,b.Rx)(),transaction:eG,meta:(0,b.AG)(eH),blockTime:(0,b.jt)((0,b.AG)((0,b.Rx)())),version:(0,b.jt)(eV)}))),e2=jsonRpcResultAndContext((0,b.dt)({blockhash:(0,b.Z_)(),feeCalculator:(0,b.dt)({lamportsPerSignature:(0,b.Rx)()})})),e5=jsonRpcResultAndContext((0,b.dt)({blockhash:(0,b.Z_)(),lastValidBlockHeight:(0,b.Rx)()})),e6=(0,b.dt)({slot:(0,b.Rx)(),numTransactions:(0,b.Rx)(),numSlots:(0,b.Rx)(),samplePeriodSecs:(0,b.Rx)()}),e4=jsonRpcResult((0,b.IX)(e6)),e3=jsonRpcResultAndContext((0,b.AG)((0,b.dt)({feeCalculator:(0,b.dt)({lamportsPerSignature:(0,b.Rx)()})}))),e9=jsonRpcResult((0,b.Z_)()),e7=jsonRpcResult((0,b.Z_)()),te=(0,b.dt)({err:V,logs:(0,b.IX)((0,b.Z_)()),signature:(0,b.Z_)()}),tt=(0,b.dt)({result:notificationResultAndContext(te),subscription:(0,b.Rx)()}),tr={"solana-client":"js/0.0.0-development"};let Connection=class Connection{constructor(e,t){var r,i;let n,s,o,a,c;this._commitment=void 0,this._confirmTransactionInitialTimeout=void 0,this._rpcEndpoint=void 0,this._rpcWsEndpoint=void 0,this._rpcClient=void 0,this._rpcRequest=void 0,this._rpcBatchRequest=void 0,this._rpcWebSocket=void 0,this._rpcWebSocketConnected=!1,this._rpcWebSocketHeartbeat=null,this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketGeneration=0,this._disableBlockhashCaching=!1,this._pollingBlockhash=!1,this._blockhashInfo={latestBlockhash:null,lastFetch:0,transactionSignatures:[],simulatedSignatures:[]},this._nextClientSubscriptionId=0,this._subscriptionDisposeFunctionsByClientSubscriptionId={},this._subscriptionCallbacksByServerSubscriptionId={},this._subscriptionsByHash={},this._subscriptionsAutoDisposedByRpc=new Set,t&&"string"==typeof t?this._commitment=t:t&&(this._commitment=t.commitment,this._confirmTransactionInitialTimeout=t.confirmTransactionInitialTimeout,n=t.wsEndpoint,s=t.httpHeaders,o=t.fetch,a=t.fetchMiddleware,c=t.disableRetryOnRateLimit),this._rpcEndpoint=function(e){if(!1===/^https?:/.test(e))throw TypeError("Endpoint URL must start with `http:` or `https:`.");return e}(e),this._rpcWsEndpoint=n||function(e){let t=e.match(J);if(null==t)throw TypeError(`Failed to validate endpoint URL \`${e}\``);let[r,i,n,s]=t,o=e.startsWith("https:")?"wss:":"ws:",a=null==n?null:parseInt(n.slice(1),10),c=null==a?"":`:${a+1}`;return`${o}//${i}${c}${s}`}(e),this._rpcClient=function(e,t,r,i,n){let s;let o=r||z;i&&(s=async(e,t)=>{let r=await new Promise((r,n)=>{try{i(e,t,(e,t)=>r([e,t]))}catch(e){n(e)}});return await o(...r)});let a=new(S())(async(r,i)=>{let a={method:"POST",body:r,agent:void 0,headers:Object.assign({"Content-Type":"application/json"},t||{},tr)};try{let t,r=5,c=500;for(;t=s?await s(e,a):await o(e,a),429===t.status&&!0!==n&&(r-=1,0!==r);)console.log(`Server responded with ${t.status} ${t.statusText}.  Retrying after ${c}ms delay...`),await sleep(c),c*=2;let l=await t.text();t.ok?i(null,l):i(Error(`${t.status} ${t.statusText}: ${l}`))}catch(e){e instanceof Error&&i(e)}finally{}},{});return a}(e,s,o,a,c),this._rpcRequest=(r=this._rpcClient,(e,t)=>new Promise((i,n)=>{r.request(e,t,(e,t)=>{if(e){n(e);return}i(t)})})),this._rpcBatchRequest=(i=this._rpcClient,e=>new Promise((t,r)=>{0===e.length&&t([]);let n=e.map(e=>i.request(e.methodName,e.args));i.request(n,(e,i)=>{if(e){r(e);return}t(i)})})),this._rpcWebSocket=new f.K(this._rpcWsEndpoint,{autoconnect:!1,max_reconnects:1/0}),this._rpcWebSocket.on("open",this._wsOnOpen.bind(this)),this._rpcWebSocket.on("error",this._wsOnError.bind(this)),this._rpcWebSocket.on("close",this._wsOnClose.bind(this)),this._rpcWebSocket.on("accountNotification",this._wsOnAccountNotification.bind(this)),this._rpcWebSocket.on("programNotification",this._wsOnProgramAccountNotification.bind(this)),this._rpcWebSocket.on("slotNotification",this._wsOnSlotNotification.bind(this)),this._rpcWebSocket.on("slotsUpdatesNotification",this._wsOnSlotUpdatesNotification.bind(this)),this._rpcWebSocket.on("signatureNotification",this._wsOnSignatureNotification.bind(this)),this._rpcWebSocket.on("rootNotification",this._wsOnRootNotification.bind(this)),this._rpcWebSocket.on("logsNotification",this._wsOnLogsNotification.bind(this))}get commitment(){return this._commitment}get rpcEndpoint(){return this._rpcEndpoint}async getBalanceAndContext(e,t){let{commitment:r,config:i}=extractCommitmentFromConfig(t),n=this._buildArgs([e.toBase58()],r,void 0,i),s=await this._rpcRequest("getBalance",n),o=(0,b.Ue)(s,jsonRpcResultAndContext((0,b.Rx)()));if("error"in o)throw new SolanaJSONRPCError(o.error,`failed to get balance for ${e.toBase58()}`);return o.result}async getBalance(e,t){return await this.getBalanceAndContext(e,t).then(e=>e.value).catch(t=>{throw Error("failed to get balance of account "+e.toBase58()+": "+t)})}async getBlockTime(e){let t=await this._rpcRequest("getBlockTime",[e]),r=(0,b.Ue)(t,jsonRpcResult((0,b.AG)((0,b.Rx)())));if("error"in r)throw new SolanaJSONRPCError(r.error,`failed to get block time for slot ${e}`);return r.result}async getMinimumLedgerSlot(){let e=await this._rpcRequest("minimumLedgerSlot",[]),t=(0,b.Ue)(e,jsonRpcResult((0,b.Rx)()));if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get minimum ledger slot");return t.result}async getFirstAvailableBlock(){let e=await this._rpcRequest("getFirstAvailableBlock",[]),t=(0,b.Ue)(e,ea);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get first available block");return t.result}async getSupply(e){let t={};t="string"==typeof e?{commitment:e}:e?{...e,commitment:e&&e.commitment||this.commitment}:{commitment:this.commitment};let r=await this._rpcRequest("getSupply",[t]),i=(0,b.Ue)(r,ec);if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get supply");return i.result}async getTokenSupply(e,t){let r=this._buildArgs([e.toBase58()],t),i=await this._rpcRequest("getTokenSupply",r),n=(0,b.Ue)(i,jsonRpcResultAndContext(el));if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get token supply");return n.result}async getTokenAccountBalance(e,t){let r=this._buildArgs([e.toBase58()],t),i=await this._rpcRequest("getTokenAccountBalance",r),n=(0,b.Ue)(i,jsonRpcResultAndContext(el));if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get token account balance");return n.result}async getTokenAccountsByOwner(e,t,r){let{commitment:i,config:n}=extractCommitmentFromConfig(r),s=[e.toBase58()];"mint"in t?s.push({mint:t.mint.toBase58()}):s.push({programId:t.programId.toBase58()});let o=this._buildArgs(s,i,"base64",n),a=await this._rpcRequest("getTokenAccountsByOwner",o),c=(0,b.Ue)(a,ed);if("error"in c)throw new SolanaJSONRPCError(c.error,`failed to get token accounts owned by account ${e.toBase58()}`);return c.result}async getParsedTokenAccountsByOwner(e,t,r){let i=[e.toBase58()];"mint"in t?i.push({mint:t.mint.toBase58()}):i.push({programId:t.programId.toBase58()});let n=this._buildArgs(i,r,"jsonParsed"),s=await this._rpcRequest("getTokenAccountsByOwner",n),o=(0,b.Ue)(s,eg);if("error"in o)throw new SolanaJSONRPCError(o.error,`failed to get token accounts owned by account ${e.toBase58()}`);return o.result}async getLargestAccounts(e){let t={...e,commitment:e&&e.commitment||this.commitment},r=t.filter||t.commitment?[t]:[],i=await this._rpcRequest("getLargestAccounts",r),n=(0,b.Ue)(i,ep);if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get largest accounts");return n.result}async getTokenLargestAccounts(e,t){let r=this._buildArgs([e.toBase58()],t),i=await this._rpcRequest("getTokenLargestAccounts",r),n=(0,b.Ue)(i,eu);if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get token largest accounts");return n.result}async getAccountInfoAndContext(e,t){let{commitment:r,config:i}=extractCommitmentFromConfig(t),n=this._buildArgs([e.toBase58()],r,"base64",i),s=await this._rpcRequest("getAccountInfo",n),o=(0,b.Ue)(s,jsonRpcResultAndContext((0,b.AG)(em)));if("error"in o)throw new SolanaJSONRPCError(o.error,`failed to get info about account ${e.toBase58()}`);return o.result}async getParsedAccountInfo(e,t){let{commitment:r,config:i}=extractCommitmentFromConfig(t),n=this._buildArgs([e.toBase58()],r,"jsonParsed",i),s=await this._rpcRequest("getAccountInfo",n),o=(0,b.Ue)(s,jsonRpcResultAndContext((0,b.AG)(ey)));if("error"in o)throw new SolanaJSONRPCError(o.error,`failed to get info about account ${e.toBase58()}`);return o.result}async getAccountInfo(e,t){try{let r=await this.getAccountInfoAndContext(e,t);return r.value}catch(t){throw Error("failed to get info about account "+e.toBase58()+": "+t)}}async getMultipleAccountsInfoAndContext(e,t){let{commitment:r,config:i}=extractCommitmentFromConfig(t),n=e.map(e=>e.toBase58()),s=this._buildArgs([n],r,"base64",i),o=await this._rpcRequest("getMultipleAccounts",s),a=(0,b.Ue)(o,jsonRpcResultAndContext((0,b.IX)((0,b.AG)(em))));if("error"in a)throw new SolanaJSONRPCError(a.error,`failed to get info for accounts ${n}`);return a.result}async getMultipleAccountsInfo(e,t){let r=await this.getMultipleAccountsInfoAndContext(e,t);return r.value}async getStakeActivation(e,t,r){let{commitment:i,config:n}=extractCommitmentFromConfig(t),s=this._buildArgs([e.toBase58()],i,void 0,{...n,epoch:null!=r?r:null==n?void 0:n.epoch}),o=await this._rpcRequest("getStakeActivation",s),a=(0,b.Ue)(o,jsonRpcResult(ek));if("error"in a)throw new SolanaJSONRPCError(a.error,`failed to get Stake Activation ${e.toBase58()}`);return a.result}async getProgramAccounts(e,t){let{commitment:r,config:i}=extractCommitmentFromConfig(t),{encoding:n,...s}=i||{},o=this._buildArgs([e.toBase58()],r,n||"base64",s),a=await this._rpcRequest("getProgramAccounts",o),c=(0,b.Ue)(a,jsonRpcResult((0,b.IX)(eb)));if("error"in c)throw new SolanaJSONRPCError(c.error,`failed to get accounts owned by program ${e.toBase58()}`);return c.result}async getParsedProgramAccounts(e,t){let{commitment:r,config:i}=extractCommitmentFromConfig(t),n=this._buildArgs([e.toBase58()],r,"jsonParsed",i),s=await this._rpcRequest("getProgramAccounts",n),o=(0,b.Ue)(s,jsonRpcResult((0,b.IX)(eS)));if("error"in o)throw new SolanaJSONRPCError(o.error,`failed to get accounts owned by program ${e.toBase58()}`);return o.result}async confirmTransaction(e,t){let r,n,s,o,a;r="string"==typeof e?e:e.signature;try{n=d().decode(r)}catch(e){throw Error("signature must be base58 encoded: "+r)}assert(64===n.length,"signature has invalid length");let c=t||this.commitment,l=!1,u=new Promise((e,t)=>{try{o=this.onSignature(r,(t,r)=>{o=void 0,l=!0,e({__type:i.PROCESSED,response:{context:r,value:t}})},c)}catch(e){t(e)}}),h=new Promise(r=>{if("string"==typeof e){let e=this._confirmTransactionInitialTimeout||6e4;switch(c){case"processed":case"recent":case"single":case"confirmed":case"singleGossip":e=this._confirmTransactionInitialTimeout||3e4}s=setTimeout(()=>r({__type:i.TIMED_OUT,timeoutMs:e}),e)}else{let checkBlockHeight=async()=>{try{let e=await this.getBlockHeight(t);return e}catch(e){return -1}};(async()=>{let t=await checkBlockHeight();if(!l){for(;t<=e.lastValidBlockHeight;)if(await sleep(1e3),l||(t=await checkBlockHeight(),l))return;r({__type:i.BLOCKHEIGHT_EXCEEDED})}})()}});try{let e=await Promise.race([u,h]);switch(e.__type){case i.BLOCKHEIGHT_EXCEEDED:throw new TransactionExpiredBlockheightExceededError(r);case i.PROCESSED:a=e.response;break;case i.TIMED_OUT:throw new TransactionExpiredTimeoutError(r,e.timeoutMs/1e3)}}finally{clearTimeout(s),o&&this.removeSignatureListener(o)}return a}async getClusterNodes(){let e=await this._rpcRequest("getClusterNodes",[]),t=(0,b.Ue)(e,jsonRpcResult((0,b.IX)(eK)));if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get cluster nodes");return t.result}async getVoteAccounts(e){let t=this._buildArgs([],e),r=await this._rpcRequest("getVoteAccounts",t),i=(0,b.Ue)(r,eW);if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get vote accounts");return i.result}async getSlot(e){let{commitment:t,config:r}=extractCommitmentFromConfig(e),i=this._buildArgs([],t,void 0,r),n=await this._rpcRequest("getSlot",i),s=(0,b.Ue)(n,jsonRpcResult((0,b.Rx)()));if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get slot");return s.result}async getSlotLeader(e){let{commitment:t,config:r}=extractCommitmentFromConfig(e),i=this._buildArgs([],t,void 0,r),n=await this._rpcRequest("getSlotLeader",i),s=(0,b.Ue)(n,jsonRpcResult((0,b.Z_)()));if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get slot leader");return s.result}async getSlotLeaders(e,t){let r=await this._rpcRequest("getSlotLeaders",[e,t]),i=(0,b.Ue)(r,jsonRpcResult((0,b.IX)(U)));if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get slot leaders");return i.result}async getSignatureStatus(e,t){let{context:r,value:i}=await this.getSignatureStatuses([e],t);assert(1===i.length);let n=i[0];return{context:r,value:n}}async getSignatureStatuses(e,t){let r=[e];t&&r.push(t);let i=await this._rpcRequest("getSignatureStatuses",r),n=(0,b.Ue)(i,eq);if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get signature status");return n.result}async getTransactionCount(e){let{commitment:t,config:r}=extractCommitmentFromConfig(e),i=this._buildArgs([],t,void 0,r),n=await this._rpcRequest("getTransactionCount",i),s=(0,b.Ue)(n,jsonRpcResult((0,b.Rx)()));if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get transaction count");return s.result}async getTotalSupply(e){let t=await this.getSupply({commitment:e,excludeNonCirculatingAccountsList:!0});return t.value.total}async getInflationGovernor(e){let t=this._buildArgs([],e),r=await this._rpcRequest("getInflationGovernor",t),i=(0,b.Ue)(r,ei);if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get inflation");return i.result}async getInflationReward(e,t,r){let{commitment:i,config:n}=extractCommitmentFromConfig(r),s=this._buildArgs([e.map(e=>e.toBase58())],i,void 0,{...n,epoch:null!=t?t:null==n?void 0:n.epoch}),o=await this._rpcRequest("getInflationReward",s),a=(0,b.Ue)(o,Z);if("error"in a)throw new SolanaJSONRPCError(a.error,"failed to get inflation reward");return a.result}async getEpochInfo(e){let{commitment:t,config:r}=extractCommitmentFromConfig(e),i=this._buildArgs([],t,void 0,r),n=await this._rpcRequest("getEpochInfo",i),s=(0,b.Ue)(n,en);if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get epoch info");return s.result}async getEpochSchedule(){let e=await this._rpcRequest("getEpochSchedule",[]),t=(0,b.Ue)(e,es);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get epoch schedule");let r=t.result;return new EpochSchedule(r.slotsPerEpoch,r.leaderScheduleSlotOffset,r.warmup,r.firstNormalEpoch,r.firstNormalSlot)}async getLeaderSchedule(){let e=await this._rpcRequest("getLeaderSchedule",[]),t=(0,b.Ue)(e,eo);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get leader schedule");return t.result}async getMinimumBalanceForRentExemption(e,t){let r=this._buildArgs([e],t),i=await this._rpcRequest("getMinimumBalanceForRentExemption",r),n=(0,b.Ue)(i,eN);return"error"in n?(console.warn("Unable to fetch minimum balance for rent exemption"),0):n.result}async getRecentBlockhashAndContext(e){let t=this._buildArgs([],e),r=await this._rpcRequest("getRecentBlockhash",t),i=(0,b.Ue)(r,e2);if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get recent blockhash");return i.result}async getRecentPerformanceSamples(e){let t=await this._rpcRequest("getRecentPerformanceSamples",e?[e]:[]),r=(0,b.Ue)(t,e4);if("error"in r)throw new SolanaJSONRPCError(r.error,"failed to get recent performance samples");return r.result}async getFeeCalculatorForBlockhash(e,t){let r=this._buildArgs([e],t),i=await this._rpcRequest("getFeeCalculatorForBlockhash",r),n=(0,b.Ue)(i,e3);if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get fee calculator");let{context:s,value:o}=n.result;return{context:s,value:null!==o?o.feeCalculator:null}}async getFeeForMessage(e,t){let r=e.serialize().toString("base64"),i=this._buildArgs([r],t),n=await this._rpcRequest("getFeeForMessage",i),s=(0,b.Ue)(n,jsonRpcResultAndContext((0,b.AG)((0,b.Rx)())));if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get slot");if(null===s.result)throw Error("invalid blockhash");return s.result}async getRecentBlockhash(e){try{let t=await this.getRecentBlockhashAndContext(e);return t.value}catch(e){throw Error("failed to get recent blockhash: "+e)}}async getLatestBlockhash(e){try{let t=await this.getLatestBlockhashAndContext(e);return t.value}catch(e){throw Error("failed to get recent blockhash: "+e)}}async getLatestBlockhashAndContext(e){let{commitment:t,config:r}=extractCommitmentFromConfig(e),i=this._buildArgs([],t,void 0,r),n=await this._rpcRequest("getLatestBlockhash",i),s=(0,b.Ue)(n,e5);if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get latest blockhash");return s.result}async getVersion(){let e=await this._rpcRequest("getVersion",[]),t=(0,b.Ue)(e,jsonRpcResult(ee));if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get version");return t.result}async getGenesisHash(){let e=await this._rpcRequest("getGenesisHash",[]),t=(0,b.Ue)(e,jsonRpcResult((0,b.Z_)()));if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get genesis hash");return t.result}async getBlock(e,t){let{commitment:r,config:i}=extractCommitmentFromConfig(t),n=this._buildArgsAtLeastConfirmed([e],r,void 0,i),s=await this._rpcRequest("getBlock",n),o=(0,b.Ue)(s,eQ);if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get confirmed block");let a=o.result;return a?{...a,transactions:a.transactions.map(({transaction:e,meta:t,version:r})=>({meta:t,transaction:{...e,message:versionedMessageFromResponse(r,e.message)},version:r}))}:a}async getBlockHeight(e){let{commitment:t,config:r}=extractCommitmentFromConfig(e),i=this._buildArgs([],t,void 0,r),n=await this._rpcRequest("getBlockHeight",i),s=(0,b.Ue)(n,jsonRpcResult((0,b.Rx)()));if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get block height information");return s.result}async getBlockProduction(e){let t,r;if("string"==typeof e)r=e;else if(e){let{commitment:i,...n}=e;r=i,t=n}let i=this._buildArgs([],r,"base64",t),n=await this._rpcRequest("getBlockProduction",i),s=(0,b.Ue)(n,er);if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get block production information");return s.result}async getTransaction(e,t){let{commitment:r,config:i}=extractCommitmentFromConfig(t),n=this._buildArgsAtLeastConfirmed([e],r,void 0,i),s=await this._rpcRequest("getTransaction",n),o=(0,b.Ue)(s,e1);if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get transaction");let a=o.result;return a?{...a,transaction:{...a.transaction,message:versionedMessageFromResponse(a.version,a.transaction.message)}}:a}async getParsedTransaction(e,t){let{commitment:r,config:i}=extractCommitmentFromConfig(t),n=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",i),s=await this._rpcRequest("getTransaction",n),o=(0,b.Ue)(s,e8);if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get transaction");return o.result}async getParsedTransactions(e,t){let{commitment:r,config:i}=extractCommitmentFromConfig(t),n=e.map(e=>{let t=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",i);return{methodName:"getTransaction",args:t}}),s=await this._rpcBatchRequest(n),o=s.map(e=>{let t=(0,b.Ue)(e,e8);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get transactions");return t.result});return o}async getTransactions(e,t){let{commitment:r,config:i}=extractCommitmentFromConfig(t),n=e.map(e=>{let t=this._buildArgsAtLeastConfirmed([e],r,void 0,i);return{methodName:"getTransaction",args:t}}),s=await this._rpcBatchRequest(n),o=s.map(e=>{let t=(0,b.Ue)(e,e1);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get transactions");let r=t.result;return r?{...r,transaction:{...r.transaction,message:versionedMessageFromResponse(r.version,r.transaction.message)}}:r});return o}async getConfirmedBlock(e,t){let r=this._buildArgsAtLeastConfirmed([e],t),i=await this._rpcRequest("getConfirmedBlock",r),n=(0,b.Ue)(i,eY);if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get confirmed block");let s=n.result;if(!s)throw Error("Confirmed block "+e+" not found");let o={...s,transactions:s.transactions.map(({transaction:e,meta:t})=>{let r=new Message(e.message);return{meta:t,transaction:{...e,message:r}}})};return{...o,transactions:o.transactions.map(({transaction:e,meta:t})=>({meta:t,transaction:Transaction.populate(e.message,e.signatures)}))}}async getBlocks(e,t,r){let i=this._buildArgsAtLeastConfirmed(void 0!==t?[e,t]:[e],r),n=await this._rpcRequest("getBlocks",i),s=(0,b.Ue)(n,jsonRpcResult((0,b.IX)((0,b.Rx)())));if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get blocks");return s.result}async getBlockSignatures(e,t){let r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),i=await this._rpcRequest("getBlock",r),n=(0,b.Ue)(i,e0);if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get block");let s=n.result;if(!s)throw Error("Block "+e+" not found");return s}async getConfirmedBlockSignatures(e,t){let r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),i=await this._rpcRequest("getConfirmedBlock",r),n=(0,b.Ue)(i,e0);if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get confirmed block");let s=n.result;if(!s)throw Error("Confirmed block "+e+" not found");return s}async getConfirmedTransaction(e,t){let r=this._buildArgsAtLeastConfirmed([e],t),i=await this._rpcRequest("getConfirmedTransaction",r),n=(0,b.Ue)(i,e1);if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get transaction");let s=n.result;if(!s)return s;let o=new Message(s.transaction.message),a=s.transaction.signatures;return{...s,transaction:Transaction.populate(o,a)}}async getParsedConfirmedTransaction(e,t){let r=this._buildArgsAtLeastConfirmed([e],t,"jsonParsed"),i=await this._rpcRequest("getConfirmedTransaction",r),n=(0,b.Ue)(i,e8);if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get confirmed transaction");return n.result}async getParsedConfirmedTransactions(e,t){let r=e.map(e=>{let r=this._buildArgsAtLeastConfirmed([e],t,"jsonParsed");return{methodName:"getConfirmedTransaction",args:r}}),i=await this._rpcBatchRequest(r),n=i.map(e=>{let t=(0,b.Ue)(e,e8);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get confirmed transactions");return t.result});return n}async getConfirmedSignaturesForAddress(e,t,r){let i={},n=await this.getFirstAvailableBlock();for(;!("until"in i)&&!(--t<=0)&&!(t<n);)try{let e=await this.getConfirmedBlockSignatures(t,"finalized");e.signatures.length>0&&(i.until=e.signatures[e.signatures.length-1].toString())}catch(e){if(e instanceof Error&&e.message.includes("skipped"))continue;throw e}let s=await this.getSlot("finalized");for(;!("before"in i)&&!(++r>s);)try{let e=await this.getConfirmedBlockSignatures(r);e.signatures.length>0&&(i.before=e.signatures[e.signatures.length-1].toString())}catch(e){if(e instanceof Error&&e.message.includes("skipped"))continue;throw e}let o=await this.getConfirmedSignaturesForAddress2(e,i);return o.map(e=>e.signature)}async getConfirmedSignaturesForAddress2(e,t,r){let i=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),n=await this._rpcRequest("getConfirmedSignaturesForAddress2",i),s=(0,b.Ue)(n,ew);if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get confirmed signatures for address");return s.result}async getSignaturesForAddress(e,t,r){let i=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),n=await this._rpcRequest("getSignaturesForAddress",i),s=(0,b.Ue)(n,e_);if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get signatures for address");return s.result}async getAddressLookupTable(e,t){let{context:r,value:i}=await this.getAccountInfoAndContext(e,t),n=null;return null!==i&&(n=new AddressLookupTableAccount({key:e,state:AddressLookupTableAccount.deserialize(i.data)})),{context:r,value:n}}async getNonceAndContext(e,t){let{context:r,value:i}=await this.getAccountInfoAndContext(e,t),n=null;return null!==i&&(n=NonceAccount.fromAccountData(i.data)),{context:r,value:n}}async getNonce(e,t){return await this.getNonceAndContext(e,t).then(e=>e.value).catch(t=>{throw Error("failed to get nonce for account "+e.toBase58()+": "+t)})}async requestAirdrop(e,t){let r=await this._rpcRequest("requestAirdrop",[e.toBase58(),t]),i=(0,b.Ue)(r,e9);if("error"in i)throw new SolanaJSONRPCError(i.error,`airdrop to ${e.toBase58()} failed`);return i.result}async _blockhashWithExpiryBlockHeight(e){if(!e){for(;this._pollingBlockhash;)await sleep(100);let e=Date.now()-this._blockhashInfo.lastFetch;if(null!==this._blockhashInfo.latestBlockhash&&!(e>=3e4))return this._blockhashInfo.latestBlockhash}return await this._pollNewBlockhash()}async _pollNewBlockhash(){this._pollingBlockhash=!0;try{let e=Date.now(),t=this._blockhashInfo.latestBlockhash,r=t?t.blockhash:null;for(let e=0;e<50;e++){let e=await this.getLatestBlockhash("finalized");if(r!==e.blockhash)return this._blockhashInfo={latestBlockhash:e,lastFetch:Date.now(),transactionSignatures:[],simulatedSignatures:[]},e;await sleep(200)}throw Error(`Unable to obtain a new blockhash after ${Date.now()-e}ms`)}finally{this._pollingBlockhash=!1}}async getStakeMinimumDelegation(e){let{commitment:t,config:r}=extractCommitmentFromConfig(e),i=this._buildArgs([],t,"base64",r),n=await this._rpcRequest("getStakeMinimumDelegation",i),s=(0,b.Ue)(n,jsonRpcResultAndContext((0,b.Rx)()));if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get stake minimum delegation");return s.result}async simulateTransaction(e,t,r){let i;if("message"in e){let i=e.serialize(),n=s.lW.from(i).toString("base64");if(Array.isArray(t)||void 0!==r)throw Error("Invalid arguments");let o=t||{};o.encoding="base64","commitment"in o||(o.commitment=this.commitment);let a=[n,o],c=await this._rpcRequest("simulateTransaction",a),l=(0,b.Ue)(c,et);if("error"in l)throw Error("failed to simulate transaction: "+l.error.message);return l.result}if(e instanceof Transaction?((i=new Transaction).feePayer=e.feePayer,i.instructions=e.instructions,i.nonceInfo=e.nonceInfo,i.signatures=e.signatures):(i=Transaction.populate(e))._message=i._json=void 0,void 0!==t&&!Array.isArray(t))throw Error("Invalid arguments");if(i.nonceInfo&&t)i.sign(...t);else{let e=this._disableBlockhashCaching;for(;;){let r=await this._blockhashWithExpiryBlockHeight(e);if(i.lastValidBlockHeight=r.lastValidBlockHeight,i.recentBlockhash=r.blockhash,!t)break;if(i.sign(...t),!i.signature)throw Error("!signature");let n=i.signature.toString("base64");if(this._blockhashInfo.simulatedSignatures.includes(n)||this._blockhashInfo.transactionSignatures.includes(n))e=!0;else{this._blockhashInfo.simulatedSignatures.push(n);break}}}let n=i._compile(),o=n.serialize(),a=i._serialize(o),c=a.toString("base64"),l={encoding:"base64",commitment:this.commitment};if(r){let e=(Array.isArray(r)?r:n.nonProgramIds()).map(e=>e.toBase58());l.accounts={encoding:"base64",addresses:e}}t&&(l.sigVerify=!0);let u=[c,l],d=await this._rpcRequest("simulateTransaction",u),h=(0,b.Ue)(d,et);if("error"in h){let e;if("data"in h.error&&(e=h.error.data.logs)&&Array.isArray(e)){let t="\n    ",r=t+e.join(t);console.error(h.error.message,r)}throw new SendTransactionError("failed to simulate transaction: "+h.error.message,e)}return h.result}async sendTransaction(e,t,r){if("version"in e){if(t&&Array.isArray(t))throw Error("Invalid arguments");let i=e.serialize();return await this.sendRawTransaction(i,r)}if(void 0===t||!Array.isArray(t))throw Error("Invalid arguments");if(e.nonceInfo)e.sign(...t);else{let r=this._disableBlockhashCaching;for(;;){let i=await this._blockhashWithExpiryBlockHeight(r);if(e.lastValidBlockHeight=i.lastValidBlockHeight,e.recentBlockhash=i.blockhash,e.sign(...t),!e.signature)throw Error("!signature");let n=e.signature.toString("base64");if(this._blockhashInfo.transactionSignatures.includes(n))r=!0;else{this._blockhashInfo.transactionSignatures.push(n);break}}}let i=e.serialize();return await this.sendRawTransaction(i,r)}async sendRawTransaction(e,t){let r=toBuffer(e).toString("base64"),i=await this.sendEncodedTransaction(r,t);return i}async sendEncodedTransaction(e,t){let r={encoding:"base64"},i=t&&t.skipPreflight,n=t&&t.preflightCommitment||this.commitment;t&&null!=t.maxRetries&&(r.maxRetries=t.maxRetries),t&&null!=t.minContextSlot&&(r.minContextSlot=t.minContextSlot),i&&(r.skipPreflight=i),n&&(r.preflightCommitment=n);let s=[e,r],o=await this._rpcRequest("sendTransaction",s),a=(0,b.Ue)(o,e7);if("error"in a){let e;throw"data"in a.error&&(e=a.error.data.logs),new SendTransactionError("failed to send transaction: "+a.error.message,e)}return a.result}_wsOnOpen(){this._rpcWebSocketConnected=!0,this._rpcWebSocketHeartbeat=setInterval(()=>{this._rpcWebSocket.notify("ping").catch(()=>{})},5e3),this._updateSubscriptions()}_wsOnError(e){this._rpcWebSocketConnected=!1,console.error("ws error:",e.message)}_wsOnClose(e){if(this._rpcWebSocketConnected=!1,this._rpcWebSocketGeneration++,this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null),this._rpcWebSocketHeartbeat&&(clearInterval(this._rpcWebSocketHeartbeat),this._rpcWebSocketHeartbeat=null),1e3===e){this._updateSubscriptions();return}this._subscriptionCallbacksByServerSubscriptionId={},Object.entries(this._subscriptionsByHash).forEach(([e,t])=>{this._subscriptionsByHash[e]={...t,state:"pending"}})}async _updateSubscriptions(){if(0===Object.keys(this._subscriptionsByHash).length){this._rpcWebSocketConnected&&(this._rpcWebSocketConnected=!1,this._rpcWebSocketIdleTimeout=setTimeout(()=>{this._rpcWebSocketIdleTimeout=null;try{this._rpcWebSocket.close()}catch(e){e instanceof Error&&console.log(`Error when closing socket connection: ${e.message}`)}},500));return}if(null!==this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketConnected=!0),!this._rpcWebSocketConnected){this._rpcWebSocket.connect();return}let e=this._rpcWebSocketGeneration,isCurrentConnectionStillActive=()=>e===this._rpcWebSocketGeneration;await Promise.all(Object.keys(this._subscriptionsByHash).map(async e=>{let t=this._subscriptionsByHash[e];if(void 0!==t)switch(t.state){case"pending":case"unsubscribed":if(0===t.callbacks.size){delete this._subscriptionsByHash[e],"unsubscribed"===t.state&&delete this._subscriptionCallbacksByServerSubscriptionId[t.serverSubscriptionId],await this._updateSubscriptions();return}await (async()=>{let{args:r,method:i}=t;try{this._subscriptionsByHash[e]={...t,state:"subscribing"};let n=await this._rpcWebSocket.call(i,r);this._subscriptionsByHash[e]={...t,serverSubscriptionId:n,state:"subscribed"},this._subscriptionCallbacksByServerSubscriptionId[n]=t.callbacks,await this._updateSubscriptions()}catch(n){if(n instanceof Error&&console.error(`${i} error for argument`,r,n.message),!isCurrentConnectionStillActive())return;this._subscriptionsByHash[e]={...t,state:"pending"},await this._updateSubscriptions()}})();break;case"subscribed":0===t.callbacks.size&&await (async()=>{let{serverSubscriptionId:r,unsubscribeMethod:i}=t;if(this._subscriptionsAutoDisposedByRpc.has(r))this._subscriptionsAutoDisposedByRpc.delete(r);else{this._subscriptionsByHash[e]={...t,state:"unsubscribing"};try{await this._rpcWebSocket.call(i,[r])}catch(r){if(r instanceof Error&&console.error(`${i} error:`,r.message),!isCurrentConnectionStillActive())return;this._subscriptionsByHash[e]={...t,state:"subscribed"},await this._updateSubscriptions();return}}this._subscriptionsByHash[e]={...t,state:"unsubscribed"},await this._updateSubscriptions()})()}}))}_handleServerNotification(e,t){let r=this._subscriptionCallbacksByServerSubscriptionId[e];void 0!==r&&r.forEach(e=>{try{e(...t)}catch(e){console.error(e)}})}_wsOnAccountNotification(e){let{result:t,subscription:r}=(0,b.Ue)(e,eI);this._handleServerNotification(r,[t.value,t.context])}_makeSubscription(e,t){let r=this._nextClientSubscriptionId++,i=fastStableStringify$1([e.method,t],!0),n=this._subscriptionsByHash[i];return void 0===n?this._subscriptionsByHash[i]={...e,args:t,callbacks:new Set([e.callback]),state:"pending"}:n.callbacks.add(e.callback),this._subscriptionDisposeFunctionsByClientSubscriptionId[r]=async()=>{delete this._subscriptionDisposeFunctionsByClientSubscriptionId[r];let t=this._subscriptionsByHash[i];assert(void 0!==t,`Could not find a \`Subscription\` when tearing down client subscription #${r}`),t.callbacks.delete(e.callback),await this._updateSubscriptions()},this._updateSubscriptions(),r}onAccountChange(e,t,r){let i=this._buildArgs([e.toBase58()],r||this._commitment||"finalized","base64");return this._makeSubscription({callback:t,method:"accountSubscribe",unsubscribeMethod:"accountUnsubscribe"},i)}async removeAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"account change")}_wsOnProgramAccountNotification(e){let{result:t,subscription:r}=(0,b.Ue)(e,eR);this._handleServerNotification(r,[{accountId:t.value.pubkey,accountInfo:t.value.account},t.context])}onProgramAccountChange(e,t,r,i){let n=this._buildArgs([e.toBase58()],r||this._commitment||"finalized","base64",i?{filters:i}:void 0);return this._makeSubscription({callback:t,method:"programSubscribe",unsubscribeMethod:"programUnsubscribe"},n)}async removeProgramAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"program account change")}onLogs(e,t,r){let i=this._buildArgs(["object"==typeof e?{mentions:[e.toString()]}:e],r||this._commitment||"finalized");return this._makeSubscription({callback:t,method:"logsSubscribe",unsubscribeMethod:"logsUnsubscribe"},i)}async removeOnLogsListener(e){await this._unsubscribeClientSubscription(e,"logs")}_wsOnLogsNotification(e){let{result:t,subscription:r}=(0,b.Ue)(e,tt);this._handleServerNotification(r,[t.value,t.context])}_wsOnSlotNotification(e){let{result:t,subscription:r}=(0,b.Ue)(e,eP);this._handleServerNotification(r,[t])}onSlotChange(e){return this._makeSubscription({callback:e,method:"slotSubscribe",unsubscribeMethod:"slotUnsubscribe"},[])}async removeSlotChangeListener(e){await this._unsubscribeClientSubscription(e,"slot change")}_wsOnSlotUpdatesNotification(e){let{result:t,subscription:r}=(0,b.Ue)(e,eC);this._handleServerNotification(r,[t])}onSlotUpdate(e){return this._makeSubscription({callback:e,method:"slotsUpdatesSubscribe",unsubscribeMethod:"slotsUpdatesUnsubscribe"},[])}async removeSlotUpdateListener(e){await this._unsubscribeClientSubscription(e,"slot update")}async _unsubscribeClientSubscription(e,t){let r=this._subscriptionDisposeFunctionsByClientSubscriptionId[e];r?await r():console.warn(`Ignored unsubscribe request because an active subscription with id \`${e}\` for '${t}' events could not be found.`)}_buildArgs(e,t,r,i){let n=t||this._commitment;if(n||r||i){let t={};r&&(t.encoding=r),n&&(t.commitment=n),i&&(t=Object.assign(t,i)),e.push(t)}return e}_buildArgsAtLeastConfirmed(e,t,r,i){let n=t||this._commitment;if(n&&!["confirmed","finalized"].includes(n))throw Error("Using Connection with default commitment: `"+this._commitment+"`, but method requires at least `confirmed`");return this._buildArgs(e,t,r,i)}_wsOnSignatureNotification(e){let{result:t,subscription:r}=(0,b.Ue)(e,eB);"receivedSignature"!==t.value&&this._subscriptionsAutoDisposedByRpc.add(r),this._handleServerNotification(r,"receivedSignature"===t.value?[{type:"received"},t.context]:[{type:"status",result:t.value},t.context])}onSignature(e,t,r){let i=this._buildArgs([e],r||this._commitment||"finalized"),n=this._makeSubscription({callback:(e,r)=>{if("status"===e.type){t(e.result,r);try{this.removeSignatureListener(n)}catch(e){}}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},i);return n}onSignatureWithOptions(e,t,r){let{commitment:i,...n}={...r,commitment:r&&r.commitment||this._commitment||"finalized"},s=this._buildArgs([e],i,void 0,n),o=this._makeSubscription({callback:(e,r)=>{t(e,r);try{this.removeSignatureListener(o)}catch(e){}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},s);return o}async removeSignatureListener(e){await this._unsubscribeClientSubscription(e,"signature result")}_wsOnRootNotification(e){let{result:t,subscription:r}=(0,b.Ue)(e,eE);this._handleServerNotification(r,[t])}onRootChange(e){return this._makeSubscription({callback:e,method:"rootSubscribe",unsubscribeMethod:"rootUnsubscribe"},[])}async removeRootChangeListener(e){await this._unsubscribeClientSubscription(e,"root change")}};let Keypair=class Keypair{constructor(e){this._keypair=void 0,this._keypair=null!=e?e:generateKeypair()}static generate(){return new Keypair(generateKeypair())}static fromSecretKey(e,t){if(64!==e.byteLength)throw Error("bad secret key size");let r=e.slice(32,64);if(!t||!t.skipValidation){let t=e.slice(0,32),i=I(t);for(let e=0;e<32;e++)if(r[e]!==i[e])throw Error("provided secretKey is invalid")}return new Keypair({publicKey:r,secretKey:e})}static fromSeed(e){let t=I(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),new Keypair({publicKey:t,secretKey:r})}get publicKey(){return new PublicKey(this._keypair.publicKey)}get secretKey(){return new Uint8Array(this._keypair.secretKey)}};Object.freeze({CreateLookupTable:{index:0,layout:p.n_([p.Jq("instruction"),u64("recentSlot"),p.u8("bumpSeed")])},FreezeLookupTable:{index:1,layout:p.n_([p.Jq("instruction")])},ExtendLookupTable:{index:2,layout:p.n_([p.Jq("instruction"),u64(),p.A9(publicKey(),p.cv(p.Jq(),-8),"addresses")])},DeactivateLookupTable:{index:3,layout:p.n_([p.Jq("instruction")])},CloseLookupTable:{index:4,layout:p.n_([p.Jq("instruction")])}}),new PublicKey("AddressLookupTab1e1111111111111111111111111"),Object.freeze({RequestUnits:{index:0,layout:p.n_([p.u8("instruction"),p.Jq("units"),p.Jq("additionalFee")])},RequestHeapFrame:{index:1,layout:p.n_([p.u8("instruction"),p.Jq("bytes")])},SetComputeUnitLimit:{index:2,layout:p.n_([p.u8("instruction"),p.Jq("units")])},SetComputeUnitPrice:{index:3,layout:p.n_([p.u8("instruction"),u64("microLamports")])}}),new PublicKey("ComputeBudget111111111111111111111111111111");let ti=p.n_([p.u8("numSignatures"),p.u8("padding"),p.KB("signatureOffset"),p.KB("signatureInstructionIndex"),p.KB("publicKeyOffset"),p.KB("publicKeyInstructionIndex"),p.KB("messageDataOffset"),p.KB("messageDataSize"),p.KB("messageInstructionIndex")]);let Ed25519Program=class Ed25519Program{constructor(){}static createInstructionWithPublicKey(e){let{publicKey:t,message:r,signature:i,instructionIndex:n}=e;assert(32===t.length,`Public Key must be 32 bytes but received ${t.length} bytes`),assert(64===i.length,`Signature must be 64 bytes but received ${i.length} bytes`);let o=ti.span,a=o+t.length,c=a+i.length,l=s.lW.alloc(c+r.length),u=null==n?65535:n;return ti.encode({numSignatures:1,padding:0,signatureOffset:a,signatureInstructionIndex:u,publicKeyOffset:o,publicKeyInstructionIndex:u,messageDataOffset:c,messageDataSize:r.length,messageInstructionIndex:u},l),l.fill(t,o),l.fill(i,a),l.fill(r,c),new TransactionInstruction({keys:[],programId:Ed25519Program.programId,data:l})}static createInstructionWithPrivateKey(e){let{privateKey:t,message:r,instructionIndex:i}=e;assert(64===t.length,`Private key must be 64 bytes but received ${t.length} bytes`);try{let e=Keypair.fromSecretKey(t),n=e.publicKey.toBytes(),s=sign(r,e.secretKey);return this.createInstructionWithPublicKey({publicKey:n,message:r,signature:s,instructionIndex:i})}catch(e){throw Error(`Error creating instruction; ${e}`)}}};Ed25519Program.programId=new PublicKey("Ed25519SigVerify111111111111111111111111111"),_.P6.hmacSha256Sync=(e,...t)=>{let r=w.b.create(h.J,e);return t.forEach(e=>r.update(e)),r.digest()};let ecdsaSign=(e,t)=>_.kS(e,t,{der:!1,recovered:!0});_.P6.isValidPrivateKey;let tn=_.$3,ts=p.n_([p.u8("numSignatures"),p.KB("signatureOffset"),p.u8("signatureInstructionIndex"),p.KB("ethAddressOffset"),p.u8("ethAddressInstructionIndex"),p.KB("messageDataOffset"),p.KB("messageDataSize"),p.u8("messageInstructionIndex"),p.Ik(20,"ethAddress"),p.Ik(64,"signature"),p.u8("recoveryId")]);let Secp256k1Program=class Secp256k1Program{constructor(){}static publicKeyToEthAddress(e){assert(64===e.length,`Public key must be 64 bytes but received ${e.length} bytes`);try{return s.lW.from((0,k.fr)(toBuffer(e))).slice(-20)}catch(e){throw Error(`Error constructing Ethereum address: ${e}`)}}static createInstructionWithPublicKey(e){let{publicKey:t,message:r,signature:i,recoveryId:n,instructionIndex:s}=e;return Secp256k1Program.createInstructionWithEthAddress({ethAddress:Secp256k1Program.publicKeyToEthAddress(t),message:r,signature:i,recoveryId:n,instructionIndex:s})}static createInstructionWithEthAddress(e){let t;let{ethAddress:r,message:i,signature:n,recoveryId:o,instructionIndex:a=0}=e;assert(20===(t="string"==typeof r?r.startsWith("0x")?s.lW.from(r.substr(2),"hex"):s.lW.from(r,"hex"):r).length,`Address must be 20 bytes but received ${t.length} bytes`);let c=12+t.length,l=c+n.length+1,u=s.lW.alloc(ts.span+i.length);return ts.encode({numSignatures:1,signatureOffset:c,signatureInstructionIndex:a,ethAddressOffset:12,ethAddressInstructionIndex:a,messageDataOffset:l,messageDataSize:i.length,messageInstructionIndex:a,signature:toBuffer(n),ethAddress:toBuffer(t),recoveryId:o},u),u.fill(toBuffer(i),ts.span),new TransactionInstruction({keys:[],programId:Secp256k1Program.programId,data:u})}static createInstructionWithPrivateKey(e){let{privateKey:t,message:r,instructionIndex:i}=e;assert(32===t.length,`Private key must be 32 bytes but received ${t.length} bytes`);try{let e=toBuffer(t),n=tn(e,!1).slice(1),o=s.lW.from((0,k.fr)(toBuffer(r))),[a,c]=ecdsaSign(o,e);return this.createInstructionWithPublicKey({publicKey:n,message:r,signature:a,recoveryId:c,instructionIndex:i})}catch(e){throw Error(`Error creating instruction; ${e}`)}}};Secp256k1Program.programId=new PublicKey("KeccakSecp256k11111111111111111111111111111");let to=new PublicKey("StakeConfig11111111111111111111111111111111");let Lockup=class Lockup{constructor(e,t,r){this.unixTimestamp=void 0,this.epoch=void 0,this.custodian=void 0,this.unixTimestamp=e,this.epoch=t,this.custodian=r}};Lockup.default=new Lockup(0,0,PublicKey.default);let ta=Object.freeze({Initialize:{index:0,layout:p.n_([p.Jq("instruction"),((e="authorized")=>p.n_([publicKey("staker"),publicKey("withdrawer")],e))(),((e="lockup")=>p.n_([p.gM("unixTimestamp"),p.gM("epoch"),publicKey("custodian")],e))()])},Authorize:{index:1,layout:p.n_([p.Jq("instruction"),publicKey("newAuthorized"),p.Jq("stakeAuthorizationType")])},Delegate:{index:2,layout:p.n_([p.Jq("instruction")])},Split:{index:3,layout:p.n_([p.Jq("instruction"),p.gM("lamports")])},Withdraw:{index:4,layout:p.n_([p.Jq("instruction"),p.gM("lamports")])},Deactivate:{index:5,layout:p.n_([p.Jq("instruction")])},Merge:{index:7,layout:p.n_([p.Jq("instruction")])},AuthorizeWithSeed:{index:8,layout:p.n_([p.Jq("instruction"),publicKey("newAuthorized"),p.Jq("stakeAuthorizationType"),rustString("authoritySeed"),publicKey("authorityOwner")])}});Object.freeze({Staker:{index:0},Withdrawer:{index:1}});let StakeProgram=class StakeProgram{constructor(){}static initialize(e){let{stakePubkey:t,authorized:r,lockup:i}=e,n=i||Lockup.default,s=ta.Initialize,o=encodeData(s,{authorized:{staker:toBuffer(r.staker.toBuffer()),withdrawer:toBuffer(r.withdrawer.toBuffer())},lockup:{unixTimestamp:n.unixTimestamp,epoch:n.epoch,custodian:toBuffer(n.custodian.toBuffer())}}),a={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:E,isSigner:!1,isWritable:!1}],programId:this.programId,data:o};return new TransactionInstruction(a)}static createAccountWithSeed(e){let t=new Transaction;t.add(SystemProgram.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:this.space,programId:this.programId}));let{stakePubkey:r,authorized:i,lockup:n}=e;return t.add(this.initialize({stakePubkey:r,authorized:i,lockup:n}))}static createAccount(e){let t=new Transaction;t.add(SystemProgram.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,lamports:e.lamports,space:this.space,programId:this.programId}));let{stakePubkey:r,authorized:i,lockup:n}=e;return t.add(this.initialize({stakePubkey:r,authorized:i,lockup:n}))}static delegate(e){let{stakePubkey:t,authorizedPubkey:r,votePubkey:i}=e,n=ta.Delegate,s=encodeData(n);return new Transaction().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!1},{pubkey:C,isSigner:!1,isWritable:!1},{pubkey:K,isSigner:!1,isWritable:!1},{pubkey:to,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}static authorize(e){let{stakePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:i,stakeAuthorizationType:n,custodianPubkey:s}=e,o=ta.Authorize,a=encodeData(o,{newAuthorized:toBuffer(i.toBuffer()),stakeAuthorizationType:n.index}),c=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:C,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return s&&c.push({pubkey:s,isSigner:!1,isWritable:!1}),new Transaction().add({keys:c,programId:this.programId,data:a})}static authorizeWithSeed(e){let{stakePubkey:t,authorityBase:r,authoritySeed:i,authorityOwner:n,newAuthorizedPubkey:s,stakeAuthorizationType:o,custodianPubkey:a}=e,c=ta.AuthorizeWithSeed,l=encodeData(c,{newAuthorized:toBuffer(s.toBuffer()),stakeAuthorizationType:o.index,authoritySeed:i,authorityOwner:toBuffer(n.toBuffer())}),u=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1},{pubkey:C,isSigner:!1,isWritable:!1}];return a&&u.push({pubkey:a,isSigner:!1,isWritable:!1}),new Transaction().add({keys:u,programId:this.programId,data:l})}static splitInstruction(e){let{stakePubkey:t,authorizedPubkey:r,splitStakePubkey:i,lamports:n}=e,s=ta.Split,o=encodeData(s,{lamports:n});return new TransactionInstruction({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:o})}static split(e){let t=new Transaction;return t.add(SystemProgram.createAccount({fromPubkey:e.authorizedPubkey,newAccountPubkey:e.splitStakePubkey,lamports:0,space:this.space,programId:this.programId})),t.add(this.splitInstruction(e))}static splitWithSeed(e){let{stakePubkey:t,authorizedPubkey:r,splitStakePubkey:i,basePubkey:n,seed:s,lamports:o}=e,a=new Transaction;return a.add(SystemProgram.allocate({accountPubkey:i,basePubkey:n,seed:s,space:this.space,programId:this.programId})),a.add(this.splitInstruction({stakePubkey:t,authorizedPubkey:r,splitStakePubkey:i,lamports:o}))}static merge(e){let{stakePubkey:t,sourceStakePubKey:r,authorizedPubkey:i}=e,n=ta.Merge,s=encodeData(n);return new Transaction().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:C,isSigner:!1,isWritable:!1},{pubkey:K,isSigner:!1,isWritable:!1},{pubkey:i,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}static withdraw(e){let{stakePubkey:t,authorizedPubkey:r,toPubkey:i,lamports:n,custodianPubkey:s}=e,o=ta.Withdraw,a=encodeData(o,{lamports:n}),c=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:C,isSigner:!1,isWritable:!1},{pubkey:K,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return s&&c.push({pubkey:s,isSigner:!1,isWritable:!1}),new Transaction().add({keys:c,programId:this.programId,data:a})}static deactivate(e){let{stakePubkey:t,authorizedPubkey:r}=e,i=ta.Deactivate,n=encodeData(i);return new Transaction().add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:C,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}};StakeProgram.programId=new PublicKey("Stake11111111111111111111111111111111111111"),StakeProgram.space=200;let tc=Object.freeze({InitializeAccount:{index:0,layout:p.n_([p.Jq("instruction"),((e="voteInit")=>p.n_([publicKey("nodePubkey"),publicKey("authorizedVoter"),publicKey("authorizedWithdrawer"),p.u8("commission")],e))()])},Authorize:{index:1,layout:p.n_([p.Jq("instruction"),publicKey("newAuthorized"),p.Jq("voteAuthorizationType")])},Withdraw:{index:3,layout:p.n_([p.Jq("instruction"),p.gM("lamports")])},AuthorizeWithSeed:{index:10,layout:p.n_([p.Jq("instruction"),((e="voteAuthorizeWithSeedArgs")=>p.n_([p.Jq("voteAuthorizationType"),publicKey("currentAuthorityDerivedKeyOwnerPubkey"),rustString("currentAuthorityDerivedKeySeed"),publicKey("newAuthorized")],e))()])}});Object.freeze({Voter:{index:0},Withdrawer:{index:1}});let VoteProgram=class VoteProgram{constructor(){}static initializeAccount(e){let{votePubkey:t,nodePubkey:r,voteInit:i}=e,n=tc.InitializeAccount,s=encodeData(n,{voteInit:{nodePubkey:toBuffer(i.nodePubkey.toBuffer()),authorizedVoter:toBuffer(i.authorizedVoter.toBuffer()),authorizedWithdrawer:toBuffer(i.authorizedWithdrawer.toBuffer()),commission:i.commission}}),o={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:E,isSigner:!1,isWritable:!1},{pubkey:C,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s};return new TransactionInstruction(o)}static createAccount(e){let t=new Transaction;return t.add(SystemProgram.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.votePubkey,lamports:e.lamports,space:this.space,programId:this.programId})),t.add(this.initializeAccount({votePubkey:e.votePubkey,nodePubkey:e.voteInit.nodePubkey,voteInit:e.voteInit}))}static authorize(e){let{votePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:i,voteAuthorizationType:n}=e,s=tc.Authorize,o=encodeData(s,{newAuthorized:toBuffer(i.toBuffer()),voteAuthorizationType:n.index}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:C,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return new Transaction().add({keys:a,programId:this.programId,data:o})}static authorizeWithSeed(e){let{currentAuthorityDerivedKeyBasePubkey:t,currentAuthorityDerivedKeyOwnerPubkey:r,currentAuthorityDerivedKeySeed:i,newAuthorizedPubkey:n,voteAuthorizationType:s,votePubkey:o}=e,a=tc.AuthorizeWithSeed,c=encodeData(a,{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:toBuffer(r.toBuffer()),currentAuthorityDerivedKeySeed:i,newAuthorized:toBuffer(n.toBuffer()),voteAuthorizationType:s.index}}),l=[{pubkey:o,isSigner:!1,isWritable:!0},{pubkey:C,isSigner:!1,isWritable:!1},{pubkey:t,isSigner:!0,isWritable:!1}];return new Transaction().add({keys:l,programId:this.programId,data:c})}static withdraw(e){let{votePubkey:t,authorizedWithdrawerPubkey:r,lamports:i,toPubkey:n}=e,s=tc.Withdraw,o=encodeData(s,{lamports:i}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return new Transaction().add({keys:a,programId:this.programId,data:o})}static safeWithdraw(e,t,r){if(e.lamports>t-r)throw Error("Withdraw will leave vote account with insuffcient funds.");return VoteProgram.withdraw(e)}};VoteProgram.programId=new PublicKey("Vote111111111111111111111111111111111111111"),VoteProgram.space=3731,new PublicKey("Va1idator1nfo111111111111111111111111111111"),(0,b.dt)({name:(0,b.Z_)(),website:(0,b.jt)((0,b.Z_)()),details:(0,b.jt)((0,b.Z_)()),keybaseUsername:(0,b.jt)((0,b.Z_)())}),new PublicKey("Vote111111111111111111111111111111111111111"),p.n_([publicKey("nodePubkey"),publicKey("authorizedWithdrawer"),p.u8("commission"),p._O(),p.A9(p.n_([p._O("slot"),p.Jq("confirmationCount")]),p.cv(p.Jq(),-8),"votes"),p.u8("rootSlotValid"),p._O("rootSlot"),p._O(),p.A9(p.n_([p._O("epoch"),publicKey("authorizedVoter")]),p.cv(p.Jq(),-8),"authorizedVoters"),p.n_([p.A9(p.n_([publicKey("authorizedPubkey"),p._O("epochOfLastAuthorizedSwitch"),p._O("targetEpoch")]),32,"buf"),p._O("idx"),p.u8("isEmpty")],"priorVoters"),p._O(),p.A9(p.n_([p._O("epoch"),p._O("credits"),p._O("prevCredits")]),p.cv(p.Jq(),-8),"epochCredits"),p.n_([p._O("slot"),p._O("timestamp")],"lastTimestamp")]);let tl={http:{devnet:"http://api.devnet.solana.com",testnet:"http://api.testnet.solana.com","mainnet-beta":"http://api.mainnet-beta.solana.com/"},https:{devnet:"https://api.devnet.solana.com",testnet:"https://api.testnet.solana.com","mainnet-beta":"https://api.mainnet-beta.solana.com/"}};function clusterApiUrl(e,t){let r=!1===t?"http":"https";if(!e)return tl[r].devnet;let i=tl[r][e];if(!i)throw Error(`Unknown ${r} cluster: ${e}`);return i}let tu=1e9}}]);
//# sourceMappingURL=8015bd09.c31694aab183d5c9.js.map