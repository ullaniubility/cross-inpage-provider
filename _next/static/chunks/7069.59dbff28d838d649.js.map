{"version":3,"file":"static/chunks/7069.59dbff28d838d649.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-events/cross-events.js","webpack://_N_E/./node_modules/fast-safe-stringify/index.js","webpack://_N_E/./node_modules/lodash/_getPrototype.js","webpack://_N_E/./node_modules/lodash/_overArg.js","webpack://_N_E/./node_modules/lodash/isFunction.js","webpack://_N_E/./node_modules/lodash/isObject.js","webpack://_N_E/./node_modules/lodash/isPlainObject.js","webpack://_N_E/./node_modules/ms/index.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-core/dist/CrossEventEmitter.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-core/dist/debug/common.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-core/dist/consts.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-core/dist/debug/browser.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-core/dist/debug/index.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-core/dist/loggers.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-core/dist/versionInfo.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-core/dist/JsBridgeBase.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-core/dist/siteMetadata.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-core/dist/ProviderBase.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-core/dist/injectJsBridge.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-core/dist/injectedProviderReceiveHandler.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-core/dist/JsBridgeSimple.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-core/dist/JsBridgeIframe.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-core/dist/walletProperty.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-core/dist/injectedFactory.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-core/dist/index.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-errors/dist/classes.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-errors/dist/error-constants.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-errors/dist/utils.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-errors/dist/errors.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-errors/dist/index.js","webpack://_N_E/./node_modules/@onekeyfe/cross-inpage-provider-types/dist/index.js","webpack://_N_E/<anon>"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar LIMIT_REPLACE_NODE = '[...]'\nvar CIRCULAR_REPLACE_NODE = '[Circular]'\n\nvar arr = []\nvar replacerStack = []\n\nfunction defaultOptions () {\n  return {\n    depthLimit: Number.MAX_SAFE_INTEGER,\n    edgesLimit: Number.MAX_SAFE_INTEGER\n  }\n}\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  decirc(obj, '', 0, [], undefined, 0, options)\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(obj, replacer, spacer)\n    } else {\n      res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction setReplace (replace, val, k, parent) {\n  var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n  if (propertyDescriptor.get !== undefined) {\n    if (propertyDescriptor.configurable) {\n      Object.defineProperty(parent, k, { value: replace })\n      arr.push([parent, k, val, propertyDescriptor])\n    } else {\n      replacerStack.push([val, k, replace])\n    }\n  } else {\n    parent[k] = replace\n    arr.push([parent, k, val])\n  }\n}\n\nfunction decirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, i, stack, val, depth, options)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  var tmp = deterministicDecirc(obj, '', 0, [], undefined, 0, options) || obj\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(tmp, replacer, spacer)\n    } else {\n      res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    // Ensure that we restore the object as it was.\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n    try {\n      if (typeof val.toJSON === 'function') {\n        return\n      }\n    } catch (_) {\n      return\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, i, stack, val, depth, options)\n        tmp[key] = val[key]\n      }\n      if (typeof parent !== 'undefined') {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as replaced value\nfunction replaceGetterValues (replacer) {\n  replacer =\n    typeof replacer !== 'undefined'\n      ? replacer\n      : function (k, v) {\n        return v\n      }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = part[2]\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access,@typescript-eslint/ban-ts-comment,  @typescript-eslint/no-unsafe-call, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument\n */\n// @ts-ignore\nimport EventEmitterBase from '@onekeyfe/cross-inpage-provider-events';\nfunction safeApply(handler, context, args) {\n    try {\n        Reflect.apply(handler, context, args);\n    }\n    catch (err) {\n        // Throw error after timeout so as not to interrupt the stack\n        setTimeout(() => {\n            throw err;\n        });\n    }\n}\nfunction arrayClone(arr) {\n    const n = arr.length;\n    const copy = new Array(n);\n    for (let i = 0; i < n; i += 1) {\n        copy[i] = arr[i];\n    }\n    return copy;\n}\nclass EventEmitterProxy extends EventEmitterBase {\n    emit(eventName, ...args) {\n        return super.emit(eventName, ...args);\n    }\n    addListener(eventName, listener) {\n        super.addListener(eventName, listener);\n        return this;\n    }\n    on(eventName, listener) {\n        super.on(eventName, listener);\n        return this;\n    }\n    once(eventName, listener) {\n        super.once(eventName, listener);\n        return this;\n    }\n    removeListener(eventName, listener) {\n        super.removeListener(eventName, listener);\n        return this;\n    }\n    off(eventName, listener) {\n        super.off(eventName, listener);\n        return this;\n    }\n    removeAllListeners(event) {\n        super.removeAllListeners(event);\n        return this;\n    }\n    setMaxListeners(n) {\n        super.setMaxListeners(n);\n        return this;\n    }\n    getMaxListeners() {\n        return super.getMaxListeners();\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    listeners(eventName) {\n        return super.listeners(eventName);\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    rawListeners(eventName) {\n        return super.rawListeners(eventName);\n    }\n    listenerCount(eventName) {\n        return super.listenerCount(eventName);\n    }\n    prependListener(eventName, listener) {\n        super.prependListener(eventName, listener);\n        return this;\n    }\n    prependOnceListener(eventName, listener) {\n        super.prependOnceListener(eventName, listener);\n        return this;\n    }\n    eventNames() {\n        return super.eventNames();\n    }\n}\nclass CrossEventEmitter extends EventEmitterProxy {\n    emit(type, ...args) {\n        let doError = type === 'error';\n        const events = this._events;\n        if (events !== undefined) {\n            doError = doError && events.error === undefined;\n        }\n        else if (!doError) {\n            return false;\n        }\n        // If there is no 'error' event listener then throw.\n        if (doError) {\n            let er;\n            if (args.length > 0) {\n                [er] = args;\n            }\n            if (er instanceof Error) {\n                // Note: The comments on the `throw` lines are intentional, they show\n                // up in Node's output if this results in an unhandled exception.\n                throw er; // Unhandled 'error' event\n            }\n            // At least give some kind of context to the user\n            const err = new Error(`Unhandled error.${er ? ` (${er.message})` : ''}`);\n            err.context = er;\n            throw err; // Unhandled 'error' event\n        }\n        const handler = events[type];\n        if (handler === undefined) {\n            return false;\n        }\n        if (typeof handler === 'function') {\n            safeApply(handler, this, args);\n        }\n        else {\n            const len = handler.length;\n            const listeners = arrayClone(handler);\n            for (let i = 0; i < len; i += 1) {\n                safeApply(listeners[i], this, args);\n            }\n        }\n        return true;\n    }\n}\nexport { CrossEventEmitter };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/* eslint-disable */\n// @ts-nocheck\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nimport humanize from 'ms';\nfunction setup(env) {\n    return __awaiter(this, void 0, void 0, function* () {\n        createDebug.debug = createDebug;\n        createDebug.default = createDebug;\n        createDebug.coerce = coerce;\n        createDebug.disable = disable;\n        createDebug.enable = enable;\n        createDebug.enabled = enabled;\n        createDebug.humanize = humanize;\n        createDebug.destroy = destroy;\n        Object.keys(env).forEach((key) => {\n            createDebug[key] = env[key];\n        });\n        /**\n         * The currently active debug mode names, and names to skip.\n         */\n        createDebug.names = [];\n        createDebug.skips = [];\n        /**\n         * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n         *\n         * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n         */\n        createDebug.formatters = {\n            /**\n             * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n             */\n            j(v) {\n                try {\n                    return JSON.stringify(v);\n                }\n                catch (error) {\n                    return `[UnexpectedJSONParseError]: ${error.message}`;\n                }\n            },\n        };\n        /**\n         * Selects a color for a debug namespace\n         * @param {String} namespace The namespace string for the debug instance to be colored\n         * @return {Number|String} An ANSI color code for the given namespace\n         * @api private\n         */\n        function selectColor(namespace) {\n            let hash = 0;\n            for (let i = 0; i < namespace.length; i++) {\n                hash = (hash << 5) - hash + namespace.charCodeAt(i);\n                hash |= 0; // Convert to 32bit integer\n            }\n            return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n        }\n        createDebug.selectColor = selectColor;\n        /**\n         * Create a debugger with the given `namespace`.\n         *\n         * @param {String} namespace\n         * @return {Function}\n         * @api public\n         */\n        function createDebug(namespace) {\n            let prevTime;\n            let enableOverride = null;\n            let namespacesCache;\n            let enabledCache;\n            function debug(...args) {\n                // Disabled?\n                if (!debug.enabled) {\n                    return;\n                }\n                const self = debug;\n                // Set `diff` timestamp\n                const curr = Number(new Date());\n                const ms = curr - (prevTime || curr);\n                self.diff = ms;\n                self.prev = prevTime;\n                self.curr = curr;\n                prevTime = curr;\n                args[0] = createDebug.coerce(args[0]);\n                if (typeof args[0] !== 'string') {\n                    // Anything else let's inspect with %O\n                    args.unshift('%O');\n                }\n                // Apply any `formatters` transformations\n                let index = 0;\n                args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n                    // If we encounter an escaped % then don't increase the array index\n                    if (match === '%%') {\n                        return '%';\n                    }\n                    index++;\n                    const formatter = createDebug.formatters[format];\n                    if (typeof formatter === 'function') {\n                        const val = args[index];\n                        match = formatter.call(self, val);\n                        // Now we need to remove `args[index]` since it's inlined in the `format`\n                        args.splice(index, 1);\n                        index--;\n                    }\n                    return match;\n                });\n                // Apply env-specific formatting (colors, etc.)\n                createDebug.formatArgs.call(self, args);\n                const logFn = self.log || createDebug.log;\n                logFn.apply(self, args);\n            }\n            debug.namespace = namespace;\n            debug.useColors = createDebug.useColors();\n            debug.color = createDebug.selectColor(namespace);\n            debug.extend = extend;\n            debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n            Object.defineProperty(debug, 'enabled', {\n                enumerable: true,\n                configurable: false,\n                get: () => {\n                    if (enableOverride !== null) {\n                        return enableOverride;\n                    }\n                    if (namespacesCache !== createDebug.namespaces) {\n                        namespacesCache = createDebug.namespaces;\n                        enabledCache = createDebug.enabled(namespace);\n                    }\n                    return enabledCache;\n                },\n                set: (v) => {\n                    enableOverride = v;\n                },\n            });\n            // Env-specific initialization logic for debug instances\n            if (typeof createDebug.init === 'function') {\n                createDebug.init(debug);\n            }\n            return debug;\n        }\n        function extend(namespace, delimiter) {\n            const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n            newDebug.log = this.log;\n            return newDebug;\n        }\n        /**\n         * Enables a debug mode by namespaces. This can include modes\n         * separated by a colon and wildcards.\n         *\n         * @param {String} namespaces\n         * @api public\n         */\n        function enable(namespaces) {\n            return __awaiter(this, void 0, void 0, function* () {\n                yield createDebug.save(namespaces);\n                createDebug.namespaces = namespaces;\n                createDebug.names = [];\n                createDebug.skips = [];\n                let i;\n                const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n                const len = split.length;\n                for (i = 0; i < len; i++) {\n                    if (!split[i]) {\n                        // ignore empty strings\n                        continue;\n                    }\n                    namespaces = split[i].replace(/\\*/g, '.*?');\n                    if (namespaces[0] === '-') {\n                        createDebug.skips.push(new RegExp(`^${namespaces.substr(1)}$`));\n                    }\n                    else {\n                        createDebug.names.push(new RegExp(`^${namespaces}$`));\n                    }\n                }\n            });\n        }\n        /**\n         * Disable debug output.\n         *\n         * @return {String} namespaces\n         * @api public\n         */\n        function disable() {\n            const namespaces = [\n                ...createDebug.names.map(toNamespace),\n                ...createDebug.skips.map(toNamespace).map((namespace) => `-${namespace}`),\n            ].join(',');\n            createDebug.enable('');\n            return namespaces;\n        }\n        /**\n         * Returns true if the given mode name is enabled, false otherwise.\n         *\n         * @param {String} name\n         * @return {Boolean}\n         * @api public\n         */\n        function enabled(name) {\n            if (name[name.length - 1] === '*') {\n                return true;\n            }\n            let i;\n            let len;\n            for (i = 0, len = createDebug.skips.length; i < len; i++) {\n                if (createDebug.skips[i].test(name)) {\n                    return false;\n                }\n            }\n            for (i = 0, len = createDebug.names.length; i < len; i++) {\n                if (createDebug.names[i].test(name)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        /**\n         * Convert regexp to namespace\n         *\n         * @param {RegExp} regxep\n         * @return {String} namespace\n         * @api private\n         */\n        function toNamespace(regexp) {\n            return regexp\n                .toString()\n                .substring(2, regexp.toString().length - 2)\n                .replace(/\\.\\*\\?$/, '*');\n        }\n        /**\n         * Coerce `val`.\n         *\n         * @param {Mixed} val\n         * @return {Mixed}\n         * @api private\n         */\n        function coerce(val) {\n            if (val instanceof Error) {\n                return val.stack || val.message;\n            }\n            return val;\n        }\n        /**\n         * XXX DO NOT USE. This is a temporary stub function.\n         * XXX It WILL be removed in the next major release.\n         */\n        function destroy() {\n            console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n        }\n        const config = yield createDebug.load();\n        yield createDebug.enable(config);\n        return createDebug;\n    });\n}\nexport default setup;\n","export const JS_BRIDGE_MESSAGE_IPC_CHANNEL = 'onekey@JS_BRIDGE_MESSAGE_IPC_CHANNEL';\nexport const JS_BRIDGE_MESSAGE_EXT_CHANNEL = 'onekey@JS_BRIDGE_MESSAGE_EXT_CHANNEL';\nexport const JS_BRIDGE_MESSAGE_EXT_PING = 'onekey@JS_BRIDGE_MESSAGE_EXT_PING';\nexport const JS_BRIDGE_MESSAGE_DIRECTION = {\n    'HOST_TO_INPAGE': 'onekey@JS_BRIDGE_MESSAGE_DIRECTION-HOST_TO_INPAGE',\n    'INPAGE_TO_HOST': 'onekey@JS_BRIDGE_MESSAGE_DIRECTION-INPAGE_TO_HOST',\n};\nexport const EXT_PORT_OFFSCREEN_TO_BG = 'onekey@EXT_PORT_OFFSCREEN_TO_BG';\nexport const EXT_PORT_CS_TO_BG = 'onekey@EXT_PORT_CS_TO_BG';\nexport const EXT_PORT_UI_TO_BG = 'onekey@EXT_PORT_UI_TO_BG';\nexport const DEBUG_LOGGER_STORAGE_KEY = '$$ONEKEY_DEBUG_LOGGER';\nexport const WALLET_INFO_LOACAL_KEY = 'onekey_wallet_info_local_key';\n","/* eslint-disable */\n// @ts-nocheck\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * This is the web browser implementation of `debug()`.\n */\nimport { DEBUG_LOGGER_STORAGE_KEY } from '../consts';\nimport { isNil } from 'lodash';\nimport humanize from 'ms';\nconst storageKey = DEBUG_LOGGER_STORAGE_KEY;\nconst exportsBrowser = {};\nexportsBrowser.formatArgs = formatArgs;\nexportsBrowser.save = save;\nexportsBrowser.load = load;\nexportsBrowser.useColors = useColors;\nexportsBrowser.storage = customLocalStorage();\nexportsBrowser.humanize = humanize;\nexportsBrowser.destroy = (() => {\n    let warned = false;\n    return () => {\n        if (!warned) {\n            warned = true;\n            console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n        }\n    };\n})();\n/**\n * Colors.\n */\nexportsBrowser.colors = [\n    '#0000CC',\n    '#0000FF',\n    '#0033CC',\n    '#0033FF',\n    '#0066CC',\n    '#0066FF',\n    '#0099CC',\n    '#0099FF',\n    '#00CC00',\n    '#00CC33',\n    '#00CC66',\n    '#00CC99',\n    '#00CCCC',\n    '#00CCFF',\n    '#3300CC',\n    '#3300FF',\n    '#3333CC',\n    '#3333FF',\n    '#3366CC',\n    '#3366FF',\n    '#3399CC',\n    '#3399FF',\n    '#33CC00',\n    '#33CC33',\n    '#33CC66',\n    '#33CC99',\n    '#33CCCC',\n    '#33CCFF',\n    '#6600CC',\n    '#6600FF',\n    '#6633CC',\n    '#6633FF',\n    '#66CC00',\n    '#66CC33',\n    '#9900CC',\n    '#9900FF',\n    '#9933CC',\n    '#9933FF',\n    '#99CC00',\n    '#99CC33',\n    '#CC0000',\n    '#CC0033',\n    '#CC0066',\n    '#CC0099',\n    '#CC00CC',\n    '#CC00FF',\n    '#CC3300',\n    '#CC3333',\n    '#CC3366',\n    '#CC3399',\n    '#CC33CC',\n    '#CC33FF',\n    '#CC6600',\n    '#CC6633',\n    '#CC9900',\n    '#CC9933',\n    '#CCCC00',\n    '#CCCC33',\n    '#FF0000',\n    '#FF0033',\n    '#FF0066',\n    '#FF0099',\n    '#FF00CC',\n    '#FF00FF',\n    '#FF3300',\n    '#FF3333',\n    '#FF3366',\n    '#FF3399',\n    '#FF33CC',\n    '#FF33FF',\n    '#FF6600',\n    '#FF6633',\n    '#FF9900',\n    '#FF9933',\n    '#FFCC00',\n    '#FFCC33',\n];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n */\nfunction useColors() {\n    // NB: In an Electron preload script, document will be defined but not fully\n    // initialized. Since we know we're in Chrome, we'll just detect this case\n    // explicitly\n    if (typeof window !== 'undefined' &&\n        window.process &&\n        (window.process.type === 'renderer' || window.process.__nwjs)) {\n        return true;\n    }\n    // Internet Explorer and Edge do not support colors.\n    if (typeof navigator !== 'undefined' &&\n        navigator.userAgent &&\n        navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n        return false;\n    }\n    // Is webkit? http://stackoverflow.com/a/16459606/376773\n    // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n    return ((typeof document !== 'undefined' &&\n        document.documentElement &&\n        document.documentElement.style &&\n        document.documentElement.style.WebkitAppearance) ||\n        // Is firebug? http://stackoverflow.com/a/398120/376773\n        (typeof window !== 'undefined' &&\n            window.console &&\n            (window.console.firebug || (window.console.exception && window.console.table))) ||\n        // Is firefox >= v31?\n        // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n        (typeof navigator !== 'undefined' &&\n            navigator.userAgent &&\n            navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) &&\n            parseInt(RegExp.$1, 10) >= 31) ||\n        // Double check webkit in userAgent just in case we are in a worker\n        (typeof navigator !== 'undefined' &&\n            navigator.userAgent &&\n            navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/)));\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\nfunction formatArgs(args) {\n    args[0] = `${(this.useColors ? '%c' : '') +\n        this.namespace +\n        (this.useColors ? ' %c' : ' ') +\n        args[0] +\n        (this.useColors ? '%c ' : ' ')}+${exportsBrowser.humanize(this.diff)}`;\n    if (!this.useColors) {\n        return;\n    }\n    const c = `color: ${this.color}`;\n    args.splice(1, 0, c, 'color: inherit');\n    // The final \"%c\" is somewhat tricky, because there could be other\n    // arguments passed either before or after the %c, so we need to\n    // figure out the correct index to insert the CSS into\n    let index = 0;\n    let lastC = 0;\n    args[0].replace(/%[a-zA-Z%]/g, (match) => {\n        if (match === '%%') {\n            return;\n        }\n        index += 1;\n        if (match === '%c') {\n            // We only are interested in the *last* %c\n            // (the user may have provided their own)\n            lastC = index;\n        }\n    });\n    args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexportsBrowser.log = (...args) => {\n    if (console.debug) {\n        console.debug(...args);\n    }\n    else if (console.log) {\n        console.log(...args);\n    }\n};\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            if (namespaces) {\n                yield exportsBrowser.storage.setItem(storageKey, namespaces);\n            }\n            else {\n                if (isNil(namespaces)) {\n                    yield exportsBrowser.storage.removeItem(storageKey);\n                }\n                else {\n                    yield exportsBrowser.storage.setItem(storageKey, '');\n                }\n            }\n        }\n        catch (error) {\n            // Swallow\n            // XXX (@Qix-) should we be logging these?\n            console.error('debug logger storage error', error);\n        }\n    });\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n    return __awaiter(this, void 0, void 0, function* () {\n        let r;\n        try {\n            r = yield exportsBrowser.storage.getItem(storageKey);\n        }\n        catch (error) {\n            // Swallow\n            // XXX (@Qix-) should we be logging these?\n            console.error('debug logger storage error', error);\n        }\n        // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n        if (!r && typeof process !== 'undefined' && 'env' in process) {\n            r = process.env.DEBUG;\n        }\n        return r;\n    });\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\nfunction customLocalStorage() {\n    try {\n        if (typeof global !== 'undefined' && global.$$onekeyAppStorage) {\n            return global.$$onekeyAppStorage;\n        }\n        // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n        // The Browser also has localStorage in the global context.\n        if (typeof window !== 'undefined' && window.localStorage) {\n            return window.localStorage;\n        }\n        console.warn('debugLogger init warning, neither `global.$$onekeyAppStorage` nor `window.localStorage` found.');\n        return {\n            getItem() {\n                return __awaiter(this, void 0, void 0, function* () {\n                    return '';\n                });\n            },\n            setItem() {\n                return __awaiter(this, void 0, void 0, function* () {\n                    // noop\n                });\n            },\n            removeItem() {\n                return __awaiter(this, void 0, void 0, function* () {\n                    // noop\n                });\n            },\n        };\n    }\n    catch (error) {\n        // Swallow\n        // XXX (@Qix-) should we be logging these?\n        console.error('debug logger storage error', error);\n    }\n}\nexport default exportsBrowser;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport setup from './common';\nimport browser from './browser';\nfunction createDebugAsync() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return setup(browser);\n    });\n}\nexport default createDebugAsync;\n","// @ts-ignore\nimport createDebugAsync from './debug';\nimport { DEBUG_LOGGER_STORAGE_KEY } from './consts';\nimport { CrossEventEmitter } from './CrossEventEmitter';\n// enable debugLogger:\n//    localStorage.setItem('$$ONEKEY_DEBUG_LOGGER', '*');\nfunction consoleErrorInDev(...args) {\n    const loggerConfig = typeof localStorage !== 'undefined' && localStorage.getItem(DEBUG_LOGGER_STORAGE_KEY);\n    if (process.env.NODE_ENV !== 'production' || loggerConfig) {\n        console.error(...args);\n    }\n}\nconst fakeLogger = {\n    // @ts-ignore\n    _isFakeLogger: true,\n    log: (...args) => undefined,\n    warn: (...args) => undefined,\n    error: (...args) => undefined,\n    debug: (...args) => undefined,\n    info: (...args) => undefined,\n    trace: (...args) => undefined,\n};\nvar loggerNames;\n(function (loggerNames) {\n    loggerNames[\"jsBridge\"] = \"jsBridge\";\n    loggerNames[\"providerBase\"] = \"providerBase\";\n    loggerNames[\"extInjected\"] = \"extInjected\";\n    loggerNames[\"extContentScripts\"] = \"extContentScripts\";\n    loggerNames[\"webview\"] = \"webview\";\n    loggerNames[\"desktopInjected\"] = \"desktopInjected\";\n    loggerNames[\"ethereum\"] = \"ethereum\";\n})(loggerNames || (loggerNames = {}));\nclass FakeDebugLogger extends CrossEventEmitter {\n    constructor() {\n        super();\n        this.jsBridge = (...args) => null;\n        this.providerBase = (...args) => null;\n        this.extInjected = (...args) => null;\n        this.extContentScripts = (...args) => null;\n        this.webview = (...args) => null;\n        this.desktopInjected = (...args) => null;\n        this.ethereum = (...args) => null;\n        this._debug = {\n            enable(config) {\n                //noop\n            },\n        };\n        this._externalLogger = fakeLogger;\n        this._createExternalLog = (name) => (...args) => {\n            var _a, _b;\n            this.once('debugReady', () => {\n                var _a;\n                // @ts-ignore\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n                (_a = this[name]) === null || _a === void 0 ? void 0 : _a.call(this, ...args);\n            });\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            return (_b = (_a = this._externalLogger) === null || _a === void 0 ? void 0 : _a.log) === null || _b === void 0 ? void 0 : _b.call(_a, `${name} >>> `, ...args);\n        };\n        this.initExternalLogInstances();\n    }\n    initExternalLogInstances() {\n        Object.keys(loggerNames).forEach((name) => {\n            // @ts-ignore\n            this[name] = this._createExternalLog(name);\n        });\n    }\n    isDebugReady() {\n        return this._debug && typeof this._debug === 'function';\n    }\n    _attachExternalLogger(logger) {\n        if (logger) {\n            this._externalLogger = logger;\n        }\n    }\n    _createDebugInstance(name) {\n        // noop\n    }\n}\nclass AppDebugLogger extends FakeDebugLogger {\n    constructor() {\n        super();\n        this._debugInstanceCreatedMap = {};\n        // TODO createDebugSync\n        void createDebugAsync().then((debug) => {\n            this._debug = debug;\n            this.initDebugInstances();\n            this.emit('debugReady');\n        });\n    }\n    initDebugInstances() {\n        if (this.isDebugReady()) {\n            Object.keys(loggerNames).forEach((name) => {\n                // @ts-ignore\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-assignment\n                this[name] = this._debug(name);\n            });\n        }\n    }\n    _createDebugInstance(name) {\n        if (this._debugInstanceCreatedMap[name]) {\n            return;\n        }\n        this._debugInstanceCreatedMap[name] = true;\n        if (name && this._debug && typeof this._debug === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-assignment\n            const _debugLog = this._debug(name);\n            // @ts-ignore\n            const _originLog = this[name];\n            // @ts-ignore\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-assignment\n            this[name] = (...args) => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                _debugLog(...args);\n                if (_originLog && typeof _originLog === 'function') {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                    _originLog(...args);\n                }\n            };\n        }\n    }\n}\n// TODO merge FakeDebugLogger and AppDebugLogger to single class\nconst fakeDebugLogger = new FakeDebugLogger();\nconst appDebugLogger = new AppDebugLogger();\nexport { fakeDebugLogger, appDebugLogger, fakeLogger, consoleErrorInDev };\n","const version = '1.1.49';\nconst versionBuild = '2020-0101-1';\nexport default {\n    version,\n    versionBuild,\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport isPlainObject from 'lodash/isPlainObject';\nimport isString from 'lodash/isString';\nimport { CrossEventEmitter } from './CrossEventEmitter';\nimport { appDebugLogger, consoleErrorInDev } from './loggers';\nimport { web3Errors } from '@onekeyfe/cross-inpage-provider-errors';\nimport { IJsBridgeMessageTypes, } from '@onekeyfe/cross-inpage-provider-types';\nimport versionInfo from './versionInfo';\nfunction toPlainError(errorInfo) {\n    return {\n        name: errorInfo.name,\n        message: errorInfo.message,\n        stack: errorInfo.stack,\n        code: errorInfo.code,\n        data: errorInfo.data,\n        key: errorInfo.key,\n        info: errorInfo.info,\n        className: errorInfo.className,\n        autoToast: errorInfo.autoToast,\n    };\n}\nfunction isLegacyExtMessage(payload) {\n    const payloadObj = payload;\n    return (Boolean(payloadObj.name) &&\n        ['onekey-provider-eth', 'onekey-provider-cfx', 'publicConfig'].includes(payloadObj.name));\n}\nconst globalWindow = typeof window !== 'undefined' ? window : global;\nconst BRIDGE_EVENTS = {\n    message: 'message',\n    error: 'error',\n};\nclass JsBridgeBase extends CrossEventEmitter {\n    constructor(config = {}) {\n        var _a, _b;\n        super();\n        this._requestPayloadCache = {};\n        this.isExtUi = false;\n        this.isInjected = false;\n        this.sendAsString = true;\n        this.globalOnMessageEnabled = true;\n        this.providersHub = {\n        // name: []\n        };\n        // Only handle type=REQUEST messages, type=RESPONSE message will be ignored\n        this.globalOnMessage = (message) => __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.config.receiveHandler && this.globalOnMessageEnabled) {\n                    const returnValue = yield this.config.receiveHandler(message, this);\n                    if (message.id) {\n                        this.response({\n                            id: message.id,\n                            scope: message.scope,\n                            remoteId: message.remoteId,\n                            data: returnValue,\n                            peerOrigin: message.origin,\n                        });\n                    }\n                }\n            }\n            catch (error) {\n                if (message.id && message.type === IJsBridgeMessageTypes.REQUEST) {\n                    this.responseError({\n                        id: message.id,\n                        scope: message.scope,\n                        remoteId: message.remoteId,\n                        error,\n                        peerOrigin: message.origin,\n                    });\n                }\n                this.emit(BRIDGE_EVENTS.error, error);\n            }\n            finally {\n                // noop\n            }\n        });\n        this.version = versionInfo.version;\n        this.remoteInfo = {\n            origin: '',\n            remoteId: '',\n        };\n        // TODO increase timeout as hardware sign transaction may take a long time\n        //    can set timeout for each callback\n        this.callbacksExpireTimeout = 10 * 60 * 1000;\n        this.debugLogger = appDebugLogger;\n        this.callbacks = [];\n        this.callbackId = 1;\n        this.config = config;\n        this.callbacksExpireTimeout = (_a = config.timeout) !== null && _a !== void 0 ? _a : this.callbacksExpireTimeout;\n        this.debugLogger = config.debugLogger || appDebugLogger;\n        this.sendAsString = (_b = config.sendAsString) !== null && _b !== void 0 ? _b : this.sendAsString;\n        if (this.config.receiveHandler) {\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            this.on(BRIDGE_EVENTS.message, this.globalOnMessage);\n        }\n        this.on(BRIDGE_EVENTS.error, (error) => {\n            var _a;\n            consoleErrorInDev('JsBridge ERROR: ', error, {\n                code: (_a = error) === null || _a === void 0 ? void 0 : _a.code,\n            });\n        });\n        this.rejectExpiredCallbacks();\n    }\n    attachProviderInstance(provider) {\n        var _a;\n        const name = provider.providerName;\n        if (name) {\n            this.providersHub[name] = (_a = this.providersHub[name]) !== null && _a !== void 0 ? _a : [];\n            this.providersHub[name].push(provider);\n        }\n    }\n    createCallbackId() {\n        this.callbackId += 1;\n        return this.callbackId;\n    }\n    createPayload(payload, { resolve, reject, }) {\n        const { id, type } = payload;\n        if (resolve && reject && id && type === IJsBridgeMessageTypes.REQUEST) {\n            if (this.callbacks[id]) {\n                // TODO custom error\n                throw new Error(`JsBridge ERROR: callback exists, id=${id}`);\n            }\n            this.callbacks[id] = { id, resolve, reject, created: Date.now() };\n        }\n        // convert to plain error object which can be stringify\n        if (payload.error) {\n            const errorInfo = payload.error;\n            payload.error = toPlainError(errorInfo);\n        }\n        // delete resolve, reject function which can not be send as string\n        payload === null || payload === void 0 ? true : delete payload.resolve;\n        payload === null || payload === void 0 ? true : delete payload.reject;\n        return payload;\n    }\n    send({ type, data, error, id, remoteId, sync = false, scope, peerOrigin, }) {\n        const executor = (resolve, reject) => {\n            var _a, _b, _c;\n            // TODO check resolve when calling without await\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            let _id = id;\n            // sendSync without Promise cache\n            if (!sync && type === IJsBridgeMessageTypes.REQUEST) {\n                _id = this.createCallbackId();\n            }\n            try {\n                const payload = this.createPayload({\n                    id: _id,\n                    data,\n                    error,\n                    type,\n                    origin: ((_a = globalWindow === null || globalWindow === void 0 ? void 0 : globalWindow.location) === null || _a === void 0 ? void 0 : _a.origin) || '',\n                    peerOrigin,\n                    remoteId,\n                    scope,\n                }, { resolve, reject });\n                let payloadToSend = payload;\n                if (this.sendAsString) {\n                    payloadToSend = JSON.stringify(payload);\n                }\n                // @ts-ignore\n                if ((_b = this.debugLogger.jsBridge) === null || _b === void 0 ? void 0 : _b.enabled) {\n                    if (payload && payload.id && payload.type === IJsBridgeMessageTypes.REQUEST) {\n                        this._requestPayloadCache[payload.id] = payload;\n                        if (payload.id % 100 === 0) {\n                            this._requestPayloadCache = {};\n                        }\n                    }\n                }\n                this.debugLogger.jsBridge('send', payload, '\\r\\n ------> ', payload.data, '\\r\\n ------> ', \n                // @ts-ignore\n                (_c = payload.data) === null || _c === void 0 ? void 0 : _c.result);\n                this.sendPayload(payloadToSend);\n            }\n            catch (error) {\n                if (_id) {\n                    this.rejectCallback(_id, error);\n                }\n                else {\n                    this.emit(BRIDGE_EVENTS.error, error);\n                }\n            }\n        };\n        if (sync) {\n            executor();\n            void 0;\n        }\n        else {\n            return new Promise(executor);\n        }\n    }\n    rejectCallback(id, error) {\n        this.processCallback({\n            method: 'reject',\n            id,\n            error,\n        });\n    }\n    resolveCallback(id, data) {\n        this.processCallback({\n            method: 'resolve',\n            id,\n            data,\n        });\n    }\n    processCallback({ method, id, data, error, }) {\n        const callbackInfo = this.callbacks[id];\n        if (callbackInfo) {\n            if (method === 'reject') {\n                if (callbackInfo.reject) {\n                    callbackInfo.reject(error);\n                }\n                this.emit(BRIDGE_EVENTS.error, error);\n            }\n            if (method === 'resolve') {\n                if (callbackInfo.resolve) {\n                    callbackInfo.resolve(data);\n                }\n            }\n            this.clearCallbackCache(id);\n        }\n    }\n    rejectExpiredCallbacks() {\n        if (!this.callbacksExpireTimeout) {\n            return;\n        }\n        const now = Date.now();\n        const callbacksLength = this.callbacks.length;\n        for (let id = 0; id < callbacksLength; id++) {\n            const callbackInfo = this.callbacks[id];\n            if (callbackInfo && callbackInfo.created) {\n                if (now - callbackInfo.created > this.callbacksExpireTimeout) {\n                    const error = web3Errors.provider.requestTimeout();\n                    this.rejectCallback(id, error);\n                }\n            }\n        }\n        setTimeout(() => {\n            this.rejectExpiredCallbacks();\n        }, this.callbacksExpireTimeout);\n    }\n    clearCallbackCache(id) {\n        delete this.callbacks[id];\n    }\n    receive(payloadReceived = '', sender) {\n        var _a, _b, _c, _d, _e;\n        let payload = {\n            data: null,\n        };\n        if (isPlainObject(payloadReceived)) {\n            payload = payloadReceived;\n        }\n        if (isString(payloadReceived)) {\n            try {\n                payload = JSON.parse(payloadReceived);\n            }\n            catch (error) {\n                this.emit(BRIDGE_EVENTS.error, error);\n                throw new Error('JsBridge ERROR: JSON.parse payloadReceived failed');\n            }\n        }\n        // !IMPORTANT: force overwrite origin and internal field\n        //    DO NOT trust dapp params\n        payload.origin = sender === null || sender === void 0 ? void 0 : sender.origin;\n        payload.internal = Boolean(sender === null || sender === void 0 ? void 0 : sender.internal);\n        // ignore legacy Ext publicConfig message\n        if ((sender === null || sender === void 0 ? void 0 : sender.internal) && this.isExtUi && isLegacyExtMessage(payload)) {\n            return;\n        }\n        if (!payload.origin && !this.isInjected) {\n            consoleErrorInDev((_a = this === null || this === void 0 ? void 0 : this.constructor) === null || _a === void 0 ? void 0 : _a.name, '[payload.origin] is missing.', this);\n            throw new Error('JsBridge ERROR: receive message [payload.origin] is required.');\n        }\n        if (!payload.internal && !payload.scope) {\n            throw new Error('JsBridge ERROR: receive message [payload.scope] is required for non-internal method call.');\n        }\n        const relatedSendPayload = (_c = this._requestPayloadCache[(_b = payload === null || payload === void 0 ? void 0 : payload.id) !== null && _b !== void 0 ? _b : '']) !== null && _c !== void 0 ? _c : null;\n        this.debugLogger.jsBridge('receive', payload, { sender }, '\\r\\n -----> ', (_e = (_d = payload.data) === null || _d === void 0 ? void 0 : _d.result) !== null && _e !== void 0 ? _e : payload.data, '\\r\\n <----- ', relatedSendPayload === null || relatedSendPayload === void 0 ? void 0 : relatedSendPayload.data);\n        const { type, id, data, error, origin, remoteId } = payload;\n        this.remoteInfo = {\n            origin,\n            remoteId,\n        };\n        if (type === IJsBridgeMessageTypes.RESPONSE) {\n            if (id === undefined || id === null) {\n                throw new Error('JsBridge ERROR: parameter [id] is required in JsBridge.receive() when REQUEST type message');\n            }\n            const callbackInfo = this.callbacks[id];\n            if (callbackInfo) {\n                try {\n                    if (error) {\n                        this.rejectCallback(id, error);\n                    }\n                    else {\n                        this.resolveCallback(id, data);\n                    }\n                }\n                catch (error0) {\n                    this.emit(BRIDGE_EVENTS.error, error0);\n                }\n                finally {\n                    // noop\n                }\n            }\n        }\n        else if (type === IJsBridgeMessageTypes.REQUEST) {\n            const eventMessagePayload = Object.assign(Object.assign({}, payload), { created: Date.now() });\n            // https://nodejs.org/api/events.html#capture-rejections-of-promises\n            // only type=REQUEST message will be handled by globalOnMessage\n            this.emit(BRIDGE_EVENTS.message, eventMessagePayload);\n        }\n        else {\n            throw new Error(`JsBridge ERROR: payload type not support yet (type=${type || 'undefined'})`);\n        }\n    }\n    requestSync({ data, scope, remoteId, }) {\n        void this.send({\n            id: undefined,\n            type: IJsBridgeMessageTypes.REQUEST,\n            scope,\n            data,\n            remoteId,\n            sync: true,\n        });\n    }\n    request(info) {\n        const { data, remoteId, scope } = info;\n        if (data === undefined) {\n            console.warn('JsBridge ERROR: data required. Call like `bridge.request({ data: {...} });`');\n        }\n        return this.send({\n            type: IJsBridgeMessageTypes.REQUEST,\n            data,\n            remoteId,\n            sync: false,\n            scope,\n        });\n    }\n    // send response DATA to remote\n    response({ id, data, remoteId, scope, peerOrigin, }) {\n        void this.send({\n            type: IJsBridgeMessageTypes.RESPONSE,\n            data,\n            id,\n            remoteId,\n            scope,\n            sync: true,\n            peerOrigin,\n        });\n    }\n    // send response ERROR to remote\n    responseError({ id, error, scope, remoteId, peerOrigin, }) {\n        void this.send({\n            type: IJsBridgeMessageTypes.RESPONSE,\n            error,\n            id,\n            remoteId,\n            scope,\n            sync: true,\n            peerOrigin,\n        });\n    }\n}\nexport { JsBridgeBase, isLegacyExtMessage };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns Whether the image exists.\n */\nfunction imgExists(url) {\n    return new Promise((resolve, reject) => {\n        try {\n            const img = document.createElement('img');\n            img.onload = () => resolve(true);\n            img.onerror = () => resolve(false);\n            img.src = url;\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n/**\n * Gets site metadata and returns it\n *\n */\nfunction getSiteMetadata() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return {\n            name: getSiteName(window),\n            icon: yield getSiteIcon(window),\n        };\n    });\n}\n/**\n * Extracts a name for the site from the DOM\n */\nfunction getSiteName(windowObject) {\n    const { document } = windowObject;\n    const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n    if (siteName) {\n        return siteName.content;\n    }\n    const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n    if (metaTitle) {\n        return metaTitle.content;\n    }\n    if (document.title && document.title.length > 0) {\n        return document.title;\n    }\n    return window.location.hostname;\n}\n/**\n * Extracts an icon for the site from the DOM\n * @returns an icon URL\n */\nfunction getSiteIcon(windowObject) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { document } = windowObject;\n        const icons = document.querySelectorAll('head > link[rel~=\"icon\"]');\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const iconsArr = icons;\n        for (const icon of iconsArr) {\n            if (icon && (yield imgExists(icon.href))) {\n                return icon.href;\n            }\n        }\n        return null;\n    });\n}\nexport default {\n    getSiteMetadata,\n    getSiteIcon,\n    getSiteName,\n    imgExists,\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/* eslint-disable @typescript-eslint/no-unsafe-assignment,@typescript-eslint/ban-ts-comment */\nimport isFunction from 'lodash/isFunction';\nimport { CrossEventEmitter } from './CrossEventEmitter';\nimport siteMetadata from './siteMetadata';\nimport { fakeLogger, fakeDebugLogger, consoleErrorInDev } from './loggers';\nimport versionInfo from './versionInfo';\nimport { WALLET_INFO_LOACAL_KEY } from './consts';\nconst METHODS = {\n    wallet_getConnectWalletInfo: 'wallet_getConnectWalletInfo',\n    wallet_sendSiteMetadata: 'wallet_sendSiteMetadata',\n};\nclass ProviderBase extends CrossEventEmitter {\n    constructor(config) {\n        var _a, _b, _c;\n        super();\n        this.version = versionInfo.version;\n        this.isOneKey = true;\n        this.debugLogger = fakeDebugLogger;\n        this.logger = fakeLogger;\n        if (!config.bridge) {\n            throw new Error('ProviderBase init error: bridge required.');\n        }\n        this.config = config;\n        this.bridge = config.bridge;\n        this.logger = config.logger || fakeLogger;\n        // TODO init this.debugLogger first, and enable debug config after extension connect\n        this.debugLogger = ((_a = this.bridge) === null || _a === void 0 ? void 0 : _a.debugLogger) || fakeDebugLogger;\n        (_c = (_b = this.bridge) === null || _b === void 0 ? void 0 : _b.debugLogger) === null || _c === void 0 ? void 0 : _c._attachExternalLogger(this.logger);\n        setTimeout(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.bridge.attachProviderInstance(this);\n        }, 0);\n        // call sendSiteMetadataDomReady/getConnectWalletInfo in ProviderPrivate, dont need here\n        // void this.sendSiteMetadataDomReady();\n        // void this.getConnectWalletInfo();\n    }\n    configDebugLogger(config) {\n        try {\n            if (!config || !this.bridge.debugLogger) {\n                return;\n            }\n            const debugLogger = this.bridge.debugLogger;\n            (config.enabledKeys || []).forEach((key) => {\n                debugLogger._createDebugInstance(key);\n            });\n            if (config.config) {\n                debugLogger._debug.enable(config.config);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            window.$onekey = window.$onekey || {};\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            window.$onekey.$debugLogger = debugLogger;\n        }\n        catch (error) {\n            consoleErrorInDev('configDebugLogger ERROR:', error);\n        }\n    }\n    getConnectWalletInfo({ timeout = 3000 } = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // eslint-disable-next-line no-async-promise-executor,@typescript-eslint/no-misused-promises\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                const timer = setTimeout(() => {\n                    console.error(`getConnectWalletInfo timeout: ${timeout}`);\n                    resolve(null);\n                }, timeout);\n                try {\n                    const result = (yield this.bridgeRequest({\n                        method: METHODS.wallet_getConnectWalletInfo,\n                        params: [{ time: Date.now() }],\n                    }));\n                    if (result) {\n                        result.providerState = result.providerState || {};\n                    }\n                    if (result && result.debugLoggerConfig) {\n                        this.configDebugLogger(result.debugLoggerConfig);\n                    }\n                    if (result && result.walletInfo) {\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        window.$onekey = window.$onekey || {};\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                        window.$onekey.$walletInfo = result.walletInfo;\n                        try {\n                            localStorage.setItem(WALLET_INFO_LOACAL_KEY, JSON.stringify(result.walletInfo));\n                        }\n                        catch (e) {\n                            console.error(e);\n                        }\n                    }\n                    if (result) {\n                        resolve(result);\n                    }\n                    else {\n                        console.error('getConnectWalletInfo error: result=null');\n                        resolve(null);\n                    }\n                }\n                catch (err) {\n                    // TODO wallet not installed, timeout ERROR\n                    consoleErrorInDev('getConnectWalletInfo: ERROR', err);\n                    resolve(null);\n                }\n                finally {\n                    clearTimeout(timer);\n                }\n            }));\n        });\n    }\n    bridgeRequest(data, callback) {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            let hasCallback = false;\n            if (callback && isFunction(callback)) {\n                hasCallback = true;\n            }\n            try {\n                const payload = {\n                    data: data !== null && data !== void 0 ? data : {},\n                    scope: this.providerName,\n                };\n                this.debugLogger.providerBase('bridgeRequest:', payload, '\\r\\n -----> ', payload.data);\n                const resData = yield this.bridge.request(payload);\n                if (resData) {\n                    // @ts-ignore\n                    resData.id = (_b = (_a = data === null || data === void 0 ? void 0 : data.id) !== null && _a !== void 0 ? _a : resData.id) !== null && _b !== void 0 ? _b : undefined;\n                    // @ts-ignore\n                    resData.jsonrpc = (_d = (_c = data === null || data === void 0 ? void 0 : data.jsonrpc) !== null && _c !== void 0 ? _c : resData.jsonrpc) !== null && _d !== void 0 ? _d : '2.0';\n                }\n                const result = resData ? resData.result : undefined;\n                if (callback && hasCallback) {\n                    // callback with params: { id, result, jsonrpc }\n                    callback(null, resData);\n                }\n                this.debugLogger.providerBase('bridgeRequest RETURN:', { req: payload, res: resData }, '\\r\\n -----> ', payload.data, '\\r\\n -----> ', result);\n                return result;\n            }\n            catch (error) {\n                if (callback && hasCallback) {\n                    callback(error);\n                }\n                throw error;\n            }\n        });\n    }\n    sendSiteMetadataDomReady() {\n        if (document.readyState === 'complete') {\n            void this.sendSiteMetadata();\n        }\n        else {\n            const domContentLoadedHandler = () => {\n                void this.sendSiteMetadata();\n                window.removeEventListener('DOMContentLoaded', domContentLoadedHandler);\n            };\n            window.addEventListener('DOMContentLoaded', domContentLoadedHandler);\n        }\n    }\n    sendSiteMetadata() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const metadata = yield siteMetadata.getSiteMetadata();\n            return yield this.bridgeRequest({\n                method: METHODS.wallet_sendSiteMetadata,\n                params: metadata,\n            });\n        });\n    }\n    isConnectionStatusChanged(newStatus) {\n        return this.connectionStatus === undefined || newStatus !== this.connectionStatus;\n    }\n    isAccountsChanged(...args) {\n        throw new Error('isAccountsChanged not implemented');\n    }\n    isNetworkChanged(...args) {\n        throw new Error('isNetworkChanged not implemented');\n    }\n}\nexport { ProviderBase };\n","import { DEBUG_LOGGER_STORAGE_KEY } from './consts';\n// function fixGlobalShim() {\n//   // FIX errors in ReactNative\n//   //    ReferenceError: Can't find variable: global\n//   // @ts-ignore\n//   window.global = window.global || window || window.globalThis;\n//   // @ts-ignore\n//   window.global = window.global || window || window.globalThis;\n// }\nfunction injectJsBridge(bridgeCreator) {\n    // remove fixGlobalShim, \n    // because fixGlobalShim make some website not work properly \n    //  make cloudfare dead loop and make zhihu.com search functionally down\n    // fixGlobalShim();\n    var _a;\n    if (!((_a = window === null || window === void 0 ? void 0 : window.$onekey) === null || _a === void 0 ? void 0 : _a.jsBridge)) {\n        window.$onekey = window.$onekey || {};\n        window.$onekey.jsBridge = bridgeCreator();\n        if (typeof localStorage !== 'undefined' && localStorage.getItem(DEBUG_LOGGER_STORAGE_KEY)) {\n            console.log('===== jsBridge injected success! >>>>> ', performance.now());\n        }\n    }\n    return window.$onekey.jsBridge;\n}\nexport { injectJsBridge };\n","import { consoleErrorInDev } from './loggers';\nfunction injectedProviderReceiveHandler(payload, bridge) {\n    // ethereum, solana, conflux\n    const providerHub = (bridge === null || bridge === void 0 ? void 0 : bridge.providersHub) || window.$onekey;\n    const providerName = payload.scope;\n    const payloadData = payload.data;\n    if (!providerName) {\n        consoleErrorInDev('providerName (scope) is required in injectedProviderReceiveHandler.');\n        return;\n    }\n    let providers = [];\n    providers = providers.concat(providerHub[providerName]).filter(Boolean);\n    if (!providers || !providers.length) {\n        consoleErrorInDev(`[${providerName}] provider is NOT injected to document or bridge.`, payloadData);\n        return;\n    }\n    // emit events to injected provider\n    providers.forEach((provider) => {\n        if (provider && provider.emit) {\n            provider.emit('message_low_level', payloadData);\n            provider.emit('message_payload_raw', payload);\n        }\n    });\n    // $private custom provider receive handler\n    if (providerName === '$private') {\n        const privateProvider = providers[0];\n        if (privateProvider && privateProvider.webembedReceiveHandler) {\n            return privateProvider.webembedReceiveHandler(payload, bridge);\n        }\n    }\n}\nexport { injectedProviderReceiveHandler };\n","import { JsBridgeBase } from './JsBridgeBase';\nclass JsBridgeSimple extends JsBridgeBase {\n    constructor() {\n        super(...arguments);\n        this.sendAsString = true;\n        this.isInjected = true;\n        this.remote = null;\n        this.callbacksExpireTimeout = 0;\n    }\n    sendPayload(payload) {\n        if (!this.remote) {\n            throw new Error('JsBridgeSimple ERROR: remote not set.');\n        }\n        this.remote.receive(payload);\n    }\n    setRemote(remote) {\n        this.remote = remote;\n    }\n}\nexport { JsBridgeSimple };\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { JsBridgeBase } from './JsBridgeBase';\nlet postMessageListenerAdded = false;\n/**\n * When the JsBridgeIframe instance changes, the tag can be changed manually\n */\nfunction setPostMessageListenerFlag(value) {\n    postMessageListenerAdded = value;\n}\nfunction setupPostMessageListener(options = {}) {\n    if (postMessageListenerAdded) {\n        return;\n    }\n    postMessageListenerAdded = true;\n    // - receive\n    window.addEventListener('message', (event) => {\n        // TODO source whitelist\n        /**\n         * This origin is not guaranteed to be the current or future origin of the window\n         * temporarily comment this line\n         */\n        // if (event.origin !== options.origin) {\n        //   return;\n        // }\n        var _a, _b, _c;\n        const eventData = event.data;\n        const config = (_a = options.bridge) === null || _a === void 0 ? void 0 : _a.bridgeConfig;\n        if (config &&\n            eventData.channel === config.channel &&\n            eventData.frameName === config.remoteFrameName) {\n            const payload = eventData.payload;\n            const jsBridge = (_b = options.bridge) !== null && _b !== void 0 ? _b : (_c = window === null || window === void 0 ? void 0 : window.$onekey) === null || _c === void 0 ? void 0 : _c.jsBridge;\n            if (jsBridge) {\n                jsBridge.receive(payload);\n            }\n        }\n    }, false);\n}\nclass JsBridgeIframe extends JsBridgeBase {\n    constructor(config) {\n        var _a;\n        super(config);\n        this.sendAsString = false;\n        this.isInjected = true;\n        this.bridgeConfig = config;\n        this.targetOrigin = (_a = config.targetOrigin) !== null && _a !== void 0 ? _a : window.location.origin;\n        // receive message\n        setupPostMessageListener({\n            debugLogger: this.debugLogger,\n            bridge: this,\n            origin: this.targetOrigin,\n        });\n    }\n    // send message\n    sendPayload(payloadObj) {\n        const eventData = {\n            channel: this.bridgeConfig.channel,\n            frameName: this.bridgeConfig.selfFrameName,\n            payload: payloadObj,\n            direction: '',\n        };\n        this.bridgeConfig.remoteFrame.postMessage(eventData, this.targetOrigin);\n    }\n}\nexport { JsBridgeIframe, setPostMessageListenerFlag };\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { WALLET_INFO_LOACAL_KEY } from './consts';\n/**\n * An enumeration mapping specific blockchain provider names to their corresponding blockchain identifiers.\n *\n * These mappings are used to handle special cases where the provider name needs to be translated into a specific blockchain identifier for various operations.\n *\n */\nexport var ISpecialPropertyProviderNamesReflection;\n(function (ISpecialPropertyProviderNamesReflection) {\n    ISpecialPropertyProviderNamesReflection[\"btc\"] = \"unisat\";\n    ISpecialPropertyProviderNamesReflection[\"sui\"] = \"suiWallet\";\n    ISpecialPropertyProviderNamesReflection[\"polkadot\"] = \"polkadot-js\";\n})(ISpecialPropertyProviderNamesReflection || (ISpecialPropertyProviderNamesReflection = {}));\nexport function checkWalletSwitchEnable(property) {\n    try {\n        const walletInfoLocalStr = localStorage.getItem(WALLET_INFO_LOACAL_KEY);\n        const walletInfoLocal = walletInfoLocalStr ? JSON.parse(walletInfoLocalStr) : null;\n        if (walletInfoLocal && walletInfoLocal.walletSwitchConfig) {\n            const { enable, disable } = walletInfoLocal.walletSwitchConfig;\n            const enableList = enable || [];\n            const disableList = disable || [];\n            return ((enableList.includes(property) && !disableList.includes(property)) ||\n                (!enableList.includes(property) && !disableList.includes(property)));\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n    return true;\n}\nexport function checkEnableDefineProperty(property) {\n    if (property === '$onekey')\n        return false;\n    try {\n        const walletInfoLocalStr = localStorage.getItem(WALLET_INFO_LOACAL_KEY);\n        const walletInfoLocal = walletInfoLocalStr ? JSON.parse(walletInfoLocalStr) : null;\n        return !!(walletInfoLocal === null || walletInfoLocal === void 0 ? void 0 : walletInfoLocal.platformEnv.isExtension);\n    }\n    catch (e) {\n        console.error(e);\n    }\n    return false;\n}\nexport function defineWindowProperty(property, provider) {\n    if (!checkWalletSwitchEnable(property))\n        return;\n    const enable = checkEnableDefineProperty(property);\n    const proxyProvider = new Proxy(provider, {\n        defineProperty(target, property, attributes) {\n            // skip define Prevent overwriting\n            return true;\n        },\n    });\n    try {\n        if (enable) {\n            Object.keys(provider).forEach((key) => {\n                var _a;\n                ((_a = window[property]) !== null && _a !== void 0 ? _a : {})[key] = proxyProvider[key];\n            });\n            Object.defineProperty(window, property, {\n                configurable: false,\n                get() {\n                    return proxyProvider;\n                },\n                set(val) {\n                    // skip set\n                },\n            });\n        }\n        else {\n            window[property] = provider;\n        }\n    }\n    catch (ex) {\n        console.error(ex);\n        window[property] = provider;\n    }\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nfunction createCodeWithScriptTag({ code }) {\n    // script id check, only inject once.\n    return `\n    (function(){\n      const s = document.createElement('script');\n      s.setAttribute('async', 'false');\n      s.setAttribute('data-onekey-injected', 'true');\n      s.textContent=${JSON.stringify(code)};\n      (document.head || document.documentElement).appendChild(s);\n      s.remove();\n    })();\n  `;\n}\nfunction injectCodeWithScriptTag({ code, file, remove = true, }) {\n    (function () {\n        const s = document.createElement('script');\n        s.removeAttribute('async');\n        s.removeAttribute('defer');\n        s.setAttribute('data-onekey-injected', 'yes');\n        if (code) {\n            s.textContent = code;\n        }\n        if (file) {\n            s.src = file;\n        }\n        s.onload = function () {\n            if (remove && file) {\n                s.remove();\n            }\n        };\n        (document.head || document.documentElement).appendChild(s);\n        if (remove && code) {\n            s.remove();\n        }\n    })();\n}\nfunction createCodeJsBridgeReceive(payloadStr) {\n    return `\n  if(window.$onekey && window.$onekey.jsBridge){\n    window.$onekey.jsBridge.receive(${JSON.stringify(payloadStr)});\n  }\n  void 0;\n  `;\n}\nexport default {\n    injectCodeWithScriptTag,\n    createCodeWithScriptTag,\n    createCodeJsBridgeReceive,\n};\n","export * from './JsBridgeBase';\nexport * from './ProviderBase';\nexport * from './loggers';\nexport * from './injectJsBridge';\nexport * from './injectedProviderReceiveHandler';\nexport * from './JsBridgeSimple';\nexport * from './JsBridgeIframe';\nexport * from './CrossEventEmitter';\nexport * from './walletProperty';\nimport * as consts from './consts';\nexport { consts };\nimport injectedFactory from './injectedFactory';\nexport { injectedFactory };\nimport siteMetadata from './siteMetadata';\nexport { siteMetadata };\nexport { default as versionInfo } from './versionInfo';\n","// https://github.com/MetaMask/rpc-errors/blob/main/src/classes.ts\nimport safeStringify from 'fast-safe-stringify';\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Web3 RPC errors\n * per EIP-1474.\n * Permits any integer error code.\n */\nexport class Web3RpcError extends Error {\n    constructor(code, message, data) {\n        if (!Number.isInteger(code)) {\n            throw new Error('\"code\" must be an integer.');\n        }\n        if (!message || typeof message !== 'string') {\n            throw new Error('\"message\" must be a nonempty string.');\n        }\n        super(message);\n        this.code = code;\n        if (data !== undefined) {\n            this.data = data;\n        }\n    }\n    /**\n     * Returns a plain object with all public class properties.\n     */\n    serialize() {\n        const serialized = {\n            code: this.code,\n            message: this.message,\n        };\n        if (this.data !== undefined) {\n            serialized.data = this.data;\n        }\n        // TODO read error.stack cause RN hermes app crash\n        // if (this.stack) {\n        //   serialized.stack = this.stack;\n        // }\n        return serialized;\n    }\n    /**\n     * Return a string representation of the serialized error, omitting\n     * any circular references.\n     */\n    toString() {\n        return safeStringify(this.serialize(), stringifyReplacer, 2);\n    }\n}\n/**\n * Error subclass implementing Web3 Provider errors per EIP-1193.\n * Permits integer error codes in the [ 1000 <= 4999 ] range.\n */\nexport class Web3ProviderError extends Web3RpcError {\n    /**\n     * Create an Web3 Provider JSON-RPC error.\n     * `code` must be an integer in the 1000 <= 4999 range.\n     */\n    constructor(code, message, data) {\n        if (!isValidWeb3ProviderCode(code)) {\n            throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n        }\n        super(code, message, data);\n    }\n}\n// Internal\nfunction isValidWeb3ProviderCode(code) {\n    return Number.isInteger(code) && code >= 1000 && code <= 4999;\n}\nfunction stringifyReplacer(_, value) {\n    if (value === '[Circular]') {\n        return undefined;\n    }\n    return value;\n}\n","export const errorCodes = {\n    rpc: {\n        invalidInput: -32000,\n        resourceNotFound: -32001,\n        resourceUnavailable: -32002,\n        transactionRejected: -32003,\n        methodNotSupported: -32004,\n        limitExceeded: -32005,\n        parse: -32700,\n        invalidRequest: -32600,\n        methodNotFound: -32601,\n        invalidParams: -32602,\n        internal: -32603,\n    },\n    provider: {\n        userRejectedRequest: 4001,\n        unauthorized: 4100,\n        unsupportedMethod: 4200,\n        disconnected: 4900,\n        chainDisconnected: 4901,\n        requestTimeout: 4500,\n    },\n};\nexport const errorValues = {\n    '-32700': {\n        standard: 'JSON RPC 2.0',\n        message: 'Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.',\n    },\n    '-32600': {\n        standard: 'JSON RPC 2.0',\n        message: 'The JSON sent is not a valid Request object.',\n    },\n    '-32601': {\n        standard: 'JSON RPC 2.0',\n        message: 'The method does not exist / is not available.',\n    },\n    '-32602': {\n        standard: 'JSON RPC 2.0',\n        message: 'Invalid method parameter(s).',\n    },\n    '-32603': {\n        standard: 'JSON RPC 2.0',\n        message: 'Internal JSON-RPC error.',\n    },\n    '-32000': {\n        standard: 'EIP-1474',\n        message: 'Invalid input.',\n    },\n    '-32001': {\n        standard: 'EIP-1474',\n        message: 'Resource not found.',\n    },\n    '-32002': {\n        standard: 'EIP-1474',\n        message: 'Resource unavailable.',\n    },\n    '-32003': {\n        standard: 'EIP-1474',\n        message: 'Transaction rejected.',\n    },\n    '-32004': {\n        standard: 'EIP-1474',\n        message: 'Method not supported.',\n    },\n    '-32005': {\n        standard: 'EIP-1474',\n        message: 'Request limit exceeded.',\n    },\n    '4001': {\n        standard: 'EIP-1193',\n        message: 'User rejected the request.',\n    },\n    '4100': {\n        standard: 'EIP-1193',\n        message: 'The requested account and/or method has not been authorized by the user.',\n    },\n    '4200': {\n        standard: 'EIP-1193',\n        message: 'The requested method is not supported by this Web3 provider.',\n    },\n    '4900': {\n        standard: 'EIP-1193',\n        message: 'The provider is disconnected from all chains.',\n    },\n    '4901': {\n        standard: 'EIP-1193',\n        message: 'The provider is disconnected from the specified chain.',\n    },\n    '4500': {\n        standard: '',\n        message: 'The request by this Web3 provider is timeout.',\n    },\n};\n// https://eips.ethereum.org/EIPS/eip-1474#error-codes\n// https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n","import { errorCodes, errorValues } from './error-constants';\nimport { Web3RpcError } from './classes';\nconst FALLBACK_ERROR_CODE = errorCodes.rpc.internal;\nconst FALLBACK_MESSAGE = 'Unspecified error message. This is a bug, please report it.';\nconst FALLBACK_ERROR = {\n    code: FALLBACK_ERROR_CODE,\n    message: getMessageFromCode(FALLBACK_ERROR_CODE),\n};\nexport const JSON_RPC_SERVER_ERROR_MESSAGE = 'Unspecified server error.';\n/**\n * Gets the message for a given code, or a fallback message if the code has\n * no corresponding message.\n */\nexport function getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\n    if (Number.isInteger(code)) {\n        const codeString = code.toString();\n        if (hasKey(errorValues, codeString)) {\n            return errorValues[codeString].message;\n        }\n        if (isJsonRpcServerError(code)) {\n            return JSON_RPC_SERVER_ERROR_MESSAGE;\n        }\n    }\n    return fallbackMessage;\n}\n/**\n * Returns whether the given code is valid.\n * A code is only valid if it has a message.\n */\nexport function isValidCode(code) {\n    if (!Number.isInteger(code)) {\n        return false;\n    }\n    const codeString = code.toString();\n    if (errorValues[codeString]) {\n        return true;\n    }\n    if (isJsonRpcServerError(code)) {\n        return true;\n    }\n    return false;\n}\n/**\n * Serializes the given error to an Web3 JSON RPC-compatible error object.\n * Merely copies the given error's values if it is already compatible.\n * If the given error is not fully compatible, it will be preserved on the\n * returned object's data.originalError property.\n */\nexport function serializeError(error, { fallbackError = FALLBACK_ERROR, shouldIncludeStack = false, } = {}) {\n    var _a, _b;\n    if (!fallbackError ||\n        !Number.isInteger(fallbackError.code) ||\n        typeof fallbackError.message !== 'string') {\n        throw new Error('Must provide fallback error with integer number code and string message.');\n    }\n    if (error instanceof Web3RpcError) {\n        return error.serialize();\n    }\n    const serialized = {};\n    if (error &&\n        typeof error === 'object' &&\n        !Array.isArray(error) &&\n        hasKey(error, 'code') &&\n        isValidCode(error.code)) {\n        const _error = error;\n        serialized.code = _error.code;\n        if (_error.message && typeof _error.message === 'string') {\n            serialized.message = _error.message;\n            if (hasKey(_error, 'data')) {\n                serialized.data = _error.data;\n            }\n        }\n        else {\n            serialized.message = getMessageFromCode(serialized.code);\n            serialized.data = { originalError: assignOriginalError(error) };\n        }\n    }\n    else {\n        serialized.code = fallbackError.code;\n        const message = (_a = error) === null || _a === void 0 ? void 0 : _a.message;\n        serialized.message = (message && typeof message === 'string'\n            ? message\n            : fallbackError.message);\n        serialized.data = { originalError: assignOriginalError(error) };\n    }\n    const stack = (_b = error) === null || _b === void 0 ? void 0 : _b.stack;\n    if (shouldIncludeStack && error && stack && typeof stack === 'string') {\n        serialized.stack = stack;\n    }\n    return serialized;\n}\n// Internal\nfunction isJsonRpcServerError(code) {\n    return code >= -32099 && code <= -32000;\n}\nfunction assignOriginalError(error) {\n    if (error && typeof error === 'object' && !Array.isArray(error)) {\n        return Object.assign({}, error);\n    }\n    return error;\n}\nfunction hasKey(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n","import { Web3RpcError, Web3ProviderError } from './classes';\nimport { getMessageFromCode } from './utils';\nimport { errorCodes } from './error-constants';\nexport const web3Errors = {\n    rpc: {\n        /**\n         * Get a JSON RPC 2.0 Parse (-32700) error.\n         */\n        parse: (arg) => getWeb3JsonRpcError(errorCodes.rpc.parse, arg),\n        /**\n         * Get a JSON RPC 2.0 Invalid Request (-32600) error.\n         */\n        invalidRequest: (arg) => getWeb3JsonRpcError(errorCodes.rpc.invalidRequest, arg),\n        /**\n         * Get a JSON RPC 2.0 Invalid Params (-32602) error.\n         */\n        invalidParams: (arg) => getWeb3JsonRpcError(errorCodes.rpc.invalidParams, arg),\n        /**\n         * Get a JSON RPC 2.0 Method Not Found (-32601) error.\n         */\n        methodNotFound: (arg) => getWeb3JsonRpcError(errorCodes.rpc.methodNotFound, arg),\n        /**\n         * Get a JSON RPC 2.0 Internal (-32603) error.\n         */\n        internal: (arg) => getWeb3JsonRpcError(errorCodes.rpc.internal, arg),\n        /**\n         * Get a JSON RPC 2.0 Server error.\n         * Permits integer error codes in the [ -32099 <= -32005 ] range.\n         * Codes -32000 through -32004 are reserved by EIP-1474.\n         */\n        server: (opts) => {\n            if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n                throw new Error('Web3 RPC Server errors must provide single object argument.');\n            }\n            const { code } = opts;\n            if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n                throw new Error('\"code\" must be an integer such that: -32099 <= code <= -32005');\n            }\n            return getWeb3JsonRpcError(code, opts);\n        },\n        /**\n         * Get an Web3 JSON RPC Invalid Input (-32000) error.\n         */\n        invalidInput: (arg) => getWeb3JsonRpcError(errorCodes.rpc.invalidInput, arg),\n        /**\n         * Get an Web3 JSON RPC Resource Not Found (-32001) error.\n         */\n        resourceNotFound: (arg) => getWeb3JsonRpcError(errorCodes.rpc.resourceNotFound, arg),\n        /**\n         * Get an Web3 JSON RPC Resource Unavailable (-32002) error.\n         */\n        resourceUnavailable: (arg) => getWeb3JsonRpcError(errorCodes.rpc.resourceUnavailable, arg),\n        /**\n         * Get an Web3 JSON RPC Transaction Rejected (-32003) error.\n         */\n        transactionRejected: (arg) => getWeb3JsonRpcError(errorCodes.rpc.transactionRejected, arg),\n        /**\n         * Get an Web3 JSON RPC Method Not Supported (-32004) error.\n         */\n        methodNotSupported: (arg) => getWeb3JsonRpcError(errorCodes.rpc.methodNotSupported, arg),\n        /**\n         * Get an Web3 JSON RPC Limit Exceeded (-32005) error.\n         */\n        limitExceeded: (arg) => getWeb3JsonRpcError(errorCodes.rpc.limitExceeded, arg),\n    },\n    provider: {\n        /**\n         * Get an Web3 Provider User Rejected Request (4001) error.\n         */\n        userRejectedRequest: (arg) => {\n            return getWeb3ProviderError(errorCodes.provider.userRejectedRequest, arg);\n        },\n        /**\n         * Get an Web3 Provider Unauthorized (4100) error.\n         */\n        unauthorized: (arg) => {\n            return getWeb3ProviderError(errorCodes.provider.unauthorized, arg);\n        },\n        /**\n         * Get an Web3 Provider Unsupported Method (4200) error.\n         */\n        unsupportedMethod: (arg) => {\n            return getWeb3ProviderError(errorCodes.provider.unsupportedMethod, arg);\n        },\n        /**\n         * Get an Web3 Provider Not Connected (4900) error.\n         */\n        disconnected: (arg) => {\n            return getWeb3ProviderError(errorCodes.provider.disconnected, arg);\n        },\n        /**\n         * Get an Web3 Provider Chain Not Connected (4901) error.\n         */\n        chainDisconnected: (arg) => {\n            return getWeb3ProviderError(errorCodes.provider.chainDisconnected, arg);\n        },\n        requestTimeout: (arg) => {\n            return getWeb3ProviderError(errorCodes.provider.requestTimeout, arg);\n        },\n        /**\n         * Get a custom Web3 Provider error.\n         */\n        custom: (opts) => {\n            if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n                throw new Error('Web3 Provider custom errors must provide single object argument.');\n            }\n            const { code, message, data } = opts;\n            if (!message || typeof message !== 'string') {\n                throw new Error('\"message\" must be a nonempty string');\n            }\n            return new Web3ProviderError(code, message, data);\n        },\n    },\n};\n// Internal\nfunction getWeb3JsonRpcError(code, arg) {\n    const [message, data] = parseOpts(arg);\n    return new Web3RpcError(code, message || getMessageFromCode(code), data);\n}\nfunction getWeb3ProviderError(code, arg) {\n    const [message, data] = parseOpts(arg);\n    return new Web3ProviderError(code, message || getMessageFromCode(code), data);\n}\nfunction parseOpts(arg) {\n    if (arg) {\n        if (typeof arg === 'string') {\n            return [arg];\n        }\n        else if (typeof arg === 'object' && !Array.isArray(arg)) {\n            const { message, data } = arg;\n            if (message && typeof message !== 'string') {\n                throw new Error('Must specify string message.');\n            }\n            return [message || undefined, data];\n        }\n    }\n    return [];\n}\n","import { Web3RpcError, Web3ProviderError } from './classes';\nimport { serializeError, getMessageFromCode, } from './utils';\nimport { web3Errors } from './errors';\nimport { errorCodes } from './error-constants';\nexport { errorCodes, web3Errors, Web3RpcError, Web3ProviderError, serializeError, getMessageFromCode, };\n","export var IJsBridgeMessageTypes;\n(function (IJsBridgeMessageTypes) {\n    IJsBridgeMessageTypes[\"RESPONSE\"] = \"RESPONSE\";\n    IJsBridgeMessageTypes[\"REQUEST\"] = \"REQUEST\";\n})(IJsBridgeMessageTypes || (IJsBridgeMessageTypes = {}));\nexport var IInjectedProviderNames;\n(function (IInjectedProviderNames) {\n    IInjectedProviderNames[\"btc\"] = \"btc\";\n    IInjectedProviderNames[\"ethereum\"] = \"ethereum\";\n    IInjectedProviderNames[\"conflux\"] = \"conflux\";\n    IInjectedProviderNames[\"tron\"] = \"tron\";\n    IInjectedProviderNames[\"solana\"] = \"solana\";\n    IInjectedProviderNames[\"starcoin\"] = \"starcoin\";\n    IInjectedProviderNames[\"sollet\"] = \"sollet\";\n    IInjectedProviderNames[\"near\"] = \"near\";\n    IInjectedProviderNames[\"aptos\"] = \"aptos\";\n    IInjectedProviderNames[\"martian\"] = \"martian\";\n    IInjectedProviderNames[\"algo\"] = \"algo\";\n    IInjectedProviderNames[\"sui\"] = \"sui\";\n    IInjectedProviderNames[\"cardano\"] = \"cardano\";\n    IInjectedProviderNames[\"cosmos\"] = \"cosmos\";\n    IInjectedProviderNames[\"polkadot\"] = \"polkadot\";\n    IInjectedProviderNames[\"webln\"] = \"webln\";\n    IInjectedProviderNames[\"nostr\"] = \"nostr\";\n    IInjectedProviderNames[\"$private\"] = \"$private\";\n    IInjectedProviderNames[\"$hardware_sdk\"] = \"$hardware_sdk\";\n})(IInjectedProviderNames || (IInjectedProviderNames = {}));\n"],"names":["ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","module","exports","once","emitter","name","Promise","resolve","reject","errorListener","err","removeListener","resolver","slice","arguments","eventTargetAgnosticAddListener","on","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","type","prepend","events","create","newListener","emit","existing","unshift","push","m","length","warned","w","String","count","console","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arr","ret","i","arrayClone","listenerCount","n","copy","flags","addEventListener","wrapListener","arg","removeEventListener","defineProperty","enumerable","get","set","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","Error","message","context","handler","len","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","spliceOne","index","pop","off","removeAllListeners","key","keys","rawListeners","eventNames","stringify","default","stable","deterministicStringify","stableStringify","LIMIT_REPLACE_NODE","CIRCULAR_REPLACE_NODE","replacerStack","defaultOptions","depthLimit","MAX_SAFE_INTEGER","edgesLimit","obj","replacer","spacer","options","decirc","val","k","edgeIndex","stack","parent","depth","setReplace","Array","isArray","res","JSON","replaceGetterValues","_","part","replace","propertyDescriptor","getOwnPropertyDescriptor","configurable","compareFunction","a","b","tmp","deterministicDecirc","toJSON","sort","v","splice","getPrototype","overArg","func","transform","baseGetTag","__webpack_require__","isObject","tag","isObjectLike","objectProto","funcToString","funcProto","toString","hasOwnProperty","objectCtorString","proto","Ctor","constructor","plural","ms","msAbs","Math","round","isPlural","parse","str","match","exec","parseFloat","toLowerCase","isFinite","long","abs","h","s","loggerNames","ISpecialPropertyProviderNamesReflection","safeApply","setTimeout","EventEmitterProxy","cross_events","eventName","event","CrossEventEmitter","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","e","rejected","result","done","adopt","then","JS_BRIDGE_MESSAGE_EXT_CHANNEL","JS_BRIDGE_MESSAGE_DIRECTION","DEBUG_LOGGER_STORAGE_KEY","WALLET_INFO_LOACAL_KEY","browser_awaiter","exportsBrowser","formatArgs","useColors","namespace","humanize","diff","c","color","lastC","save","namespaces","storage","setItem","lodash","isNil","removeItem","load","r","getItem","process","env","DEBUG","window","__nwjs","navigator","userAgent","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","RegExp","$1","customLocalStorage","global","$$onekeyAppStorage","localStorage","destroy","colors","log","debug","common","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","enabled","curr","Date","self","prev","coerce","format","formatter","formatters","logFn","selectColor","extend","delimiter","newDebug","toNamespace","regexp","substring","disable","names","map","skips","join","enable","split","substr","test","forEach","j","hash","charCodeAt","config","consoleErrorInDev","loggerConfig","fakeLogger","_isFakeLogger","info","trace","FakeDebugLogger","jsBridge","providerBase","extInjected","extContentScripts","webview","desktopInjected","ethereum","_debug","_externalLogger","_createExternalLog","_a","_b","initExternalLogInstances","isDebugReady","_attachExternalLogger","logger","_createDebugInstance","fakeDebugLogger","appDebugLogger","_debugInstanceCreatedMap","initDebugInstances","_debugLog","_originLog","versionInfo","version","globalWindow","BRIDGE_EVENTS","JsBridgeBase_JsBridgeBase","_requestPayloadCache","isExtUi","isInjected","sendAsString","globalOnMessageEnabled","providersHub","globalOnMessage","receiveHandler","returnValue","id","response","scope","remoteId","data","peerOrigin","origin","cross_inpage_provider_types_dist","REQUEST","responseError","remoteInfo","callbacksExpireTimeout","debugLogger","callbacks","callbackId","timeout","code","rejectExpiredCallbacks","attachProviderInstance","provider","providerName","createCallbackId","createPayload","payload","created","now","errorInfo","className","autoToast","send","sync","executor","_c","_id","location","payloadToSend","sendPayload","rejectCallback","processCallback","method","resolveCallback","callbackInfo","clearCallbackCache","callbacksLength","dist","b$","requestTimeout","receive","payloadReceived","sender","_d","_e","isPlainObject","isString","internal","Boolean","payloadObj","includes","relatedSendPayload","RESPONSE","error0","eventMessagePayload","assign","requestSync","request","siteMetadata_awaiter","imgExists","url","img","createElement","onload","onerror","src","getSiteName","windowObject","siteName","querySelector","content","metaTitle","title","hostname","getSiteIcon","icons","querySelectorAll","icon","href","siteMetadata","getSiteMetadata","ProviderBase_awaiter","METHODS","wallet_getConnectWalletInfo","wallet_sendSiteMetadata","ProviderBase","isOneKey","bridge","configDebugLogger","enabledKeys","$onekey","$debugLogger","getConnectWalletInfo","timer","bridgeRequest","params","time","providerState","debugLoggerConfig","walletInfo","$walletInfo","clearTimeout","callback","hasCallback","isFunction","resData","jsonrpc","req","sendSiteMetadataDomReady","readyState","sendSiteMetadata","domContentLoadedHandler","metadata","isConnectionStatusChanged","newStatus","connectionStatus","isAccountsChanged","isNetworkChanged","injectJsBridge","bridgeCreator","performance","injectedProviderReceiveHandler","providerHub","payloadData","providers","filter","privateProvider","webembedReceiveHandler","postMessageListenerAdded","JsBridgeIframe","bridgeConfig","targetOrigin","setupPostMessageListener","eventData","channel","frameName","remoteFrameName","selfFrameName","direction","remoteFrame","postMessage","checkWalletSwitchEnable","property","walletInfoLocalStr","walletInfoLocal","walletSwitchConfig","enableList","disableList","defineWindowProperty","checkEnableDefineProperty","platformEnv","isExtension","proxyProvider","Proxy","attributes","ex","classes_Web3RpcError","isInteger","serialize","serialized","fast_safe_stringify","stringifyReplacer","Web3ProviderError","errorCodes","rpc","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","limitExceeded","invalidRequest","methodNotFound","invalidParams","userRejectedRequest","unauthorized","unsupportedMethod","disconnected","chainDisconnected","error_constants_errorValues","standard","FALLBACK_ERROR_CODE","getMessageFromCode","fallbackMessage","codeString","web3Errors","getWeb3JsonRpcError","server","opts","getWeb3ProviderError","custom","parseOpts","IJsBridgeMessageTypes","IInjectedProviderNames"],"sourceRoot":""}