{"version":3,"file":"static/chunks/251.4894b1b8b89e7d82.js","mappings":"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","sources":["webpack://_N_E/./node_modules/algorand-walletconnect-qrcode-modal/dist/cjs/index.js","webpack://_N_E/./components/algoWalletConnect/api.ts","webpack://_N_E/./components/algoWalletConnect/scenarios.ts","webpack://_N_E/./components/algoWalletConnect/dapps.config.ts","webpack://_N_E/./components/algoWalletConnect/AlgoExample.tsx","webpack://_N_E/./components/dappList/DAppList.tsx","webpack://_N_E/./styles/Home.module.css","webpack://_N_E/./node_modules/next/dist/compiled/vm-browserify/index.js","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/@walletconnect/utils/node_modules/bn.js/lib|buffer","webpack://_N_E/<anon>"],"sourcesContent":["function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar browserUtils = require('@walletconnect/browser-utils');\nvar QRCode = _interopDefault(require('qrcode'));\nvar copy = _interopDefault(require('copy-to-clipboard'));\nvar React = require('preact/compat');\n\nfunction open(uri) {\n  QRCode.toString(uri, {\n    type: \"terminal\"\n  }).then(console.log);\n}\n\nvar WALLETCONNECT_STYLE_SHEET = \":root {\\n  --animation-duration: 300ms;\\n}\\n\\n@keyframes fadeIn {\\n  from {\\n    opacity: 0;\\n  }\\n  to {\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes fadeOut {\\n  from {\\n    opacity: 1;\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n}\\n\\n.animated {\\n  animation-duration: var(--animation-duration);\\n  animation-fill-mode: both;\\n}\\n\\n.fadeIn {\\n  animation-name: fadeIn;\\n}\\n\\n.fadeOut {\\n  animation-name: fadeOut;\\n}\\n\\n#walletconnect-wrapper {\\n  -webkit-user-select: none;\\n  align-items: center;\\n  display: flex;\\n  height: 100%;\\n  justify-content: center;\\n  left: 0;\\n  pointer-events: none;\\n  position: fixed;\\n  top: 0;\\n  user-select: none;\\n  width: 100%;\\n  z-index: 99999999999999;\\n}\\n\\n.walletconnect-modal__headerLogo {\\n  height: 21px;\\n}\\n\\n.walletconnect-modal__header p {\\n  color: #ffffff;\\n  font-size: 20px;\\n  font-weight: 600;\\n  margin: 0;\\n  align-items: flex-start;\\n  display: flex;\\n  flex: 1;\\n  margin-left: 5px;\\n}\\n\\n.walletconnect-modal__close__wrapper {\\n  position: absolute;\\n  top: 0px;\\n  right: 0px;\\n  z-index: 10000;\\n  background: white;\\n  border-radius: 26px;\\n  padding: 6px;\\n  box-sizing: border-box;\\n  width: 26px;\\n  height: 26px;\\n  cursor: pointer;\\n}\\n\\n.walletconnect-modal__close__icon {\\n  position: relative;\\n  top: 7px;\\n  right: 0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transform: rotate(45deg);\\n}\\n\\n.walletconnect-modal__close__line1 {\\n  position: absolute;\\n  width: 100%;\\n  border: 1px solid rgb(48, 52, 59);\\n}\\n\\n.walletconnect-modal__close__line2 {\\n  position: absolute;\\n  width: 100%;\\n  border: 1px solid rgb(48, 52, 59);\\n  transform: rotate(90deg);\\n}\\n\\n.walletconnect-qrcode__base {\\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n  background: rgba(37, 41, 46, 0.95);\\n  height: 100%;\\n  left: 0;\\n  pointer-events: auto;\\n  position: fixed;\\n  top: 0;\\n  transition: 0.4s cubic-bezier(0.19, 1, 0.22, 1);\\n  width: 100%;\\n  will-change: opacity;\\n  padding: 40px;\\n  box-sizing: border-box;\\n}\\n\\n.walletconnect-qrcode__text {\\n  color: rgba(60, 66, 82, 0.6);\\n  font-size: 16px;\\n  font-weight: 600;\\n  letter-spacing: 0;\\n  line-height: 1.1875em;\\n  margin: 10px 0 20px 0;\\n  text-align: center;\\n  width: 100%;\\n}\\n\\n@media only screen and (max-width: 768px) {\\n  .walletconnect-qrcode__text {\\n    font-size: 4vw;\\n  }\\n}\\n\\n@media only screen and (max-width: 320px) {\\n  .walletconnect-qrcode__text {\\n    font-size: 14px;\\n  }\\n}\\n\\n.walletconnect-qrcode__image {\\n  width: calc(100% - 30px);\\n  box-sizing: border-box;\\n  cursor: none;\\n  margin: 0 auto;\\n}\\n\\n.walletconnect-qrcode__notification {\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  font-size: 16px;\\n  padding: 16px 20px;\\n  border-radius: 16px;\\n  text-align: center;\\n  transition: all 0.1s ease-in-out;\\n  background: white;\\n  color: black;\\n  margin-bottom: -60px;\\n  opacity: 0;\\n}\\n\\n.walletconnect-qrcode__notification.notification__show {\\n  opacity: 1;\\n}\\n\\n@media only screen and (max-width: 768px) {\\n  .walletconnect-modal__header {\\n    height: 130px;\\n  }\\n  .walletconnect-modal__base {\\n    overflow: auto;\\n  }\\n}\\n\\n@media only screen and (min-device-width: 415px) and (max-width: 768px) {\\n  #content {\\n    max-width: 768px;\\n    box-sizing: border-box;\\n  }\\n}\\n\\n@media only screen and (min-width: 375px) and (max-width: 415px) {\\n  #content {\\n    max-width: 414px;\\n    box-sizing: border-box;\\n  }\\n}\\n\\n@media only screen and (min-width: 320px) and (max-width: 375px) {\\n  #content {\\n    max-width: 375px;\\n    box-sizing: border-box;\\n  }\\n}\\n\\n@media only screen and (max-width: 320px) {\\n  #content {\\n    max-width: 320px;\\n    box-sizing: border-box;\\n  }\\n}\\n\\n.walletconnect-modal__base {\\n  -webkit-font-smoothing: antialiased;\\n  background: #ffffff;\\n  border-radius: 24px;\\n  box-shadow: 0 10px 50px 5px rgba(0, 0, 0, 0.4);\\n  font-family: ui-rounded, \\\"SF Pro Rounded\\\", \\\"SF Pro Text\\\", medium-content-sans-serif-font,\\n    -apple-system, BlinkMacSystemFont, ui-sans-serif, \\\"Segoe UI\\\", Roboto, Oxygen, Ubuntu, Cantarell,\\n    \\\"Open Sans\\\", \\\"Helvetica Neue\\\", sans-serif;\\n  margin-top: 41px;\\n  padding: 24px 24px 22px;\\n  pointer-events: auto;\\n  position: relative;\\n  text-align: center;\\n  transition: 0.4s cubic-bezier(0.19, 1, 0.22, 1);\\n  will-change: transform;\\n  overflow: visible;\\n  transform: translateY(-50%);\\n  top: 50%;\\n  max-width: 500px;\\n  margin: auto;\\n}\\n\\n@media only screen and (max-width: 320px) {\\n  .walletconnect-modal__base {\\n    padding: 24px 12px;\\n  }\\n}\\n\\n.walletconnect-modal__base .hidden {\\n  transform: translateY(150%);\\n  transition: 0.125s cubic-bezier(0.4, 0, 1, 1);\\n}\\n\\n.walletconnect-modal__header {\\n  align-items: center;\\n  display: flex;\\n  height: 26px;\\n  left: 0;\\n  justify-content: space-between;\\n  position: absolute;\\n  top: -42px;\\n  width: 100%;\\n}\\n\\n.walletconnect-modal__base .wc-logo {\\n  align-items: center;\\n  display: flex;\\n  height: 26px;\\n  margin-top: 15px;\\n  padding-bottom: 15px;\\n  pointer-events: auto;\\n}\\n\\n.walletconnect-modal__base .wc-logo div {\\n  background-color: #3399ff;\\n  height: 21px;\\n  margin-right: 5px;\\n  mask-image: url(\\\"images/wc-logo.svg\\\") center no-repeat;\\n  width: 32px;\\n}\\n\\n.walletconnect-modal__base .wc-logo p {\\n  color: #ffffff;\\n  font-size: 20px;\\n  font-weight: 600;\\n  margin: 0;\\n}\\n\\n.walletconnect-modal__base h2 {\\n  color: rgba(60, 66, 82, 0.6);\\n  font-size: 16px;\\n  font-weight: 600;\\n  letter-spacing: 0;\\n  line-height: 1.1875em;\\n  margin: 0 0 19px 0;\\n  text-align: center;\\n  width: 100%;\\n}\\n\\n.walletconnect-modal__base__row {\\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n  align-items: center;\\n  border-radius: 20px;\\n  cursor: pointer;\\n  display: flex;\\n  height: 56px;\\n  justify-content: space-between;\\n  padding: 0 15px;\\n  position: relative;\\n  margin: 0px 0px 8px;\\n  text-align: left;\\n  transition: 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94);\\n  will-change: transform;\\n  text-decoration: none;\\n}\\n\\n.walletconnect-modal__base__row:hover {\\n  background: rgba(60, 66, 82, 0.06);\\n}\\n\\n.walletconnect-modal__base__row:active {\\n  background: rgba(60, 66, 82, 0.06);\\n  transform: scale(0.975);\\n  transition: 0.1s cubic-bezier(0.25, 0.46, 0.45, 0.94);\\n}\\n\\n.walletconnect-modal__base__row__h3 {\\n  color: #25292e;\\n  font-size: 20px;\\n  font-weight: 700;\\n  margin: 0;\\n  padding-bottom: 3px;\\n}\\n\\n.walletconnect-modal__base__row__right {\\n  align-items: center;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.walletconnect-modal__base__row__right__app-icon {\\n  border-radius: 8px;\\n  height: 34px;\\n  margin: 0 11px 2px 0;\\n  width: 34px;\\n  background-size: 100%;\\n  box-shadow: 0 4px 12px 0 rgba(37, 41, 46, 0.25);\\n}\\n\\n.walletconnect-modal__base__row__right__caret {\\n  height: 18px;\\n  opacity: 0.3;\\n  transition: 0.1s cubic-bezier(0.25, 0.46, 0.45, 0.94);\\n  width: 8px;\\n  will-change: opacity;\\n}\\n\\n.walletconnect-modal__base__row:hover .caret,\\n.walletconnect-modal__base__row:active .caret {\\n  opacity: 0.6;\\n}\\n\\n.walletconnect-modal__mobile__toggle {\\n  width: 80%;\\n  display: flex;\\n  margin: 0 auto;\\n  position: relative;\\n  overflow: hidden;\\n  border-radius: 8px;\\n  margin-bottom: 18px;\\n  background: #d4d5d9;\\n}\\n\\n.walletconnect-modal__single_wallet {\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 7px;\\n  margin-bottom: 18px;\\n}\\n\\n.walletconnect-modal__single_wallet a {\\n  cursor: pointer;\\n  color: rgb(64, 153, 255);\\n  font-size: 21px;\\n  font-weight: 800;\\n  text-decoration: none !important;\\n  margin: 0 auto;\\n}\\n\\n.walletconnect-modal__mobile__toggle_selector {\\n  width: calc(50% - 8px);\\n  background: white;\\n  position: absolute;\\n  border-radius: 5px;\\n  height: calc(100% - 8px);\\n  top: 4px;\\n  transition: all 0.2s ease-in-out;\\n  transform: translate3d(4px, 0, 0);\\n}\\n\\n.walletconnect-modal__mobile__toggle.right__selected .walletconnect-modal__mobile__toggle_selector {\\n  transform: translate3d(calc(100% + 12px), 0, 0);\\n}\\n\\n.walletconnect-modal__mobile__toggle a {\\n  font-size: 12px;\\n  width: 50%;\\n  text-align: center;\\n  padding: 8px;\\n  margin: 0;\\n  font-weight: 600;\\n  z-index: 1;\\n}\\n\\n.walletconnect-modal__footer {\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 20px;\\n}\\n\\n@media only screen and (max-width: 768px) {\\n  .walletconnect-modal__footer {\\n    margin-top: 5vw;\\n  }\\n}\\n\\n.walletconnect-modal__footer a {\\n  cursor: pointer;\\n  color: #898d97;\\n  font-size: 15px;\\n  margin: 0 auto;\\n}\\n\\n@media only screen and (max-width: 320px) {\\n  .walletconnect-modal__footer a {\\n    font-size: 14px;\\n  }\\n}\\n\\n.walletconnect-connect__buttons__wrapper {\\n  max-height: 44vh;\\n}\\n\\n.walletconnect-connect__buttons__wrapper__android {\\n  margin: 50% 0;\\n}\\n\\n.walletconnect-connect__buttons__wrapper__wrap {\\n  display: grid;\\n  grid-template-columns: repeat(4, 1fr);\\n  margin: 10px 0;\\n}\\n\\n@media only screen and (min-width: 768px) {\\n  .walletconnect-connect__buttons__wrapper__wrap {\\n    margin-top: 40px;\\n  }\\n}\\n\\n.walletconnect-connect__button {\\n  background-color: rgb(64, 153, 255);\\n  padding: 12px;\\n  border-radius: 8px;\\n  text-decoration: none;\\n  color: rgb(255, 255, 255);\\n  font-weight: 500;\\n}\\n\\n.walletconnect-connect__button__icon_anchor {\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: flex-start;\\n  align-items: center;\\n  margin: 8px;\\n  width: 42px;\\n  justify-self: center;\\n  flex-direction: column;\\n  text-decoration: none !important;\\n}\\n\\n@media only screen and (max-width: 320px) {\\n  .walletconnect-connect__button__icon_anchor {\\n    margin: 4px;\\n  }\\n}\\n\\n.walletconnect-connect__button__icon {\\n  border-radius: 10px;\\n  height: 42px;\\n  margin: 0;\\n  width: 42px;\\n  background-size: cover !important;\\n  box-shadow: 0 4px 12px 0 rgba(37, 41, 46, 0.25);\\n}\\n\\n.walletconnect-connect__button__text {\\n  color: #424952;\\n  font-size: 2.7vw;\\n  text-decoration: none !important;\\n  padding: 0;\\n  margin-top: 1.8vw;\\n  font-weight: 600;\\n}\\n\\n@media only screen and (min-width: 768px) {\\n  .walletconnect-connect__button__text {\\n    font-size: 16px;\\n    margin-top: 12px;\\n  }\\n}\\n\\n.walletconnect-search__input {\\n  border: none;\\n  background: #d4d5d9;\\n  border-style: none;\\n  padding: 8px 16px;\\n  outline: none;\\n  font-style: normal;\\n  font-stretch: normal;\\n  font-size: 16px;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  text-align: left;\\n  border-radius: 8px;\\n  width: calc(100% - 16px);\\n  margin: 0;\\n  margin-bottom: 8px;\\n}\\n\";\n\nvar WALLETCONNECT_LOGO_SVG_URL = \"data:image/svg+xml,%3Csvg height='185' viewBox='0 0 300 185' width='300' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m61.4385429 36.2562612c48.9112241-47.8881663 128.2119871-47.8881663 177.1232091 0l5.886545 5.7634174c2.445561 2.3944081 2.445561 6.2765112 0 8.6709204l-20.136695 19.715503c-1.222781 1.1972051-3.2053 1.1972051-4.428081 0l-8.100584-7.9311479c-34.121692-33.4079817-89.443886-33.4079817-123.5655788 0l-8.6750562 8.4936051c-1.2227816 1.1972041-3.205301 1.1972041-4.4280806 0l-20.1366949-19.7155031c-2.4455612-2.3944092-2.4455612-6.2765122 0-8.6709204zm218.7677961 40.7737449 17.921697 17.546897c2.445549 2.3943969 2.445563 6.2764769.000031 8.6708899l-80.810171 79.121134c-2.445544 2.394426-6.410582 2.394453-8.85616.000062-.00001-.00001-.000022-.000022-.000032-.000032l-57.354143-56.154572c-.61139-.598602-1.60265-.598602-2.21404 0-.000004.000004-.000007.000008-.000011.000011l-57.3529212 56.154531c-2.4455368 2.394432-6.4105755 2.394472-8.8561612.000087-.0000143-.000014-.0000296-.000028-.0000449-.000044l-80.81241943-79.122185c-2.44556021-2.394408-2.44556021-6.2765115 0-8.6709197l17.92172963-17.5468673c2.4455602-2.3944082 6.4105989-2.3944082 8.8561602 0l57.3549775 56.155357c.6113908.598602 1.602649.598602 2.2140398 0 .0000092-.000009.0000174-.000017.0000265-.000024l57.3521031-56.155333c2.445505-2.3944633 6.410544-2.3945531 8.856161-.0002.000034.0000336.000068.0000673.000101.000101l57.354902 56.155432c.61139.598601 1.60265.598601 2.21404 0l57.353975-56.1543249c2.445561-2.3944092 6.410599-2.3944092 8.85616 0z' fill='%233b99fc'/%3E%3C/svg%3E\";\n\nvar WALLETCONNECT_HEADER_TEXT = \"WalletConnect\";\nvar ANIMATION_DURATION = 300;\nvar DEFAULT_BUTTON_COLOR = \"rgb(64, 153, 255)\";\nvar WALLETCONNECT_WRAPPER_ID = \"walletconnect-wrapper\";\nvar WALLETCONNECT_STYLE_ID = \"walletconnect-style-sheet\";\nvar WALLETCONNECT_MODAL_ID = \"walletconnect-qrcode-modal\";\nvar WALLETCONNECT_CLOSE_BUTTON_ID = \"walletconnect-qrcode-close\";\nvar WALLETCONNECT_CTA_TEXT_ID = \"walletconnect-qrcode-text\";\nvar WALLETCONNECT_CONNECT_BUTTON_ID = \"walletconnect-connect-button\";\n\nfunction Header(props) {\n  return React.createElement(\"div\", {\n    className: \"walletconnect-modal__header\"\n  }, React.createElement(\"img\", {\n    src: WALLETCONNECT_LOGO_SVG_URL,\n    className: \"walletconnect-modal__headerLogo\"\n  }), React.createElement(\"p\", null, WALLETCONNECT_HEADER_TEXT), React.createElement(\"div\", {\n    className: \"walletconnect-modal__close__wrapper\",\n    onClick: props.onClose\n  }, React.createElement(\"div\", {\n    id: WALLETCONNECT_CLOSE_BUTTON_ID,\n    className: \"walletconnect-modal__close__icon\"\n  }, React.createElement(\"div\", {\n    className: \"walletconnect-modal__close__line1\"\n  }), React.createElement(\"div\", {\n    className: \"walletconnect-modal__close__line2\"\n  }))));\n}\n\nfunction ConnectButton(props) {\n  return React.createElement(\"a\", {\n    className: \"walletconnect-connect__button\",\n    href: props.href,\n    id: (WALLETCONNECT_CONNECT_BUTTON_ID + \"-\" + (props.name)),\n    onClick: props.onClick,\n    rel: \"noopener noreferrer\",\n    style: {\n      backgroundColor: props.color\n    },\n    target: \"_blank\"\n  }, props.name);\n}\n\nvar CARET_SVG_URL = \"data:image/svg+xml,%3Csvg fill='none' height='18' viewBox='0 0 8 18' width='8' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath clip-rule='evenodd' d='m.586301.213898c-.435947.33907-.5144813.967342-.175411 1.403292l4.87831 6.27212c.28087.36111.28087.86677 0 1.22788l-4.878311 6.27211c-.33907.436-.260536 1.0642.175412 1.4033.435949.3391 1.064219.2605 1.403289-.1754l4.87832-6.2721c.84259-1.08336.84259-2.60034 0-3.68367l-4.87832-6.27212c-.33907-.4359474-.96734-.514482-1.403289-.175412z' fill='%233c4252' fill-rule='evenodd'/%3E%3C/svg%3E\";\n\nfunction WalletButton(props) {\n  var color = props.color;\n  var href = props.href;\n  var name = props.name;\n  var logo = props.logo;\n  var onClick = props.onClick;\n  return React.createElement(\"a\", {\n    className: \"walletconnect-modal__base__row\",\n    href: href,\n    onClick: onClick,\n    rel: \"noopener noreferrer\",\n    target: \"_blank\"\n  }, React.createElement(\"h3\", {\n    className: \"walletconnect-modal__base__row__h3\"\n  }, name), React.createElement(\"div\", {\n    className: \"walletconnect-modal__base__row__right\"\n  }, React.createElement(\"div\", {\n    className: \"walletconnect-modal__base__row__right__app-icon\",\n    style: {\n      background: (\"url('\" + logo + \"') \" + color),\n      backgroundSize: \"100%\"\n    }\n  }), React.createElement(\"img\", {\n    src: CARET_SVG_URL,\n    className: \"walletconnect-modal__base__row__right__caret\"\n  })));\n}\n\nfunction WalletIcon(props) {\n  var color = props.color;\n  var href = props.href;\n  var name = props.name;\n  var logo = props.logo;\n  var onClick = props.onClick;\n  var fontSize = window.innerWidth < 768 ? ((name.length > 8 ? 2.5 : 2.7) + \"vw\") : \"inherit\";\n  return React.createElement(\"a\", {\n    className: \"walletconnect-connect__button__icon_anchor\",\n    href: href,\n    onClick: onClick,\n    rel: \"noopener noreferrer\",\n    target: \"_blank\"\n  }, React.createElement(\"div\", {\n    className: \"walletconnect-connect__button__icon\",\n    style: {\n      background: (\"url('\" + logo + \"') \" + color),\n      backgroundSize: \"100%\"\n    }\n  }), React.createElement(\"div\", {\n    style: {\n      fontSize: fontSize\n    },\n    className: \"walletconnect-connect__button__text\"\n  }, name));\n}\n\nvar GRID_MIN_COUNT = 5;\nvar LINKS_PER_PAGE = 12;\n\nfunction LinkDisplay(props) {\n  var android = browserUtils.isAndroid();\n  var ref = React.useState(\"\");\n  var input = ref[0];\n  var setInput = ref[1];\n  var ref$1 = React.useState(\"\");\n  var filter = ref$1[0];\n  var setFilter = ref$1[1];\n  var ref$2 = React.useState(1);\n  var page = ref$2[0];\n  var setPage = ref$2[1];\n  var links = filter ? props.links.filter(function (link) { return link.name.toLowerCase().includes(filter.toLowerCase()); }) : props.links;\n  var errorMessage = props.errorMessage;\n  var grid = filter || links.length > GRID_MIN_COUNT;\n  var pages = Math.ceil(links.length / LINKS_PER_PAGE);\n  var range = [(page - 1) * LINKS_PER_PAGE + 1, page * LINKS_PER_PAGE];\n  var pageLinks = links.length ? links.filter(function (_, index) { return index + 1 >= range[0] && index + 1 <= range[1]; }) : [];\n  var hasPaging = !!(!android && pages > 1);\n  var filterTimeout = undefined;\n\n  function handleInput(e) {\n    setInput(e.target.value);\n    clearTimeout(filterTimeout);\n\n    if (e.target.value) {\n      filterTimeout = setTimeout(function () {\n        setFilter(e.target.value);\n        setPage(1);\n      }, 1000);\n    } else {\n      setInput(\"\");\n      setFilter(\"\");\n      setPage(1);\n    }\n  }\n\n  return React.createElement(\"div\", null, React.createElement(\"p\", {\n    id: WALLETCONNECT_CTA_TEXT_ID,\n    className: \"walletconnect-qrcode__text\"\n  }, android ? props.text.connect_mobile_wallet : props.text.choose_preferred_wallet), !android && React.createElement(\"input\", {\n    className: \"walletconnect-search__input\",\n    placeholder: \"Search\",\n    value: input,\n    onChange: handleInput\n  }), React.createElement(\"div\", {\n    className: (\"walletconnect-connect__buttons__wrapper\" + (android ? \"__android\" : grid && links.length ? \"__wrap\" : \"\"))\n  }, !android ? pageLinks.length ? pageLinks.map(function (entry) {\n    var color = entry.color;\n    var name = entry.name;\n    var shortName = entry.shortName;\n    var logo = entry.logo;\n    var href = browserUtils.formatIOSMobile(props.uri, entry);\n    var handleClickIOS = React.useCallback(function () {\n      browserUtils.saveMobileLinkInfo({\n        name: name,\n        href: href\n      });\n    }, [pageLinks]);\n    return !grid ? React.createElement(WalletButton, {\n      color: color,\n      href: href,\n      name: name,\n      logo: logo,\n      onClick: handleClickIOS\n    }) : React.createElement(WalletIcon, {\n      color: color,\n      href: href,\n      name: shortName || name,\n      logo: logo,\n      onClick: handleClickIOS\n    });\n  }) : React.createElement(React.Fragment, null, React.createElement(\"p\", null, errorMessage.length ? props.errorMessage : !!props.links.length && !links.length ? props.text.no_wallets_found : props.text.loading)) : React.createElement(ConnectButton, {\n    name: props.text.connect,\n    color: DEFAULT_BUTTON_COLOR,\n    href: props.uri,\n    onClick: React.useCallback(function () {\n      browserUtils.saveMobileLinkInfo({\n        name: \"Unknown\",\n        href: props.uri\n      });\n    }, [])\n  })), hasPaging && React.createElement(\"div\", {\n    className: \"walletconnect-modal__footer\"\n  }, Array(pages).fill(0).map(function (_, index) {\n    var pageNumber = index + 1;\n    var selected = page === pageNumber;\n    return React.createElement(\"a\", {\n      style: {\n        margin: \"auto 10px\",\n        fontWeight: selected ? \"bold\" : \"normal\"\n      },\n      onClick: function () { return setPage(pageNumber); }\n    }, pageNumber);\n  })));\n}\n\nfunction Notification(props) {\n  var show = !!props.message.trim();\n  return React.createElement(\"div\", {\n    className: (\"walletconnect-qrcode__notification\" + (show ? \" notification__show\" : \"\"))\n  }, props.message);\n}\n\nvar formatQRCodeImage = function (data) {\n  try {\n    var result = \"\";\n    return Promise.resolve(QRCode.toString(data, {\n      margin: 0,\n      type: \"svg\"\n    })).then(function (dataString) {\n      if (typeof dataString === \"string\") {\n        result = dataString.replace(\"<svg\", \"<svg class=\\\"walletconnect-qrcode__image\\\"\");\n      }\n\n      return result;\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nfunction QRCodeDisplay(props) {\n  var ref = React.useState(\"\");\n  var notification = ref[0];\n  var setNotification = ref[1];\n  var ref$1 = React.useState(\"\");\n  var svg = ref$1[0];\n  var setSvg = ref$1[1];\n  React.useEffect(function () {\n    try {\n      return Promise.resolve(formatQRCodeImage(props.uri)).then(function (_formatQRCodeImage) {\n        setSvg(_formatQRCodeImage);\n      });\n    } catch (e) {\n      Promise.reject(e);\n    }\n  }, []);\n\n  var copyToClipboard = function () {\n    var success = copy(props.uri);\n\n    if (success) {\n      setNotification(props.text.copied_to_clipboard);\n      setInterval(function () { return setNotification(\"\"); }, 1200);\n    } else {\n      setNotification(\"Error\");\n      setInterval(function () { return setNotification(\"\"); }, 1200);\n    }\n  };\n\n  return React.createElement(\"div\", null, React.createElement(\"p\", {\n    id: WALLETCONNECT_CTA_TEXT_ID,\n    className: \"walletconnect-qrcode__text\"\n  }, props.text.scan_qrcode_with_wallet), React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: svg\n    }\n  }), React.createElement(\"div\", {\n    className: \"walletconnect-modal__footer\"\n  }, React.createElement(\"a\", {\n    onClick: copyToClipboard\n  }, props.text.copy_to_clipboard)), React.createElement(Notification, {\n    message: notification\n  }));\n}\n\nvar officialAlgorandWallet = {\n  id: \"23138217b046ae8d9d07e62b3337fb288c4445f92f64be067809cd0a8f9454b9\",\n  name: \"Pera Wallet\",\n  homepage: \"https://perawallet.app\",\n  chains: [\"algorand\"],\n  image_id: \"1765f9aa-f99e-414e-826b-6b570d480999\",\n  image_url: {\n    sm: \"https://algorand-app.s3.amazonaws.com/app-icons/Pera-walletconnect-128.png\",\n    md: \"https://algorand-app.s3.amazonaws.com/app-icons/Pera-walletconnect-128.png\",\n    lg: \"https://algorand-app.s3.amazonaws.com/app-icons/Pera-walletconnect-128.png\"\n  },\n  app: {\n    browser: \"\",\n    ios: \"https://apps.apple.com/us/app/algorand-wallet/id1459898525\",\n    android: \"https://play.google.com/store/apps/details?id=com.algorand.android\",\n    mac: \"\",\n    windows: \"\",\n    linux: \"\"\n  },\n  mobile: {\n    native: \"algorand-wc:\",\n    universal: \"\"\n  },\n  desktop: {\n    native: \"\",\n    universal: \"\"\n  },\n  metadata: {\n    shortName: \"Pera Wallet\",\n    colors: {\n      primary: \"rgb(255, 238, 85)\",\n      secondary: \"\"\n    }\n  }\n};\nvar registry = {};\nregistry[officialAlgorandWallet.id] = officialAlgorandWallet;\n\nfunction Modal(props) {\n  var android = browserUtils.isAndroid();\n  var mobile = browserUtils.isMobile();\n  var whitelist = mobile ? props.qrcodeModalOptions && props.qrcodeModalOptions.mobileLinks ? props.qrcodeModalOptions.mobileLinks : undefined : props.qrcodeModalOptions && props.qrcodeModalOptions.desktopLinks ? props.qrcodeModalOptions.desktopLinks : undefined;\n  var ref = React.useState(false);\n  var loading = ref[0];\n  var setLoading = ref[1];\n  var ref$1 = React.useState(false);\n  var fetched = ref$1[0];\n  var setFetched = ref$1[1];\n  var ref$2 = React.useState(!mobile);\n  var displayQRCode = ref$2[0];\n  var setDisplayQRCode = ref$2[1];\n  var displayProps = {\n    mobile: mobile,\n    text: props.text,\n    uri: props.uri,\n    qrcodeModalOptions: props.qrcodeModalOptions\n  };\n  var ref$3 = React.useState(\"\");\n  var singleLinkHref = ref$3[0];\n  var setSingleLinkHref = ref$3[1];\n  var ref$4 = React.useState(false);\n  var hasSingleLink = ref$4[0];\n  var setHasSingleLink = ref$4[1];\n  var ref$5 = React.useState([]);\n  var links = ref$5[0];\n  var setLinks = ref$5[1];\n  var ref$6 = React.useState(\"\");\n  var errorMessage = ref$6[0];\n  var setErrorMessage = ref$6[1];\n\n  var getLinksIfNeeded = function () {\n    if (fetched || loading || whitelist && !whitelist.length || links.length > 0) {\n      return;\n    }\n\n    React.useEffect(function () {\n      var initLinks = function () {\n        try {\n          if (android) { return Promise.resolve(); }\n          setLoading(true);\n\n          try {\n            var platform = mobile ? \"mobile\" : \"desktop\";\n\n            var _links = browserUtils.getMobileLinkRegistry(browserUtils.formatMobileRegistry(registry, platform), whitelist);\n\n            setLoading(false);\n            setFetched(true);\n            setErrorMessage(!_links.length ? props.text.no_supported_wallets : \"\");\n            setLinks(_links);\n            var hasSingleLink = _links.length === 1;\n\n            if (hasSingleLink) {\n              setSingleLinkHref(browserUtils.formatIOSMobile(props.uri, _links[0]));\n              setDisplayQRCode(true);\n            }\n\n            setHasSingleLink(hasSingleLink);\n          } catch (e) {\n            setLoading(false);\n            setFetched(true);\n            setErrorMessage(props.text.something_went_wrong);\n            console.error(e);\n          }\n\n          return Promise.resolve();\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      };\n\n      initLinks();\n    });\n  };\n\n  getLinksIfNeeded();\n  var rightSelected = mobile ? displayQRCode : !displayQRCode;\n  return React.createElement(\"div\", {\n    id: WALLETCONNECT_MODAL_ID,\n    className: \"walletconnect-qrcode__base animated fadeIn\"\n  }, React.createElement(\"div\", {\n    className: \"walletconnect-modal__base\"\n  }, React.createElement(Header, {\n    onClose: props.onClose\n  }), hasSingleLink && displayQRCode ? React.createElement(\"div\", {\n    className: \"walletconnect-modal__single_wallet\"\n  }, React.createElement(\"a\", {\n    onClick: function () { return browserUtils.saveMobileLinkInfo({\n      name: links[0].name,\n      href: singleLinkHref\n    }); },\n    href: singleLinkHref,\n    rel: \"noopener noreferrer\",\n    target: \"_blank\"\n  }, props.text.connect_with + \" \" + (hasSingleLink ? links[0].name : \"\") + \" ›\")) : android || loading || !loading && links.length ? React.createElement(\"div\", {\n    className: (\"walletconnect-modal__mobile__toggle\" + (rightSelected ? \" right__selected\" : \"\"))\n  }, React.createElement(\"div\", {\n    className: \"walletconnect-modal__mobile__toggle_selector\"\n  }), mobile ? React.createElement(React.Fragment, null, React.createElement(\"a\", {\n    onClick: function () { return (setDisplayQRCode(false), getLinksIfNeeded()); }\n  }, props.text.mobile), React.createElement(\"a\", {\n    onClick: function () { return setDisplayQRCode(true); }\n  }, props.text.qrcode)) : React.createElement(React.Fragment, null, React.createElement(\"a\", {\n    onClick: function () { return setDisplayQRCode(true); }\n  }, props.text.qrcode), React.createElement(\"a\", {\n    onClick: function () { return (setDisplayQRCode(false), getLinksIfNeeded()); }\n  }, props.text.desktop))) : null, React.createElement(\"div\", null, displayQRCode || !android && !loading && !links.length ? React.createElement(QRCodeDisplay, Object.assign({}, displayProps)) : React.createElement(LinkDisplay, Object.assign({}, displayProps,\n    {links: links,\n    errorMessage: errorMessage})))));\n}\n\nvar de = {\n  choose_preferred_wallet: \"Wähle bevorzugte Wallet\",\n  connect_mobile_wallet: \"Verbinde mit Mobile Wallet\",\n  scan_qrcode_with_wallet: \"Scanne den QR-code mit einer WalletConnect kompatiblen Wallet\",\n  connect: \"Verbinden\",\n  qrcode: \"QR-Code\",\n  mobile: \"Mobile\",\n  desktop: \"Desktop\",\n  copy_to_clipboard: \"In die Zwischenablage kopieren\",\n  copied_to_clipboard: \"In die Zwischenablage kopiert!\",\n  connect_with: \"Verbinden mit Hilfe von\",\n  loading: \"Laden...\",\n  something_went_wrong: \"Etwas ist schief gelaufen\",\n  no_supported_wallets: \"Es gibt noch keine unterstützten Wallet\",\n  no_wallets_found: \"keine Wallet gefunden\"\n};\n\nvar en = {\n  choose_preferred_wallet: \"Choose your preferred wallet\",\n  connect_mobile_wallet: \"Connect to Mobile Wallet\",\n  scan_qrcode_with_wallet: \"Scan QR code with a WalletConnect-compatible wallet\",\n  connect: \"Connect\",\n  qrcode: \"QR Code\",\n  mobile: \"Mobile\",\n  desktop: \"Desktop\",\n  copy_to_clipboard: \"Copy to clipboard\",\n  copied_to_clipboard: \"Copied to clipboard!\",\n  connect_with: \"Connect with\",\n  loading: \"Loading...\",\n  something_went_wrong: \"Something went wrong\",\n  no_supported_wallets: \"There are no supported wallets yet\",\n  no_wallets_found: \"No wallets found\"\n};\n\nvar es = {\n  choose_preferred_wallet: \"Elige tu billetera preferida\",\n  connect_mobile_wallet: \"Conectar a billetera móvil\",\n  scan_qrcode_with_wallet: \"Escanea el código QR con una billetera compatible con WalletConnect\",\n  connect: \"Conectar\",\n  qrcode: \"Código QR\",\n  mobile: \"Móvil\",\n  desktop: \"Desktop\",\n  copy_to_clipboard: \"Copiar\",\n  copied_to_clipboard: \"Copiado!\",\n  connect_with: \"Conectar mediante\",\n  loading: \"Cargando...\",\n  something_went_wrong: \"Algo salió mal\",\n  no_supported_wallets: \"Todavía no hay billeteras compatibles\",\n  no_wallets_found: \"No se encontraron billeteras\"\n};\n\nvar fr = {\n  choose_preferred_wallet: \"Choisissez votre portefeuille préféré\",\n  connect_mobile_wallet: \"Se connecter au portefeuille mobile\",\n  scan_qrcode_with_wallet: \"Scannez le QR code avec un portefeuille compatible WalletConnect\",\n  connect: \"Se connecter\",\n  qrcode: \"QR Code\",\n  mobile: \"Mobile\",\n  desktop: \"Desktop\",\n  copy_to_clipboard: \"Copier\",\n  copied_to_clipboard: \"Copié!\",\n  connect_with: \"Connectez-vous à l'aide de\",\n  loading: \"Chargement...\",\n  something_went_wrong: \"Quelque chose a mal tourné\",\n  no_supported_wallets: \"Il n'y a pas encore de portefeuilles pris en charge\",\n  no_wallets_found: \"Aucun portefeuille trouvé\"\n};\n\nvar ko = {\n  choose_preferred_wallet: \"원하는 지갑을 선택하세요\",\n  connect_mobile_wallet: \"모바일 지갑과 연결\",\n  scan_qrcode_with_wallet: \"WalletConnect 지원 지갑에서 QR코드를 스캔하세요\",\n  connect: \"연결\",\n  qrcode: \"QR 코드\",\n  mobile: \"모바일\",\n  desktop: \"데스크탑\",\n  copy_to_clipboard: \"클립보드에 복사\",\n  copied_to_clipboard: \"클립보드에 복사되었습니다!\",\n  connect_with: \"와 연결하다\",\n  loading: \"로드 중...\",\n  something_went_wrong: \"문제가 발생했습니다.\",\n  no_supported_wallets: \"아직 지원되는 지갑이 없습니다\",\n  no_wallets_found: \"지갑을 찾을 수 없습니다\"\n};\n\nvar pt = {\n  choose_preferred_wallet: \"Escolha sua carteira preferida\",\n  connect_mobile_wallet: \"Conectar-se à carteira móvel\",\n  scan_qrcode_with_wallet: \"Ler o código QR com uma carteira compatível com WalletConnect\",\n  connect: \"Conectar\",\n  qrcode: \"Código QR\",\n  mobile: \"Móvel\",\n  desktop: \"Desktop\",\n  copy_to_clipboard: \"Copiar\",\n  copied_to_clipboard: \"Copiado!\",\n  connect_with: \"Ligar por meio de\",\n  loading: \"Carregamento...\",\n  something_went_wrong: \"Algo correu mal\",\n  no_supported_wallets: \"Ainda não há carteiras suportadas\",\n  no_wallets_found: \"Nenhuma carteira encontrada\"\n};\n\nvar zh = {\n  choose_preferred_wallet: \"选择你的钱包\",\n  connect_mobile_wallet: \"连接至移动端钱包\",\n  scan_qrcode_with_wallet: \"使用兼容 WalletConnect 的钱包扫描二维码\",\n  connect: \"连接\",\n  qrcode: \"二维码\",\n  mobile: \"移动\",\n  desktop: \"桌面\",\n  copy_to_clipboard: \"复制到剪贴板\",\n  copied_to_clipboard: \"复制到剪贴板成功！\",\n  connect_with: \"通过以下方式连接\",\n  loading: \"正在加载...\",\n  something_went_wrong: \"出了问题\",\n  no_supported_wallets: \"目前还没有支持的钱包\",\n  no_wallets_found: \"没有找到钱包\"\n};\n\nvar fa = {\n  choose_preferred_wallet: \"کیف پول مورد نظر خود را انتخاب کنید\",\n  connect_mobile_wallet: \"به کیف پول موبایل وصل شوید\",\n  scan_qrcode_with_wallet: \"کد QR را با یک کیف پول سازگار با WalletConnect اسکن کنید\",\n  connect: \"اتصال\",\n  qrcode: \"کد QR\",\n  mobile: \"سیار\",\n  desktop: \"دسکتاپ\",\n  copy_to_clipboard: \"کپی به کلیپ بورد\",\n  copied_to_clipboard: \"در کلیپ بورد کپی شد!\",\n  connect_with: \"ارتباط با\",\n  loading: \"...بارگذاری\",\n  something_went_wrong: \"مشکلی پیش آمد\",\n  no_supported_wallets: \"هنوز هیچ کیف پول پشتیبانی شده ای وجود ندارد\",\n  no_wallets_found: \"هیچ کیف پولی پیدا نشد\"\n};\n\nvar languages = {\n  de: de,\n  en: en,\n  es: es,\n  fr: fr,\n  ko: ko,\n  pt: pt,\n  zh: zh,\n  fa: fa\n};\n\nfunction injectStyleSheet() {\n  var doc = browserUtils.getDocumentOrThrow();\n  var prev = doc.getElementById(WALLETCONNECT_STYLE_ID);\n\n  if (prev) {\n    doc.head.removeChild(prev);\n  }\n\n  var style = doc.createElement(\"style\");\n  style.setAttribute(\"id\", WALLETCONNECT_STYLE_ID);\n  style.innerText = WALLETCONNECT_STYLE_SHEET;\n  doc.head.appendChild(style);\n}\n\nfunction renderWrapper() {\n  var doc = browserUtils.getDocumentOrThrow();\n  var wrapper = doc.createElement(\"div\");\n  wrapper.setAttribute(\"id\", WALLETCONNECT_WRAPPER_ID);\n  doc.body.appendChild(wrapper);\n  return wrapper;\n}\n\nfunction triggerCloseAnimation() {\n  var doc = browserUtils.getDocumentOrThrow();\n  var modal = doc.getElementById(WALLETCONNECT_MODAL_ID);\n\n  if (modal) {\n    modal.className = modal.className.replace(\"fadeIn\", \"fadeOut\");\n    setTimeout(function () {\n      var wrapper = doc.getElementById(WALLETCONNECT_WRAPPER_ID);\n\n      if (wrapper) {\n        doc.body.removeChild(wrapper);\n      }\n    }, ANIMATION_DURATION);\n  }\n}\n\nfunction getWrappedCallback(cb) {\n  return function () {\n    triggerCloseAnimation();\n\n    if (cb) {\n      cb();\n    }\n  };\n}\n\nfunction getText() {\n  var lang = browserUtils.getNavigatorOrThrow().language.split(\"-\")[0] || \"en\";\n  return languages[lang] || languages[\"en\"];\n}\n\nfunction open$1(uri, cb, qrcodeModalOptions) {\n  injectStyleSheet();\n  var wrapper = renderWrapper();\n  React.render(React.createElement(Modal, {\n    text: getText(),\n    uri: uri,\n    onClose: getWrappedCallback(cb),\n    qrcodeModalOptions: qrcodeModalOptions\n  }), wrapper);\n}\nfunction close$1() {\n  triggerCloseAnimation();\n}\n\nvar ALGORAND_QUERY_PARAM_NAME = \"algorand\";\nfunction transformUri(uri, addAlgorandMarkerToUri) {\n  if (addAlgorandMarkerToUri == null || addAlgorandMarkerToUri) {\n    var urlObject = new URL(uri);\n\n    if (!urlObject.searchParams.has(ALGORAND_QUERY_PARAM_NAME)) {\n      urlObject.searchParams.set(ALGORAND_QUERY_PARAM_NAME, \"true\");\n      return urlObject.toString();\n    }\n  }\n\n  return uri;\n}\n\nfunction objectWithoutProperties (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }\n\nvar isNode = function () { return typeof process !== \"undefined\" && typeof process.versions !== \"undefined\" && typeof process.versions.node !== \"undefined\"; };\n\nfunction open$2(uri, cb, qrcodeModalOptions) {\n  var ref = qrcodeModalOptions || {};\n  var addAlgorandMarkerToUri = ref.addAlgorandMarkerToUri;\n  var rest = objectWithoutProperties( ref, [\"addAlgorandMarkerToUri\"] );\n  var vanillaOptions = rest;\n  uri = transformUri(uri, addAlgorandMarkerToUri);\n  console.log(uri);\n\n  if (isNode()) {\n    open(uri);\n  } else {\n    open$1(uri, cb, vanillaOptions);\n  }\n}\n\nfunction close$2() {\n  if (isNode()) ; else {\n    close$1();\n  }\n}\n\nvar index = {\n  open: open$2,\n  close: close$2\n};\n\nmodule.exports = index;\n//# sourceMappingURL=index.js.map\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport algosdk from 'algosdk';\n\nexport enum ChainType {\n  MainNet = 'mainnet',\n  TestNet = 'testnet',\n}\n\nconst mainNetClient = new algosdk.Algodv2('', 'https://mainnet-api.algonode.cloud', '');\nconst testNetClient = new algosdk.Algodv2('', 'https://testnet-api.algonode.cloud', '');\n\nfunction clientForChain(chain: ChainType): algosdk.Algodv2 {\n  switch (chain) {\n    case ChainType.MainNet:\n      return mainNetClient;\n    case ChainType.TestNet:\n      return testNetClient;\n    default:\n      throw new Error(`Unknown chain type: ${chain as string}`);\n  }\n}\n\nexport async function apiGetTxnParams(chain: ChainType): Promise<algosdk.SuggestedParams> {\n  const params = await clientForChain(chain).getTransactionParams().do();\n  return params;\n}\n\nexport async function apiSubmitTransactions(\n  chain: ChainType,\n  stxns: Uint8Array[],\n): Promise<number> {\n  const { txId } = await clientForChain(chain).sendRawTransaction(stxns).do();\n  return await waitForTransaction(chain, txId as string);\n}\n\nasync function waitForTransaction(chain: ChainType, txId: string): Promise<number> {\n  const client = clientForChain(chain);\n\n  let lastStatus = await client.status().do();\n  let lastRound = lastStatus['last-round'] as number;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const status = await client.pendingTransactionInformation(txId).do();\n    if (status['pool-error']) {\n      throw new Error(`Transaction Pool Error: ${status['pool-error'] as string}`);\n    }\n    if (status['confirmed-round']) {\n      return status['confirmed-round'] as number;\n    }\n    lastStatus = await client.statusAfterBlock(lastRound + 1).do();\n    lastRound = lastStatus['last-round'];\n  }\n}\n","import algosdk from 'algosdk';\nimport { apiGetTxnParams, ChainType } from './api';\n\nconst testAccounts = [\n  algosdk.mnemonicToSecretKey(\n    'cannon scatter chest item way pulp seminar diesel width tooth enforce fire rug mushroom tube sustain glide apple radar chronic ask plastic brown ability badge',\n  ),\n  algosdk.mnemonicToSecretKey(\n    'person congress dragon morning road sweet horror famous bomb engine eager silent home slam civil type melt field dry daring wheel monitor custom above term',\n  ),\n  algosdk.mnemonicToSecretKey(\n    'faint protect home drink journey humble tube clinic game rough conduct sell violin discover limit lottery anger baby leaf mountain peasant rude scene abstract casual',\n  ),\n];\n\nexport function signTxnWithTestAccount(txn: algosdk.Transaction): Uint8Array {\n  const sender = algosdk.encodeAddress(txn.from.publicKey);\n\n  for (const testAccount of testAccounts) {\n    if (testAccount.addr === sender) {\n      return txn.signTxn(testAccount.sk);\n    }\n  }\n\n  throw new Error(`Cannot sign transaction from unknown test account: ${sender}`);\n}\n\nexport interface IScenarioTxn {\n  txn: algosdk.Transaction;\n  signers?: string[];\n  authAddr?: string;\n  message?: string;\n}\n\nexport type ScenarioReturnType = IScenarioTxn[][];\n\nexport type Scenario = (chain: ChainType, address: string) => Promise<ScenarioReturnType>;\n\nfunction getAssetIndex(chain: ChainType): number {\n  if (chain === ChainType.MainNet) {\n    // MainNet USDC\n    return 31566704;\n  }\n\n  if (chain === ChainType.TestNet) {\n    // TestNet USDC\n    return 10458941;\n  }\n\n  throw new Error(`Asset not defined for chain ${chain as string}`);\n}\n\nfunction getAssetReserve(chain: ChainType): string {\n  if (chain === ChainType.MainNet) {\n    return '2UEQTE5QDNXPI7M3TU44G6SYKLFWLPQO7EBZM7K7MHMQQMFI4QJPLHQFHM';\n  }\n\n  if (chain === ChainType.TestNet) {\n    return 'UJBZPEMXLD6KZOLUBUDSZ3DXECXYDADZZLBH6O7CMYXHE2PLTCW44VK5T4';\n  }\n\n  throw new Error(`Asset reserve not defined for chain ${chain as string}`);\n}\n\nfunction getAppIndex(chain: ChainType): number {\n  if (chain === ChainType.MainNet) {\n    return 305162725;\n  }\n\n  if (chain === ChainType.TestNet) {\n    return 22314999;\n  }\n\n  throw new Error(`App not defined for chain ${chain as string}`);\n}\n\nconst singlePayTxn: Scenario = async (\n  chain: ChainType,\n  address: string,\n): Promise<ScenarioReturnType> => {\n  const suggestedParams = await apiGetTxnParams(chain);\n\n  const txn = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: address,\n    amount: 100000,\n    note: new Uint8Array(Buffer.from('example note value')),\n    suggestedParams,\n  });\n\n  const txnsToSign = [\n    {\n      txn,\n      message: 'This is a payment transaction that sends 0.1 Algos to yourself.',\n    },\n  ];\n  return [txnsToSign];\n};\n\nconst singleAssetOptInTxn: Scenario = async (\n  chain: ChainType,\n  address: string,\n): Promise<ScenarioReturnType> => {\n  const suggestedParams = await apiGetTxnParams(chain);\n  const assetIndex = getAssetIndex(chain);\n\n  const txn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: address,\n    amount: 0,\n    assetIndex,\n    note: new Uint8Array(Buffer.from('example note value')),\n    suggestedParams,\n  });\n\n  const txnsToSign = [\n    {\n      txn,\n      message: 'This transaction opts you into the USDC asset if you have not already opted in.',\n    },\n  ];\n  return [txnsToSign];\n};\n\nconst singleAssetTransferTxn: Scenario = async (\n  chain: ChainType,\n  address: string,\n): Promise<ScenarioReturnType> => {\n  const suggestedParams = await apiGetTxnParams(chain);\n  const assetIndex = getAssetIndex(chain);\n\n  const txn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: address,\n    amount: 1000000,\n    assetIndex,\n    note: new Uint8Array(Buffer.from('example note value')),\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, message: 'This transaction will send 1 USDC to yourself.' }];\n  return [txnsToSign];\n};\n\nconst singleAssetCloseTxn: Scenario = async (\n  chain: ChainType,\n  address: string,\n): Promise<ScenarioReturnType> => {\n  const suggestedParams = await apiGetTxnParams(chain);\n  const assetIndex = getAssetIndex(chain);\n\n  const txn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: getAssetReserve(chain),\n    amount: 0,\n    assetIndex,\n    note: new Uint8Array(Buffer.from('example note value')),\n    closeRemainderTo: testAccounts[1].addr,\n    suggestedParams,\n  });\n\n  const txnsToSign = [\n    {\n      txn,\n      message:\n        'This transaction will opt you out of the USDC asset. DO NOT submit this to MainNet if you have more than 0 USDC.',\n    },\n  ];\n  return [txnsToSign];\n};\n\nconst singleAppOptIn: Scenario = async (\n  chain: ChainType,\n  address: string,\n): Promise<ScenarioReturnType> => {\n  const suggestedParams = await apiGetTxnParams(chain);\n\n  const appIndex = getAppIndex(chain);\n\n  const txn = algosdk.makeApplicationOptInTxnFromObject({\n    from: address,\n    appIndex,\n    note: new Uint8Array(Buffer.from('example note value')),\n    appArgs: [Uint8Array.from([0]), Uint8Array.from([0, 1])],\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, message: 'This transaction will opt you into a test app.' }];\n  return [txnsToSign];\n};\n\nconst singleAppCall: Scenario = async (\n  chain: ChainType,\n  address: string,\n): Promise<ScenarioReturnType> => {\n  const suggestedParams = await apiGetTxnParams(chain);\n\n  const appIndex = getAppIndex(chain);\n\n  const txn = algosdk.makeApplicationNoOpTxnFromObject({\n    from: address,\n    appIndex,\n    note: new Uint8Array(Buffer.from('example note value')),\n    appArgs: [Uint8Array.from([0]), Uint8Array.from([0, 1])],\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, message: 'This transaction will invoke an app call on a test app.' }];\n  return [txnsToSign];\n};\n\nconst singleAppCloseOut: Scenario = async (\n  chain: ChainType,\n  address: string,\n): Promise<ScenarioReturnType> => {\n  const suggestedParams = await apiGetTxnParams(chain);\n\n  const appIndex = getAppIndex(chain);\n\n  const txn = algosdk.makeApplicationCloseOutTxnFromObject({\n    from: address,\n    appIndex,\n    note: new Uint8Array(Buffer.from('example note value')),\n    appArgs: [Uint8Array.from([0]), Uint8Array.from([0, 1])],\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, message: 'This transaction will opt you out of the test app.' }];\n  return [txnsToSign];\n};\n\nconst singleAppClearState: Scenario = async (\n  chain: ChainType,\n  address: string,\n): Promise<ScenarioReturnType> => {\n  const suggestedParams = await apiGetTxnParams(chain);\n\n  const appIndex = getAppIndex(chain);\n\n  const txn = algosdk.makeApplicationClearStateTxnFromObject({\n    from: address,\n    appIndex,\n    note: new Uint8Array(Buffer.from('example note value')),\n    appArgs: [Uint8Array.from([0]), Uint8Array.from([0, 1])],\n    suggestedParams,\n  });\n\n  const txnsToSign = [\n    { txn, message: 'This transaction will forcibly opt you out of the test app.' },\n  ];\n  return [txnsToSign];\n};\n\nexport const scenarios: Array<{ name: string; scenario: Scenario }> = [\n  {\n    name: '1. Sign pay txn',\n    scenario: singlePayTxn,\n  },\n  {\n    name: '2. Sign asset opt-in txn',\n    scenario: singleAssetOptInTxn,\n  },\n  {\n    name: '3. Sign asset transfer txn',\n    scenario: singleAssetTransferTxn,\n  },\n  {\n    name: '4. Sign asset close out txn',\n    scenario: singleAssetCloseTxn,\n  },\n  {\n    name: '5. Sign app opt-in txn',\n    scenario: singleAppOptIn,\n  },\n  {\n    name: '6. Sign app call txn',\n    scenario: singleAppCall,\n  },\n  {\n    name: '7. Sign app close out txn',\n    scenario: singleAppCloseOut,\n  },\n  {\n    name: '8. Sign app clear state txn',\n    scenario: singleAppClearState,\n  },\n];\n","export const dapps = [\n  {\n    name: 'Tiny Man',\n    url: 'https://app.tinyman.org/#/swap?asset_in=0',\n  },\n  {\n    name: 'Humble Swap',\n    url: 'https://app.humble.sh/pool',\n  },\n  {\n    name: 'Folks Finnce',\n    url: 'https://app.folks.finance/markets',\n  },\n  {\n    name: 'Algofi',\n    url: 'https://app.algofi.org/',\n  },\n];\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport React from 'react';\nimport { useState, useCallback } from 'react';\nimport algosdk from 'algosdk';\nimport WalletConnect from '@walletconnect/client';\nimport QRCodeModal from 'algorand-walletconnect-qrcode-modal';\nimport { IInternalEvent } from '@walletconnect/types';\n\nimport { Scenario, scenarios, signTxnWithTestAccount } from './scenarios';\nimport { ChainType, apiSubmitTransactions } from './api';\nimport { IWalletTransaction, SignTxnParams, IResult } from './types';\n\nimport { DAppList } from '../dappList/DAppList';\nimport { dapps } from './dapps.config';\n\nfunction stringToChainType(s: string): ChainType {\n  switch (s) {\n    case ChainType.MainNet.toString():\n      return ChainType.MainNet;\n    case ChainType.TestNet.toString():\n      return ChainType.TestNet;\n    default:\n      throw new Error(`Unknown chain selected: ${s}`);\n  }\n}\n\nexport default function AlgoExample() {\n  const [connector, setConnector] = useState<WalletConnect>();\n  const [accounts, setAccounts] = useState<string[]>();\n  const [address, setAddress] = useState<string>();\n  const [connected, setConnected] = useState<boolean>(false);\n  const [chain, setChain] = useState<ChainType>(ChainType.TestNet);\n  const [formattedResult, setFormattedResult] = useState<IResult>();\n  const [signedTxns, setSignedTxns] = useState<Uint8Array[][]>();\n\n  const handleSessionUpdate = useCallback((accounts: string[]) => {\n    const address = accounts[0];\n    setAccounts(accounts);\n    setAddress(address);\n  }, []);\n\n  const handleConnected = useCallback((payload: IInternalEvent) => {\n    const { accounts } = payload.params[0];\n    const address = accounts[0];\n    setAccounts(accounts as string[]);\n    setAddress(address as string);\n    setConnected(true);\n  }, []);\n\n  const handleResetApp = useCallback(() => {\n    setAddress('');\n    setAccounts([]);\n    setConnector(null);\n    setConnected(false);\n  }, []);\n\n  const handleDisconnected = useCallback(() => {\n    handleResetApp();\n  }, [handleResetApp]);\n\n  const subscribeToEvents = useCallback(\n    (connector: WalletConnect) => {\n      if (!connector) {\n        return;\n      }\n\n      connector.on('session_update', (error, payload: IInternalEvent) => {\n        console.log(`algo connector.on(\"session_update\")`, payload);\n\n        if (error) {\n          throw error;\n        }\n\n        const { accounts } = payload.params[0];\n        handleSessionUpdate(accounts as string[]);\n      });\n\n      connector.on('connect', (error, payload: IInternalEvent) => {\n        console.log(`algo connector.on(\"connect\")`, payload);\n\n        if (error) {\n          throw error;\n        }\n\n        handleConnected(payload);\n      });\n\n      connector.on('disconnect', (error) => {\n        console.log(`algo connector.on(\"disconnect\")`);\n\n        if (error) {\n          throw error;\n        }\n\n        handleDisconnected();\n      });\n\n      if (connector.connected) {\n        const { accounts } = connector;\n        const address = accounts[0];\n        setAccounts(accounts);\n        setAddress(address);\n        setConnected(true);\n        handleSessionUpdate(accounts);\n      }\n\n      setConnector(connector);\n    },\n    [handleConnected, handleDisconnected, handleSessionUpdate],\n  );\n\n  const handleConnectWallet = useCallback(async () => {\n    const bridge = 'https://bridge.walletconnect.org';\n\n    const connector = new WalletConnect({\n      storageId: 'walletconnect_algo',\n      bridge,\n      qrcodeModal: QRCodeModal,\n    });\n    // @ts-ignore\n    window.wcConnector = connector;\n    setConnector(connector);\n\n    if (!connector.connected) {\n      await connector.createSession({\n        network: 'algo',\n      });\n    }\n\n    subscribeToEvents(connector);\n  }, [subscribeToEvents]);\n\n  const handleSignTxnScenario = useCallback(\n    async (scenario: Scenario) => {\n      if (!connector) {\n        return;\n      }\n\n      try {\n        const txnsToSign = await scenario(chain, address);\n        const flatTxns = txnsToSign.reduce((acc, val) => acc.concat(val), []);\n\n        const walletTxns: IWalletTransaction[] = flatTxns.map(\n          ({ txn, signers, authAddr, message }) => ({\n            txn: Buffer.from(algosdk.encodeUnsignedTransaction(txn)).toString('base64'),\n            signers,\n            authAddr,\n            message,\n          }),\n        );\n\n        // sign transaction\n        const params: SignTxnParams = [walletTxns];\n        const result: Array<string | null> = await connector.sendCustomRequest({\n          method: 'algo_signTxn',\n          params,\n        });\n\n        console.log('Raw response:', result);\n\n        const indexToGroup = (index: number) => {\n          for (let group = 0; group < txnsToSign.length; group++) {\n            const groupLength = txnsToSign[group].length;\n            if (index < groupLength) {\n              return [group, index];\n            }\n\n            index -= groupLength;\n          }\n\n          throw new Error(`Index too large for groups: ${index}`);\n        };\n\n        const signedPartialTxns: Array<Array<Uint8Array | null>> = txnsToSign.map(() => []);\n        result.forEach((r, i) => {\n          const [group, groupIndex] = indexToGroup(i);\n          const toSign = txnsToSign[group][groupIndex];\n\n          if (r == null) {\n            if (toSign.signers !== undefined && toSign.signers?.length < 1) {\n              signedPartialTxns[group].push(null);\n              return;\n            }\n            throw new Error(`Transaction at index ${i}: was not signed when it should have been`);\n          }\n\n          if (toSign.signers !== undefined && toSign.signers?.length < 1) {\n            throw new Error(`Transaction at index ${i} was signed when it should not have been`);\n          }\n\n          const rawSignedTxn = Buffer.from(r, 'base64');\n          signedPartialTxns[group].push(new Uint8Array(rawSignedTxn));\n        });\n\n        const signedTxns: Uint8Array[][] = signedPartialTxns.map(\n          (signedPartialTxnsInternal, group) => {\n            return signedPartialTxnsInternal.map((stxn, groupIndex) => {\n              if (stxn) {\n                return stxn;\n              }\n\n              return signTxnWithTestAccount(txnsToSign[group][groupIndex].txn);\n            });\n          },\n        );\n\n        const signedTxnInfo: Array<\n          Array<{\n            txID: string;\n            signingAddress?: string;\n            signature: string;\n          } | null>\n        > = signedPartialTxns.map((signedPartialTxnsInternal, group) => {\n          return signedPartialTxnsInternal.map((rawSignedTxn, i) => {\n            if (rawSignedTxn == null) {\n              return null;\n            }\n\n            const signedTxn = algosdk.decodeSignedTransaction(rawSignedTxn);\n            const txn = signedTxn.txn as unknown as algosdk.Transaction;\n            const txID = txn.txID();\n            const unsignedTxID = txnsToSign[group][i].txn.txID();\n\n            if (txID !== unsignedTxID) {\n              throw new Error(\n                `Signed transaction at index ${i} differs from unsigned transaction. Got ${txID}, expected ${unsignedTxID}`,\n              );\n            }\n\n            if (!signedTxn.sig) {\n              throw new Error(`Signature not present on transaction at index ${i}`);\n            }\n\n            return {\n              txID,\n              signingAddress: signedTxn.sgnr ? algosdk.encodeAddress(signedTxn.sgnr) : undefined,\n              signature: Buffer.from(signedTxn.sig).toString('base64'),\n            };\n          });\n        });\n\n        // format displayed result\n        const formattedResult: IResult = {\n          method: 'algo_signTxn',\n          body: signedTxnInfo,\n        };\n\n        setConnector(connector);\n        setSignedTxns(signedTxns);\n        setFormattedResult(formattedResult);\n      } catch (error) {\n        console.error(error);\n        setConnector(connector);\n        setFormattedResult(null);\n      }\n    },\n    [address, chain, connector],\n  );\n\n  const handleSubmitTxs = useCallback(async () => {\n    if (signedTxns == null) {\n      throw new Error('Transactions to submit are null');\n    }\n\n    for (let i = 0; i < signedTxns.length; i++) {\n      try {\n        const confirmedRound = await apiSubmitTransactions(chain, signedTxns[i]);\n        console.log(`Transaction confirmed at round ${confirmedRound}`);\n      } catch (err) {\n        console.error(`Error submitting transaction at index ${i}:`, err);\n      }\n    }\n  }, [signedTxns, chain]);\n\n  const handleKissSession = useCallback(async () => {\n    await connector.killSession();\n    handleResetApp();\n  }, [connector, handleResetApp]);\n\n  return (\n    <div>\n      <DAppList dapps={dapps} />\n      <main>\n        {connected && (\n          <p>\n            {`Connected to `}\n            <select\n              onChange={(event) => setChain(stringToChainType(event.target.value))}\n              value={chain}\n            >\n              <option value={ChainType.TestNet}>Algorand TestNet</option>\n              <option value={ChainType.MainNet}>Algorand MainNet</option>\n            </select>\n          </p>\n        )}\n        {connected ? (\n          <>\n            <div>\n              <pre>Connected as: {address}</pre>\n              <button onClick={handleKissSession}>Disconnect</button>\n            </div>\n            {formattedResult && (\n              <div>\n                <pre>formattedResult: {JSON.stringify(formattedResult)}</pre>\n                <button onClick={handleSubmitTxs}>{'Submit transaction to network.'}</button>\n              </div>\n            )}\n            {scenarios.map(({ name, scenario }) => (\n              <button key={name} onClick={() => handleSignTxnScenario(scenario)}>\n                {name}\n              </button>\n            ))}\n            <button onClick={() => connector.killSession()}>Disconnect</button>\n          </>\n        ) : (\n          <>\n            <button onClick={handleConnectWallet}>Connect Wallet</button>\n          </>\n        )}\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport styles from '../../styles/Home.module.css';\n\ninterface DApp {\n  name: string;\n  url: string;\n}\n\ninterface Props {\n  dapps: DApp[];\n}\n\nfunction DAppList(props: Props) {\n  const { dapps } = props;\n\n  return (\n    <div className={styles.container}>\n      <h3>Top DApps</h3>\n      <ul>\n        {dapps.map((dapp) => (\n          <li key={dapp.name}>\n            <a href={dapp.url} target={'_blank'}>\n              {dapp.name} ↗\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport { DAppList };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__d256j\",\"main\":\"Home_main__VkIEL\",\"footer\":\"Home_footer__yFiaX\",\"title\":\"Home_title__hYX6j\",\"description\":\"Home_description__uXNdx\",\"code\":\"Home_code__VVrIr\",\"grid\":\"Home_grid__AVljO\",\"card\":\"Home_card__E5spL\",\"logo\":\"Home_logo__IOQAX\"};","(function(){var __webpack_modules__={950:function(__unused_webpack_module,exports){var indexOf=function(e,t){if(e.indexOf)return e.indexOf(t);else for(var r=0;r<e.length;r++){if(e[r]===t)return r}return-1};var Object_keys=function(e){if(Object.keys)return Object.keys(e);else{var t=[];for(var r in e)t.push(r);return t}};var forEach=function(e,t){if(e.forEach)return e.forEach(t);else for(var r=0;r<e.length;r++){t(e[r],r,e)}};var defineProp=function(){try{Object.defineProperty({},\"_\",{});return function(e,t,r){Object.defineProperty(e,t,{writable:true,enumerable:false,configurable:true,value:r})}}catch(e){return function(e,t,r){e[t]=r}}}();var globals=[\"Array\",\"Boolean\",\"Date\",\"Error\",\"EvalError\",\"Function\",\"Infinity\",\"JSON\",\"Math\",\"NaN\",\"Number\",\"Object\",\"RangeError\",\"ReferenceError\",\"RegExp\",\"String\",\"SyntaxError\",\"TypeError\",\"URIError\",\"decodeURI\",\"decodeURIComponent\",\"encodeURI\",\"encodeURIComponent\",\"escape\",\"eval\",\"isFinite\",\"isNaN\",\"parseFloat\",\"parseInt\",\"undefined\",\"unescape\"];function Context(){}Context.prototype={};var Script=exports.Script=function NodeScript(e){if(!(this instanceof Script))return new Script(e);this.code=e};Script.prototype.runInContext=function(e){if(!(e instanceof Context)){throw new TypeError(\"needs a 'context' argument.\")}var t=document.createElement(\"iframe\");if(!t.style)t.style={};t.style.display=\"none\";document.body.appendChild(t);var r=t.contentWindow;var n=r.eval,o=r.execScript;if(!n&&o){o.call(r,\"null\");n=r.eval}forEach(Object_keys(e),(function(t){r[t]=e[t]}));forEach(globals,(function(t){if(e[t]){r[t]=e[t]}}));var c=Object_keys(r);var i=n.call(r,this.code);forEach(Object_keys(r),(function(t){if(t in e||indexOf(c,t)===-1){e[t]=r[t]}}));forEach(globals,(function(t){if(!(t in e)){defineProp(e,t,r[t])}}));document.body.removeChild(t);return i};Script.prototype.runInThisContext=function(){return eval(this.code)};Script.prototype.runInNewContext=function(e){var t=Script.createContext(e);var r=this.runInContext(t);if(e){forEach(Object_keys(t),(function(r){e[r]=t[r]}))}return r};forEach(Object_keys(Script.prototype),(function(e){exports[e]=Script[e]=function(t){var r=Script(t);return r[e].apply(r,[].slice.call(arguments,1))}}));exports.isContext=function(e){return e instanceof Context};exports.createScript=function(e){return exports.Script(e)};exports.createContext=Script.createContext=function(e){var t=new Context;if(typeof e===\"object\"){forEach(Object_keys(e),(function(r){t[r]=e[r]}))}return t}}};if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var __webpack_exports__={};__webpack_modules__[950](0,__webpack_exports__);module.exports=__webpack_exports__})();","/* (ignored) */"],"names":["_interopDefault","ex","browserUtils","__webpack_require__","QRCode","copy","React","open","uri","toString","type","then","console","log","WALLETCONNECT_STYLE_SHEET","WALLETCONNECT_LOGO_SVG_URL","WALLETCONNECT_HEADER_TEXT","ANIMATION_DURATION","DEFAULT_BUTTON_COLOR","WALLETCONNECT_WRAPPER_ID","WALLETCONNECT_STYLE_ID","WALLETCONNECT_MODAL_ID","WALLETCONNECT_CLOSE_BUTTON_ID","WALLETCONNECT_CTA_TEXT_ID","WALLETCONNECT_CONNECT_BUTTON_ID","Header","props","createElement","className","src","onClick","onClose","id","ConnectButton","href","name","rel","style","backgroundColor","color","target","CARET_SVG_URL","WalletButton","logo","background","backgroundSize","WalletIcon","fontSize","window","innerWidth","length","GRID_MIN_COUNT","LINKS_PER_PAGE","LinkDisplay","android","isAndroid","ref","useState","input","setInput","ref$1","filter","setFilter","ref$2","page","setPage","links","link","toLowerCase","includes","errorMessage","grid","pages","Math","ceil","range","pageLinks","_","index","hasPaging","filterTimeout","undefined","handleInput","e","value","clearTimeout","setTimeout","text","connect_mobile_wallet","choose_preferred_wallet","placeholder","onChange","connect","useCallback","saveMobileLinkInfo","map","entry","shortName","formatIOSMobile","handleClickIOS","Fragment","no_wallets_found","loading","Array","fill","pageNumber","selected","margin","fontWeight","Notification","show","message","trim","formatQRCodeImage","data","result","Promise","resolve","dataString","replace","reject","QRCodeDisplay","notification","setNotification","svg","setSvg","useEffect","_formatQRCodeImage","copyToClipboard","copied_to_clipboard","setInterval","scan_qrcode_with_wallet","dangerouslySetInnerHTML","__html","copy_to_clipboard","officialAlgorandWallet","homepage","chains","image_id","image_url","sm","md","lg","app","browser","ios","mac","windows","linux","mobile","native","universal","desktop","metadata","colors","primary","secondary","registry","Modal","isMobile","whitelist","qrcodeModalOptions","mobileLinks","desktopLinks","setLoading","fetched","setFetched","displayQRCode","setDisplayQRCode","displayProps","ref$3","singleLinkHref","setSingleLinkHref","ref$4","hasSingleLink","setHasSingleLink","ref$5","setLinks","ref$6","setErrorMessage","getLinksIfNeeded","initLinks","platform","_links","getMobileLinkRegistry","formatMobileRegistry","no_supported_wallets","something_went_wrong","error","rightSelected","connect_with","qrcode","Object","assign","languages","de","en","es","fr","ko","pt","zh","fa","injectStyleSheet","doc","getDocumentOrThrow","prev","getElementById","head","removeChild","setAttribute","innerText","appendChild","renderWrapper","wrapper","body","triggerCloseAnimation","modal","getWrappedCallback","cb","getText","getNavigatorOrThrow","language","split","open$1","render","close$1","ALGORAND_QUERY_PARAM_NAME","transformUri","addAlgorandMarkerToUri","urlObject","URL","searchParams","has","set","objectWithoutProperties","obj","exclude","k","prototype","hasOwnProperty","call","indexOf","isNode","process","versions","node","vanillaOptions","close","module","exports","ChainType","mainNetClient","algosdk","testNetClient","clientForChain","chain","MainNet","TestNet","concat","apiGetTxnParams","_x","_apiGetTxnParams","apply","arguments","_asyncToGenerator","getTransactionParams","do","apiSubmitTransactions","_x2","_x3","_apiSubmitTransactions","stxns","txId","_yield$clientForChain","sendRawTransaction","waitForTransaction","_x4","_x5","_waitForTransaction","client","lastStatus","status","lastRound","pendingTransactionInformation","statusAfterBlock","testAccounts","signTxnWithTestAccount","txn","sender","from","publicKey","testAccount","addr","signTxn","sk","getAssetIndex","getAssetReserve","getAppIndex","scenarios","scenario","_ref","address","suggestedParams","to","amount","note","Uint8Array","Buffer","_ref2","assetIndex","_ref3","_x6","_ref4","closeRemainderTo","_x7","_x8","_ref5","appIndex","appArgs","_x9","_x10","_ref6","_x11","_x12","_ref7","_x13","_x14","_ref8","_x15","_x16","dapps","url","stringToChainType","s","AlgoExample","_useState","_useState2","_slicedToArray","connector","setConnector","_useState3","_useState4","setAccounts","_useState5","_useState6","setAddress","_useState7","_useState8","connected","setConnected","_useState9","_useState10","setChain","_useState11","_useState12","formattedResult","setFormattedResult","_useState13","_useState14","signedTxns","setSignedTxns","handleSessionUpdate","accounts","handleConnected","payload","params","handleResetApp","handleDisconnected","subscribeToEvents","on","handleConnectWallet","bridge","WalletConnect","storageId","qrcodeModal","QRCodeModal","wcConnector","createSession","network","handleSignTxnScenario","txnsToSign","flatTxns","reduce","acc","val","signers","authAddr","sendCustomRequest","method","indexToGroup","group","groupLength","signedPartialTxns","forEach","r","i","_toSign$signers2","_toSign$signers","_indexToGroup","_indexToGroup2","groupIndex","toSign","push","rawSignedTxn","signedPartialTxnsInternal","stxn","signedTxnInfo","signedTxn","txID","unsignedTxID","sig","signingAddress","sgnr","signature","handleSubmitTxs","confirmedRound","err","handleKissSession","killSession","_jsxs","children","_jsx","DAppList","event","_Fragment","JSON","stringify","styles","dapp","__webpack_modules__","__unused_webpack_module","t","Object_keys","keys","defineProp","defineProperty","writable","enumerable","configurable","globals","Context","Script","code","runInContext","document","display","contentWindow","n","eval","o","execScript","c","runInThisContext","runInNewContext","createContext","slice","isContext","createScript","__nccwpck_require__","ab","__dirname","__nested_webpack_exports__"],"sourceRoot":""}