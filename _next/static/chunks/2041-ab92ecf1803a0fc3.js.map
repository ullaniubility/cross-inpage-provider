{"version":3,"file":"static/chunks/2041-ab92ecf1803a0fc3.js","mappings":"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","sources":["webpack://_N_E/./node_modules/react-native-web/dist/exports/ActivityIndicator/index.js","webpack://_N_E/./node_modules/native-base/lib/module/components/primitives/Spinner/index.js","webpack://_N_E/./node_modules/react-native-web/dist/modules/createEventHandle/index.js","webpack://_N_E/./node_modules/react-native-web/dist/modules/modality/index.js","webpack://_N_E/./node_modules/react-native-web/dist/modules/useEvent/index.js","webpack://_N_E/./node_modules/react-native-web/dist/modules/useHover/index.js","webpack://_N_E/./node_modules/react-native-web/dist/modules/usePressEvents/PressResponder.js","webpack://_N_E/./node_modules/react-native-web/dist/modules/usePressEvents/index.js","webpack://_N_E/./node_modules/react-native-web/dist/exports/Pressable/index.js","webpack://_N_E/packages/@react-aria/focus/src/FocusScope.tsx","webpack://_N_E/packages/@react-aria/focus/src/focusSafely.ts","webpack://_N_E/packages/@react-aria/focus/src/isElementVisible.ts","webpack://_N_E/packages/@react-aria/focus/src/FocusRing.tsx","webpack://_N_E/packages/@react-aria/focus/src/useFocusRing.ts","webpack://_N_E/packages/@react-aria/focus/src/useFocusable.tsx","webpack://_N_E/FocusScope.web.tsx","webpack://_N_E/index.web.ts","webpack://_N_E/./node_modules/native-base/lib/module/components/primitives/Pressable/Pressable.js","webpack://_N_E/./node_modules/native-base/lib/module/components/primitives/Button/Button.js","webpack://_N_E/./node_modules/native-base/lib/module/components/primitives/Button/ButtonGroup.js","webpack://_N_E/./node_modules/native-base/lib/module/components/primitives/Button/index.js","webpack://_N_E/./node_modules/native-base/lib/module/components/primitives/Stack/HStack.js","webpack://_N_E/<anon>"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"animating\", \"color\", \"hidesWhenStopped\", \"size\", \"style\"];\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport * as React from 'react';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nvar createSvgCircle = style => /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"16\",\n  cy: \"16\",\n  fill: \"none\",\n  r: \"14\",\n  strokeWidth: \"4\",\n  style: style\n});\nvar ActivityIndicator = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var _props$animating = props.animating,\n    animating = _props$animating === void 0 ? true : _props$animating,\n    _props$color = props.color,\n    color = _props$color === void 0 ? '#1976D2' : _props$color,\n    _props$hidesWhenStopp = props.hidesWhenStopped,\n    hidesWhenStopped = _props$hidesWhenStopp === void 0 ? true : _props$hidesWhenStopp,\n    _props$size = props.size,\n    size = _props$size === void 0 ? 'small' : _props$size,\n    style = props.style,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var svg = /*#__PURE__*/React.createElement(\"svg\", {\n    height: \"100%\",\n    viewBox: \"0 0 32 32\",\n    width: \"100%\"\n  }, createSvgCircle({\n    stroke: color,\n    opacity: 0.2\n  }), createSvgCircle({\n    stroke: color,\n    strokeDasharray: 80,\n    strokeDashoffset: 60\n  }));\n  return /*#__PURE__*/React.createElement(View, _extends({}, other, {\n    \"aria-valuemax\": 1,\n    \"aria-valuemin\": 0,\n    ref: forwardedRef,\n    role: \"progressbar\",\n    style: [styles.container, style]\n  }), /*#__PURE__*/React.createElement(View, {\n    children: svg,\n    style: [typeof size === 'number' ? {\n      height: size,\n      width: size\n    } : indicatorSizes[size], styles.animation, !animating && styles.animationPause, !animating && hidesWhenStopped && styles.hidesWhenStopped]\n  }));\n});\nActivityIndicator.displayName = 'ActivityIndicator';\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  hidesWhenStopped: {\n    visibility: 'hidden'\n  },\n  animation: {\n    animationDuration: '0.75s',\n    animationKeyframes: [{\n      '0%': {\n        transform: 'rotate(0deg)'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    }],\n    animationTimingFunction: 'linear',\n    animationIterationCount: 'infinite'\n  },\n  animationPause: {\n    animationPlayState: 'paused'\n  }\n});\nvar indicatorSizes = StyleSheet.create({\n  small: {\n    width: 20,\n    height: 20\n  },\n  large: {\n    width: 36,\n    height: 36\n  }\n});\nexport default ActivityIndicator;","import React, { memo, forwardRef } from 'react';\nimport { ActivityIndicator } from 'react-native';\nimport { usePropsResolution, useStyledSystemPropsResolver } from '../../../hooks';\nimport { getColor } from '../../../theme';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useTheme } from '../../../hooks';\n\nconst Spinner = (props, ref) => {\n  const {\n    color,\n    size,\n    style,\n    testID,\n    ...resolvedProps\n  } = usePropsResolution('Spinner', props);\n  const resolvedColor = getColor(color, useTheme().colors, useTheme());\n  const resolvedStyle = useStyledSystemPropsResolver(resolvedProps); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ActivityIndicator, {\n    testID: testID,\n    accessible: true,\n    accessibilityLabel: \"loading\",\n    color: resolvedColor,\n    ref: ref,\n    size: size,\n    style: [resolvedStyle, style]\n  });\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Spinner));\n//# sourceMappingURL=index.js.map","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use strict';\n\nimport canUseDOM from '../canUseDom';\nvar emptyFunction = () => {};\nfunction supportsPassiveEvents() {\n  var supported = false;\n  // Check if browser supports event with passive listeners\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n  if (canUseDOM) {\n    try {\n      var options = {};\n      Object.defineProperty(options, 'passive', {\n        get() {\n          supported = true;\n          return false;\n        }\n      });\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (e) {}\n  }\n  return supported;\n}\nvar canUsePassiveEvents = supportsPassiveEvents();\nfunction getOptions(options) {\n  if (options == null) {\n    return false;\n  }\n  return canUsePassiveEvents ? options : Boolean(options.capture);\n}\n\n/**\n * Shim generic API compatibility with ReactDOM's synthetic events, without needing the\n * large amount of code ReactDOM uses to do this. Ideally we wouldn't use a synthetic\n * event wrapper at all.\n */\nfunction isPropagationStopped() {\n  return this.cancelBubble;\n}\nfunction isDefaultPrevented() {\n  return this.defaultPrevented;\n}\nfunction normalizeEvent(event) {\n  event.nativeEvent = event;\n  event.persist = emptyFunction;\n  event.isDefaultPrevented = isDefaultPrevented;\n  event.isPropagationStopped = isPropagationStopped;\n  return event;\n}\n\n/**\n *\n */\nexport default function createEventHandle(type, options) {\n  var opts = getOptions(options);\n  return function (target, listener) {\n    if (target == null || typeof target.addEventListener !== 'function') {\n      throw new Error('createEventHandle: called on an invalid target.');\n    }\n    var element = target;\n    if (listener != null) {\n      var compatListener = e => listener(normalizeEvent(e));\n      element.addEventListener(type, compatListener, opts);\n      return function removeListener() {\n        if (element != null) {\n          element.removeEventListener(type, compatListener, opts);\n        }\n      };\n    } else {\n      return emptyFunction;\n    }\n  };\n}","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport createEventHandle from '../createEventHandle';\nimport canUseDOM from '../canUseDom';\nvar supportsPointerEvent = () => !!(typeof window !== 'undefined' && window.PointerEvent != null);\nvar activeModality = 'keyboard';\nvar modality = 'keyboard';\nvar previousModality;\nvar previousActiveModality;\nvar isEmulatingMouseEvents = false;\nvar listeners = new Set();\nvar KEYBOARD = 'keyboard';\nvar MOUSE = 'mouse';\nvar TOUCH = 'touch';\nvar BLUR = 'blur';\nvar CONTEXTMENU = 'contextmenu';\nvar FOCUS = 'focus';\nvar KEYDOWN = 'keydown';\nvar MOUSEDOWN = 'mousedown';\nvar MOUSEMOVE = 'mousemove';\nvar MOUSEUP = 'mouseup';\nvar POINTERDOWN = 'pointerdown';\nvar POINTERMOVE = 'pointermove';\nvar SCROLL = 'scroll';\nvar SELECTIONCHANGE = 'selectionchange';\nvar TOUCHCANCEL = 'touchcancel';\nvar TOUCHMOVE = 'touchmove';\nvar TOUCHSTART = 'touchstart';\nvar VISIBILITYCHANGE = 'visibilitychange';\nvar bubbleOptions = {\n  passive: true\n};\nvar captureOptions = {\n  capture: true,\n  passive: true\n};\n\n// Window events\nvar addBlurListener = createEventHandle(BLUR, bubbleOptions);\nvar addFocusListener = createEventHandle(FOCUS, bubbleOptions);\n// Must be capture phase because 'stopPropagation' might prevent these\n// events bubbling to the document.\nvar addVisibilityChangeListener = createEventHandle(VISIBILITYCHANGE, captureOptions);\nvar addKeyDownListener = createEventHandle(KEYDOWN, captureOptions);\nvar addPointerDownListener = createEventHandle(POINTERDOWN, captureOptions);\nvar addPointerMoveListener = createEventHandle(POINTERMOVE, captureOptions);\n// Fallback events\nvar addContextMenuListener = createEventHandle(CONTEXTMENU, captureOptions);\nvar addMouseDownListener = createEventHandle(MOUSEDOWN, captureOptions);\nvar addMouseMoveListener = createEventHandle(MOUSEMOVE, captureOptions);\nvar addMouseUpListener = createEventHandle(MOUSEUP, captureOptions);\nvar addScrollListener = createEventHandle(SCROLL, captureOptions);\nvar addSelectiomChangeListener = createEventHandle(SELECTIONCHANGE, captureOptions);\nvar addTouchCancelListener = createEventHandle(TOUCHCANCEL, captureOptions);\nvar addTouchMoveListener = createEventHandle(TOUCHMOVE, captureOptions);\nvar addTouchStartListener = createEventHandle(TOUCHSTART, captureOptions);\nfunction restoreModality() {\n  if (previousModality != null || previousActiveModality != null) {\n    if (previousModality != null) {\n      modality = previousModality;\n      previousModality = null;\n    }\n    if (previousActiveModality != null) {\n      activeModality = previousActiveModality;\n      previousActiveModality = null;\n    }\n    callListeners();\n  }\n}\nfunction onBlurWindow() {\n  previousModality = modality;\n  previousActiveModality = activeModality;\n  activeModality = KEYBOARD;\n  modality = KEYBOARD;\n  callListeners();\n  // for fallback events\n  isEmulatingMouseEvents = false;\n}\nfunction onFocusWindow() {\n  restoreModality();\n}\nfunction onKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n  if (modality !== KEYBOARD) {\n    modality = KEYBOARD;\n    activeModality = KEYBOARD;\n    callListeners();\n  }\n}\nfunction onVisibilityChange() {\n  if (document.visibilityState !== 'hidden') {\n    restoreModality();\n  }\n}\nfunction onPointerish(event) {\n  var eventType = event.type;\n  if (supportsPointerEvent()) {\n    if (eventType === POINTERDOWN) {\n      if (activeModality !== event.pointerType) {\n        modality = event.pointerType;\n        activeModality = event.pointerType;\n        callListeners();\n      }\n      return;\n    }\n    if (eventType === POINTERMOVE) {\n      if (modality !== event.pointerType) {\n        modality = event.pointerType;\n        callListeners();\n      }\n      return;\n    }\n  }\n  // Fallback for non-PointerEvent environment\n  else {\n    if (!isEmulatingMouseEvents) {\n      if (eventType === MOUSEDOWN) {\n        if (activeModality !== MOUSE) {\n          modality = MOUSE;\n          activeModality = MOUSE;\n          callListeners();\n        }\n      }\n      if (eventType === MOUSEMOVE) {\n        if (modality !== MOUSE) {\n          modality = MOUSE;\n          callListeners();\n        }\n      }\n    }\n\n    // Flag when browser may produce emulated events\n    if (eventType === TOUCHSTART) {\n      isEmulatingMouseEvents = true;\n      if (event.touches && event.touches.length > 1) {\n        isEmulatingMouseEvents = false;\n      }\n      if (activeModality !== TOUCH) {\n        modality = TOUCH;\n        activeModality = TOUCH;\n        callListeners();\n      }\n      return;\n    }\n\n    // Remove flag after emulated events are finished or cancelled, and if an\n    // event occurs that cuts short a touch event sequence.\n    if (eventType === CONTEXTMENU || eventType === MOUSEUP || eventType === SELECTIONCHANGE || eventType === SCROLL || eventType === TOUCHCANCEL || eventType === TOUCHMOVE) {\n      isEmulatingMouseEvents = false;\n    }\n  }\n}\nif (canUseDOM) {\n  addBlurListener(window, onBlurWindow);\n  addFocusListener(window, onFocusWindow);\n  addKeyDownListener(document, onKeyDown);\n  addPointerDownListener(document, onPointerish);\n  addPointerMoveListener(document, onPointerish);\n  addVisibilityChangeListener(document, onVisibilityChange);\n  // fallbacks\n  addContextMenuListener(document, onPointerish);\n  addMouseDownListener(document, onPointerish);\n  addMouseMoveListener(document, onPointerish);\n  addMouseUpListener(document, onPointerish);\n  addTouchCancelListener(document, onPointerish);\n  addTouchMoveListener(document, onPointerish);\n  addTouchStartListener(document, onPointerish);\n  addSelectiomChangeListener(document, onPointerish);\n  addScrollListener(document, onPointerish);\n}\nfunction callListeners() {\n  var value = {\n    activeModality,\n    modality\n  };\n  listeners.forEach(listener => {\n    listener(value);\n  });\n}\nexport function getActiveModality() {\n  return activeModality;\n}\nexport function getModality() {\n  return modality;\n}\nexport function addModalityListener(listener) {\n  listeners.add(listener);\n  return () => {\n    listeners.delete(listener);\n  };\n}\nexport function testOnly_resetActiveModality() {\n  isEmulatingMouseEvents = false;\n  activeModality = KEYBOARD;\n  modality = KEYBOARD;\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport createEventHandle from '../createEventHandle';\nimport useLayoutEffect from '../useLayoutEffect';\nimport useStable from '../useStable';\n/**\n * This can be used with any event type include custom events.\n *\n * const click = useEvent('click', options);\n * useEffect(() => {\n *   click.setListener(target, onClick);\n *   return () => click.clear();\n * }).\n */\nexport default function useEvent(event, options) {\n  var targetListeners = useStable(() => new Map());\n  var addListener = useStable(() => {\n    var addEventListener = createEventHandle(event, options);\n    return (target, callback) => {\n      var removeTargetListener = targetListeners.get(target);\n      if (removeTargetListener != null) {\n        removeTargetListener();\n      }\n      if (callback == null) {\n        targetListeners.delete(target);\n      }\n      var removeEventListener = addEventListener(target, callback);\n      targetListeners.set(target, removeEventListener);\n      return removeEventListener;\n    };\n  });\n  useLayoutEffect(() => {\n    return () => {\n      targetListeners.forEach(removeListener => {\n        removeListener();\n      });\n      targetListeners.clear();\n    };\n  }, [targetListeners]);\n  return addListener;\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport { getModality } from '../modality';\nimport useEvent from '../useEvent';\nimport useLayoutEffect from '../useLayoutEffect';\n\n/**\n * Types\n */\n\n/**\n * Implementation\n */\n\nvar emptyObject = {};\nvar opts = {\n  passive: true\n};\nvar lockEventType = 'react-gui:hover:lock';\nvar unlockEventType = 'react-gui:hover:unlock';\nvar supportsPointerEvent = () => !!(typeof window !== 'undefined' && window.PointerEvent != null);\nfunction dispatchCustomEvent(target, type, payload) {\n  var event = document.createEvent('CustomEvent');\n  var _ref = payload || emptyObject,\n    _ref$bubbles = _ref.bubbles,\n    bubbles = _ref$bubbles === void 0 ? true : _ref$bubbles,\n    _ref$cancelable = _ref.cancelable,\n    cancelable = _ref$cancelable === void 0 ? true : _ref$cancelable,\n    detail = _ref.detail;\n  event.initCustomEvent(type, bubbles, cancelable, detail);\n  target.dispatchEvent(event);\n}\n\n// This accounts for the non-PointerEvent fallback events.\nfunction getPointerType(event) {\n  var pointerType = event.pointerType;\n  return pointerType != null ? pointerType : getModality();\n}\nexport default function useHover(targetRef, config) {\n  var contain = config.contain,\n    disabled = config.disabled,\n    onHoverStart = config.onHoverStart,\n    onHoverChange = config.onHoverChange,\n    onHoverUpdate = config.onHoverUpdate,\n    onHoverEnd = config.onHoverEnd;\n  var canUsePE = supportsPointerEvent();\n  var addMoveListener = useEvent(canUsePE ? 'pointermove' : 'mousemove', opts);\n  var addEnterListener = useEvent(canUsePE ? 'pointerenter' : 'mouseenter', opts);\n  var addLeaveListener = useEvent(canUsePE ? 'pointerleave' : 'mouseleave', opts);\n  // These custom events are used to implement the \"contain\" prop.\n  var addLockListener = useEvent(lockEventType, opts);\n  var addUnlockListener = useEvent(unlockEventType, opts);\n  useLayoutEffect(() => {\n    var target = targetRef.current;\n    if (target !== null) {\n      /**\n       * End the hover gesture\n       */\n      var hoverEnd = function hoverEnd(e) {\n        if (onHoverEnd != null) {\n          onHoverEnd(e);\n        }\n        if (onHoverChange != null) {\n          onHoverChange(false);\n        }\n        // Remove the listeners once finished.\n        addMoveListener(target, null);\n        addLeaveListener(target, null);\n      };\n\n      /**\n       * Leave element\n       */\n      var leaveListener = function leaveListener(e) {\n        var target = targetRef.current;\n        if (target != null && getPointerType(e) !== 'touch') {\n          if (contain) {\n            dispatchCustomEvent(target, unlockEventType);\n          }\n          hoverEnd(e);\n        }\n      };\n\n      /**\n       * Move within element\n       */\n      var moveListener = function moveListener(e) {\n        if (getPointerType(e) !== 'touch') {\n          if (onHoverUpdate != null) {\n            // Not all browsers have these properties\n            if (e.x == null) {\n              e.x = e.clientX;\n            }\n            if (e.y == null) {\n              e.y = e.clientY;\n            }\n            onHoverUpdate(e);\n          }\n        }\n      };\n\n      /**\n       * Start the hover gesture\n       */\n      var hoverStart = function hoverStart(e) {\n        if (onHoverStart != null) {\n          onHoverStart(e);\n        }\n        if (onHoverChange != null) {\n          onHoverChange(true);\n        }\n        // Set the listeners needed for the rest of the hover gesture.\n        if (onHoverUpdate != null) {\n          addMoveListener(target, !disabled ? moveListener : null);\n        }\n        addLeaveListener(target, !disabled ? leaveListener : null);\n      };\n\n      /**\n       * Enter element\n       */\n      var enterListener = function enterListener(e) {\n        var target = targetRef.current;\n        if (target != null && getPointerType(e) !== 'touch') {\n          if (contain) {\n            dispatchCustomEvent(target, lockEventType);\n          }\n          hoverStart(e);\n          var lockListener = function lockListener(lockEvent) {\n            if (lockEvent.target !== target) {\n              hoverEnd(e);\n            }\n          };\n          var unlockListener = function unlockListener(lockEvent) {\n            if (lockEvent.target !== target) {\n              hoverStart(e);\n            }\n          };\n          addLockListener(target, !disabled ? lockListener : null);\n          addUnlockListener(target, !disabled ? unlockListener : null);\n        }\n      };\n      addEnterListener(target, !disabled ? enterListener : null);\n    }\n  }, [addEnterListener, addMoveListener, addLeaveListener, addLockListener, addUnlockListener, contain, disabled, onHoverStart, onHoverChange, onHoverUpdate, onHoverEnd, targetRef]);\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nvar DELAY = 'DELAY';\nvar ERROR = 'ERROR';\nvar LONG_PRESS_DETECTED = 'LONG_PRESS_DETECTED';\nvar NOT_RESPONDER = 'NOT_RESPONDER';\nvar RESPONDER_ACTIVE_LONG_PRESS_START = 'RESPONDER_ACTIVE_LONG_PRESS_START';\nvar RESPONDER_ACTIVE_PRESS_START = 'RESPONDER_ACTIVE_PRESS_START';\nvar RESPONDER_INACTIVE_PRESS_START = 'RESPONDER_INACTIVE_PRESS_START';\nvar RESPONDER_GRANT = 'RESPONDER_GRANT';\nvar RESPONDER_RELEASE = 'RESPONDER_RELEASE';\nvar RESPONDER_TERMINATED = 'RESPONDER_TERMINATED';\nvar Transitions = Object.freeze({\n  NOT_RESPONDER: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: ERROR,\n    RESPONDER_TERMINATED: ERROR,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_INACTIVE_PRESS_START: {\n    DELAY: RESPONDER_ACTIVE_PRESS_START,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_ACTIVE_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  ERROR: {\n    DELAY: NOT_RESPONDER,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: NOT_RESPONDER\n  }\n});\nvar isActiveSignal = signal => signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\nvar isButtonRole = element => element.getAttribute('role') === 'button';\nvar isPressStartSignal = signal => signal === RESPONDER_INACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\nvar isTerminalSignal = signal => signal === RESPONDER_TERMINATED || signal === RESPONDER_RELEASE;\nvar isValidKeyPress = event => {\n  var key = event.key,\n    target = event.target;\n  var role = target.getAttribute('role');\n  var isSpacebar = key === ' ' || key === 'Spacebar';\n  return key === 'Enter' || isSpacebar && role === 'button';\n};\nvar DEFAULT_LONG_PRESS_DELAY_MS = 450; // 500 - 50\nvar DEFAULT_PRESS_DELAY_MS = 50;\n\n/**\n * =========================== PressResponder Tutorial ===========================\n *\n * The `PressResponder` class helps you create press interactions by analyzing the\n * geometry of elements and observing when another responder (e.g. ScrollView)\n * has stolen the touch lock. It offers hooks for your component to provide\n * interaction feedback to the user:\n *\n * - When a press has activated (e.g. highlight an element)\n * - When a press has deactivated (e.g. un-highlight an element)\n * - When a press sould trigger an action, meaning it activated and deactivated\n *   while within the geometry of the element without the lock being stolen.\n *\n * A high quality interaction isn't as simple as you might think. There should\n * be a slight delay before activation. Moving your finger beyond an element's\n * bounds should trigger deactivation, but moving the same finger back within an\n * element's bounds should trigger reactivation.\n *\n * In order to use `PressResponder`, do the following:\n *\n *     const pressResponder = new PressResponder(config);\n *\n * 2. Choose the rendered component who should collect the press events. On that\n *    element, spread `pressability.getEventHandlers()` into its props.\n *\n *    return (\n *      <View {...this.state.pressResponder.getEventHandlers()} />\n *    );\n *\n * 3. Reset `PressResponder` when your component unmounts.\n *\n *    componentWillUnmount() {\n *      this.state.pressResponder.reset();\n *    }\n *\n * ==================== Implementation Details ====================\n *\n * `PressResponder` only assumes that there exists a `HitRect` node. The `PressRect`\n * is an abstract box that is extended beyond the `HitRect`.\n *\n * # Geometry\n *\n *  ┌────────────────────────┐\n *  │  ┌──────────────────┐  │ - Presses start anywhere within `HitRect`.\n *  │  │  ┌────────────┐  │  │\n *  │  │  │ VisualRect │  │  │\n *  │  │  └────────────┘  │  │ - When pressed down for sufficient amount of time\n *  │  │    HitRect       │  │   before letting up, `VisualRect` activates.\n *  │  └──────────────────┘  │\n *  │       Out Region   o   │\n *  └────────────────────│───┘\n *                       └────── When the press is released outside the `HitRect`,\n *                               the responder is NOT eligible for a \"press\".\n *\n * # State Machine\n *\n * ┌───────────────┐ ◀──── RESPONDER_RELEASE\n * │ NOT_RESPONDER │\n * └───┬───────────┘ ◀──── RESPONDER_TERMINATED\n *     │\n *     │ RESPONDER_GRANT (HitRect)\n *     │\n *     ▼\n * ┌─────────────────────┐          ┌───────────────────┐              ┌───────────────────┐\n * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │  T + DELAY   │ RESPONDER_ACTIVE_ │\n * │ PRESS_START         ├────────▶ │ PRESS_START       ├────────────▶ │ LONG_PRESS_START  │\n * └─────────────────────┘          └───────────────────┘              └───────────────────┘\n *\n * T + DELAY => LONG_PRESS_DELAY + DELAY\n *\n * Not drawn are the side effects of each transition. The most important side\n * effect is the invocation of `onLongPress`. Only when the browser produces a\n * `click` event is `onPress` invoked.\n */\nexport default class PressResponder {\n  constructor(config) {\n    this._eventHandlers = null;\n    this._isPointerTouch = false;\n    this._longPressDelayTimeout = null;\n    this._longPressDispatched = false;\n    this._pressDelayTimeout = null;\n    this._pressOutDelayTimeout = null;\n    this._touchState = NOT_RESPONDER;\n    this.configure(config);\n  }\n  configure(config) {\n    this._config = config;\n  }\n\n  /**\n   * Resets any pending timers. This should be called on unmount.\n   */\n  reset() {\n    this._cancelLongPressDelayTimeout();\n    this._cancelPressDelayTimeout();\n    this._cancelPressOutDelayTimeout();\n  }\n\n  /**\n   * Returns a set of props to spread into the interactive element.\n   */\n  getEventHandlers() {\n    if (this._eventHandlers == null) {\n      this._eventHandlers = this._createEventHandlers();\n    }\n    return this._eventHandlers;\n  }\n  _createEventHandlers() {\n    var start = (event, shouldDelay) => {\n      event.persist();\n      this._cancelPressOutDelayTimeout();\n      this._longPressDispatched = false;\n      this._selectionTerminated = false;\n      this._touchState = NOT_RESPONDER;\n      this._isPointerTouch = event.nativeEvent.type === 'touchstart';\n      this._receiveSignal(RESPONDER_GRANT, event);\n      var delayPressStart = normalizeDelay(this._config.delayPressStart, 0, DEFAULT_PRESS_DELAY_MS);\n      if (shouldDelay !== false && delayPressStart > 0) {\n        this._pressDelayTimeout = setTimeout(() => {\n          this._receiveSignal(DELAY, event);\n        }, delayPressStart);\n      } else {\n        this._receiveSignal(DELAY, event);\n      }\n      var delayLongPress = normalizeDelay(this._config.delayLongPress, 10, DEFAULT_LONG_PRESS_DELAY_MS);\n      this._longPressDelayTimeout = setTimeout(() => {\n        this._handleLongPress(event);\n      }, delayLongPress + delayPressStart);\n    };\n    var end = event => {\n      this._receiveSignal(RESPONDER_RELEASE, event);\n    };\n    var keyupHandler = event => {\n      var onPress = this._config.onPress;\n      var target = event.target;\n      if (this._touchState !== NOT_RESPONDER && isValidKeyPress(event)) {\n        end(event);\n        document.removeEventListener('keyup', keyupHandler);\n        var role = target.getAttribute('role');\n        var elementType = target.tagName.toLowerCase();\n        var isNativeInteractiveElement = role === 'link' || elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea';\n        if (onPress != null && !isNativeInteractiveElement) {\n          onPress(event);\n        }\n      }\n    };\n    return {\n      onStartShouldSetResponder: event => {\n        var disabled = this._config.disabled;\n        if (disabled && isButtonRole(event.currentTarget)) {\n          event.stopPropagation();\n        }\n        if (disabled == null) {\n          return true;\n        }\n        return !disabled;\n      },\n      onKeyDown: event => {\n        var disabled = this._config.disabled;\n        var key = event.key,\n          target = event.target;\n        if (!disabled && isValidKeyPress(event)) {\n          if (this._touchState === NOT_RESPONDER) {\n            start(event, false);\n            // Listen to 'keyup' on document to account for situations where\n            // focus is moved to another element during 'keydown'.\n            document.addEventListener('keyup', keyupHandler);\n          }\n          var role = target.getAttribute('role');\n          var isSpacebarKey = key === ' ' || key === 'Spacebar';\n          var _isButtonRole = role === 'button' || role === 'menuitem';\n          if (isSpacebarKey && _isButtonRole) {\n            // Prevent spacebar scrolling the window\n            event.preventDefault();\n          }\n          event.stopPropagation();\n        }\n      },\n      onResponderGrant: event => start(event),\n      onResponderMove: event => {\n        if (this._config.onPressMove != null) {\n          this._config.onPressMove(event);\n        }\n        var touch = getTouchFromResponderEvent(event);\n        if (this._touchActivatePosition != null) {\n          var deltaX = this._touchActivatePosition.pageX - touch.pageX;\n          var deltaY = this._touchActivatePosition.pageY - touch.pageY;\n          if (Math.hypot(deltaX, deltaY) > 10) {\n            this._cancelLongPressDelayTimeout();\n          }\n        }\n      },\n      onResponderRelease: event => end(event),\n      onResponderTerminate: event => {\n        if (event.nativeEvent.type === 'selectionchange') {\n          this._selectionTerminated = true;\n        }\n        this._receiveSignal(RESPONDER_TERMINATED, event);\n      },\n      onResponderTerminationRequest: event => {\n        var _this$_config = this._config,\n          cancelable = _this$_config.cancelable,\n          disabled = _this$_config.disabled,\n          onLongPress = _this$_config.onLongPress;\n        // If `onLongPress` is provided, don't terminate on `contextmenu` as default\n        // behavior will be prevented for non-mouse pointers.\n        if (!disabled && onLongPress != null && this._isPointerTouch && event.nativeEvent.type === 'contextmenu') {\n          return false;\n        }\n        if (cancelable == null) {\n          return true;\n        }\n        return cancelable;\n      },\n      // NOTE: this diverges from react-native in 3 significant ways:\n      // * The `onPress` callback is not connected to the responder system (the native\n      //  `click` event must be used but is dispatched in many scenarios where no pointers\n      //   are on the screen.) Therefore, it's possible for `onPress` to be called without\n      //   `onPress{Start,End}` being called first.\n      // * The `onPress` callback is only be called on the first ancestor of the native\n      //   `click` target that is using the PressResponder.\n      // * The event's `nativeEvent` is a `MouseEvent` not a `TouchEvent`.\n      onClick: event => {\n        var _this$_config2 = this._config,\n          disabled = _this$_config2.disabled,\n          onPress = _this$_config2.onPress;\n        if (!disabled) {\n          // If long press dispatched, cancel default click behavior.\n          // If the responder terminated because text was selected during the gesture,\n          // cancel the default click behavior.\n          event.stopPropagation();\n          if (this._longPressDispatched || this._selectionTerminated) {\n            event.preventDefault();\n          } else if (onPress != null && event.altKey === false) {\n            onPress(event);\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      },\n      // If `onLongPress` is provided and a touch pointer is being used, prevent the\n      // default context menu from opening.\n      onContextMenu: event => {\n        var _this$_config3 = this._config,\n          disabled = _this$_config3.disabled,\n          onLongPress = _this$_config3.onLongPress;\n        if (!disabled) {\n          if (onLongPress != null && this._isPointerTouch && !event.defaultPrevented) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Receives a state machine signal, performs side effects of the transition\n   * and stores the new state. Validates the transition as well.\n   */\n  _receiveSignal(signal, event) {\n    var prevState = this._touchState;\n    var nextState = null;\n    if (Transitions[prevState] != null) {\n      nextState = Transitions[prevState][signal];\n    }\n    if (this._touchState === NOT_RESPONDER && signal === RESPONDER_RELEASE) {\n      return;\n    }\n    if (nextState == null || nextState === ERROR) {\n      console.error(\"PressResponder: Invalid signal \" + signal + \" for state \" + prevState + \" on responder\");\n    } else if (prevState !== nextState) {\n      this._performTransitionSideEffects(prevState, nextState, signal, event);\n      this._touchState = nextState;\n    }\n  }\n\n  /**\n   * Performs a transition between touchable states and identify any activations\n   * or deactivations (and callback invocations).\n   */\n  _performTransitionSideEffects(prevState, nextState, signal, event) {\n    if (isTerminalSignal(signal)) {\n      // Pressable suppression of contextmenu on windows.\n      // On Windows, the contextmenu is displayed after pointerup.\n      // https://github.com/necolas/react-native-web/issues/2296\n      setTimeout(() => {\n        this._isPointerTouch = false;\n      }, 0);\n      this._touchActivatePosition = null;\n      this._cancelLongPressDelayTimeout();\n    }\n    if (isPressStartSignal(prevState) && signal === LONG_PRESS_DETECTED) {\n      var onLongPress = this._config.onLongPress;\n      // Long press is not supported for keyboards because 'click' can be dispatched\n      // immediately (and multiple times) after 'keydown'.\n      if (onLongPress != null && event.nativeEvent.key == null) {\n        onLongPress(event);\n        this._longPressDispatched = true;\n      }\n    }\n    var isPrevActive = isActiveSignal(prevState);\n    var isNextActive = isActiveSignal(nextState);\n    if (!isPrevActive && isNextActive) {\n      this._activate(event);\n    } else if (isPrevActive && !isNextActive) {\n      this._deactivate(event);\n    }\n    if (isPressStartSignal(prevState) && signal === RESPONDER_RELEASE) {\n      var _this$_config4 = this._config,\n        _onLongPress = _this$_config4.onLongPress,\n        onPress = _this$_config4.onPress;\n      if (onPress != null) {\n        var isPressCanceledByLongPress = _onLongPress != null && prevState === RESPONDER_ACTIVE_LONG_PRESS_START;\n        if (!isPressCanceledByLongPress) {\n          // If we never activated (due to delays), activate and deactivate now.\n          if (!isNextActive && !isPrevActive) {\n            this._activate(event);\n            this._deactivate(event);\n          }\n        }\n      }\n    }\n    this._cancelPressDelayTimeout();\n  }\n  _activate(event) {\n    var _this$_config5 = this._config,\n      onPressChange = _this$_config5.onPressChange,\n      onPressStart = _this$_config5.onPressStart;\n    var touch = getTouchFromResponderEvent(event);\n    this._touchActivatePosition = {\n      pageX: touch.pageX,\n      pageY: touch.pageY\n    };\n    if (onPressStart != null) {\n      onPressStart(event);\n    }\n    if (onPressChange != null) {\n      onPressChange(true);\n    }\n  }\n  _deactivate(event) {\n    var _this$_config6 = this._config,\n      onPressChange = _this$_config6.onPressChange,\n      onPressEnd = _this$_config6.onPressEnd;\n    function end() {\n      if (onPressEnd != null) {\n        onPressEnd(event);\n      }\n      if (onPressChange != null) {\n        onPressChange(false);\n      }\n    }\n    var delayPressEnd = normalizeDelay(this._config.delayPressEnd);\n    if (delayPressEnd > 0) {\n      this._pressOutDelayTimeout = setTimeout(() => {\n        end();\n      }, delayPressEnd);\n    } else {\n      end();\n    }\n  }\n  _handleLongPress(event) {\n    if (this._touchState === RESPONDER_ACTIVE_PRESS_START || this._touchState === RESPONDER_ACTIVE_LONG_PRESS_START) {\n      this._receiveSignal(LONG_PRESS_DETECTED, event);\n    }\n  }\n  _cancelLongPressDelayTimeout() {\n    if (this._longPressDelayTimeout != null) {\n      clearTimeout(this._longPressDelayTimeout);\n      this._longPressDelayTimeout = null;\n    }\n  }\n  _cancelPressDelayTimeout() {\n    if (this._pressDelayTimeout != null) {\n      clearTimeout(this._pressDelayTimeout);\n      this._pressDelayTimeout = null;\n    }\n  }\n  _cancelPressOutDelayTimeout() {\n    if (this._pressOutDelayTimeout != null) {\n      clearTimeout(this._pressOutDelayTimeout);\n      this._pressOutDelayTimeout = null;\n    }\n  }\n}\nfunction normalizeDelay(delay, min, fallback) {\n  if (min === void 0) {\n    min = 0;\n  }\n  if (fallback === void 0) {\n    fallback = 0;\n  }\n  return Math.max(min, delay !== null && delay !== void 0 ? delay : fallback);\n}\nfunction getTouchFromResponderEvent(event) {\n  var _event$nativeEvent = event.nativeEvent,\n    changedTouches = _event$nativeEvent.changedTouches,\n    touches = _event$nativeEvent.touches;\n  if (touches != null && touches.length > 0) {\n    return touches[0];\n  }\n  if (changedTouches != null && changedTouches.length > 0) {\n    return changedTouches[0];\n  }\n  return event.nativeEvent;\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nimport PressResponder from './PressResponder';\nimport { useDebugValue, useEffect, useRef } from 'react';\nexport default function usePressEvents(hostRef, config) {\n  var pressResponderRef = useRef(null);\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new PressResponder(config);\n  }\n  var pressResponder = pressResponderRef.current;\n\n  // Re-configure to use the current node and configuration.\n  useEffect(() => {\n    pressResponder.configure(config);\n  }, [config, pressResponder]);\n\n  // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n  useEffect(() => {\n    return () => {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  useDebugValue(config);\n  return pressResponder.getEventHandlers();\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"delayLongPress\", \"delayPressIn\", \"delayPressOut\", \"disabled\", \"onBlur\", \"onContextMenu\", \"onFocus\", \"onHoverIn\", \"onHoverOut\", \"onKeyDown\", \"onLongPress\", \"onPress\", \"onPressMove\", \"onPressIn\", \"onPressOut\", \"style\", \"tabIndex\", \"testOnly_hovered\", \"testOnly_pressed\"];\nimport * as React from 'react';\nimport { forwardRef, memo, useMemo, useState, useRef } from 'react';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport useHover from '../../modules/useHover';\nimport usePressEvents from '../../modules/usePressEvents';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\n/**\n * Component used to build display components that should respond to whether the\n * component is currently pressed or not.\n */\nfunction Pressable(props, forwardedRef) {\n  var children = props.children,\n    delayLongPress = props.delayLongPress,\n    delayPressIn = props.delayPressIn,\n    delayPressOut = props.delayPressOut,\n    disabled = props.disabled,\n    onBlur = props.onBlur,\n    onContextMenu = props.onContextMenu,\n    onFocus = props.onFocus,\n    onHoverIn = props.onHoverIn,\n    onHoverOut = props.onHoverOut,\n    onKeyDown = props.onKeyDown,\n    onLongPress = props.onLongPress,\n    onPress = props.onPress,\n    onPressMove = props.onPressMove,\n    onPressIn = props.onPressIn,\n    onPressOut = props.onPressOut,\n    style = props.style,\n    tabIndex = props.tabIndex,\n    testOnly_hovered = props.testOnly_hovered,\n    testOnly_pressed = props.testOnly_pressed,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useForceableState = useForceableState(testOnly_hovered === true),\n    hovered = _useForceableState[0],\n    setHovered = _useForceableState[1];\n  var _useForceableState2 = useForceableState(false),\n    focused = _useForceableState2[0],\n    setFocused = _useForceableState2[1];\n  var _useForceableState3 = useForceableState(testOnly_pressed === true),\n    pressed = _useForceableState3[0],\n    setPressed = _useForceableState3[1];\n  var hostRef = useRef(null);\n  var setRef = useMergeRefs(forwardedRef, hostRef);\n  var pressConfig = useMemo(() => ({\n    delayLongPress,\n    delayPressStart: delayPressIn,\n    delayPressEnd: delayPressOut,\n    disabled,\n    onLongPress,\n    onPress,\n    onPressChange: setPressed,\n    onPressStart: onPressIn,\n    onPressMove,\n    onPressEnd: onPressOut\n  }), [delayLongPress, delayPressIn, delayPressOut, disabled, onLongPress, onPress, onPressIn, onPressMove, onPressOut, setPressed]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var onContextMenuPress = pressEventHandlers.onContextMenu,\n    onKeyDownPress = pressEventHandlers.onKeyDown;\n  useHover(hostRef, {\n    contain: true,\n    disabled,\n    onHoverChange: setHovered,\n    onHoverStart: onHoverIn,\n    onHoverEnd: onHoverOut\n  });\n  var interactionState = {\n    hovered,\n    focused,\n    pressed\n  };\n  var blurHandler = React.useCallback(e => {\n    if (e.nativeEvent.target === hostRef.current) {\n      setFocused(false);\n      if (onBlur != null) {\n        onBlur(e);\n      }\n    }\n  }, [hostRef, setFocused, onBlur]);\n  var focusHandler = React.useCallback(e => {\n    if (e.nativeEvent.target === hostRef.current) {\n      setFocused(true);\n      if (onFocus != null) {\n        onFocus(e);\n      }\n    }\n  }, [hostRef, setFocused, onFocus]);\n  var contextMenuHandler = React.useCallback(e => {\n    if (onContextMenuPress != null) {\n      onContextMenuPress(e);\n    }\n    if (onContextMenu != null) {\n      onContextMenu(e);\n    }\n  }, [onContextMenu, onContextMenuPress]);\n  var keyDownHandler = React.useCallback(e => {\n    if (onKeyDownPress != null) {\n      onKeyDownPress(e);\n    }\n    if (onKeyDown != null) {\n      onKeyDown(e);\n    }\n  }, [onKeyDown, onKeyDownPress]);\n  var _tabIndex;\n  if (tabIndex !== undefined) {\n    _tabIndex = tabIndex;\n  } else {\n    _tabIndex = disabled ? -1 : 0;\n  }\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, pressEventHandlers, {\n    \"aria-disabled\": disabled,\n    onBlur: blurHandler,\n    onContextMenu: contextMenuHandler,\n    onFocus: focusHandler,\n    onKeyDown: keyDownHandler,\n    ref: setRef,\n    style: [disabled ? styles.disabled : styles.active, typeof style === 'function' ? style(interactionState) : style],\n    tabIndex: _tabIndex\n  }), typeof children === 'function' ? children(interactionState) : children);\n}\nfunction useForceableState(forced) {\n  var _useState = useState(false),\n    bool = _useState[0],\n    setBool = _useState[1];\n  return [bool || forced, setBool];\n}\nvar styles = StyleSheet.create({\n  active: {\n    cursor: 'pointer',\n    touchAction: 'manipulation'\n  },\n  disabled: {\n    pointerEvents: 'none'\n  }\n});\nvar MemoedPressable = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Pressable));\nMemoedPressable.displayName = 'Pressable';\nexport default MemoedPressable;","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {focusSafely} from './focusSafely';\nimport {isElementVisible} from './isElementVisible';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\n\nexport interface FocusScopeProps {\n  /** The contents of the focus scope. */\n  children: ReactNode,\n\n  /**\n   * Whether to contain focus inside the scope, so users cannot\n   * move focus outside, for example in a modal dialog.\n   */\n  contain?: boolean,\n\n  /**\n   * Whether to restore focus back to the element that was focused\n   * when the focus scope mounted, after the focus scope unmounts.\n   */\n  restoreFocus?: boolean,\n\n  /** Whether to auto focus the first focusable element in the focus scope on mount. */\n  autoFocus?: boolean\n}\n\nexport interface FocusManagerOptions {\n  /** The element to start searching from. The currently focused element by default. */\n  from?: Element,\n  /** Whether to only include tabbable elements, or all focusable elements. */\n  tabbable?: boolean,\n  /** Whether focus should wrap around when it reaches the end of the scope. */\n  wrap?: boolean,\n  /** A callback that determines whether the given element is focused. */\n  accept?: (node: Element) => boolean\n}\n\nexport interface FocusManager {\n  /** Moves focus to the next focusable or tabbable element in the focus scope. */\n  focusNext(opts?: FocusManagerOptions): FocusableElement,\n  /** Moves focus to the previous focusable or tabbable element in the focus scope. */\n  focusPrevious(opts?: FocusManagerOptions): FocusableElement,\n  /** Moves focus to the first focusable or tabbable element in the focus scope. */\n  focusFirst(opts?: FocusManagerOptions): FocusableElement,\n    /** Moves focus to the last focusable or tabbable element in the focus scope. */\n  focusLast(opts?: FocusManagerOptions): FocusableElement\n}\n\ntype ScopeRef = RefObject<Element[]>;\ninterface IFocusContext {\n  scopeRef: ScopeRef,\n  focusManager: FocusManager\n}\n\nconst FocusContext = React.createContext<IFocusContext>(null);\n\nlet activeScope: ScopeRef = null;\n\n// This is a hacky DOM-based implementation of a FocusScope until this RFC lands in React:\n// https://github.com/reactjs/rfcs/pull/109\n\n/**\n * A FocusScope manages focus for its descendants. It supports containing focus inside\n * the scope, restoring focus to the previously focused element on unmount, and auto\n * focusing children on mount. It also acts as a container for a programmatic focus\n * management interface that can be used to move focus forward and back in response\n * to user events.\n */\nexport function FocusScope(props: FocusScopeProps) {\n  let {children, contain, restoreFocus, autoFocus} = props;\n  let startRef = useRef<HTMLSpanElement>();\n  let endRef = useRef<HTMLSpanElement>();\n  let scopeRef = useRef<Element[]>([]);\n  let ctx = useContext(FocusContext);\n  // if there is no scopeRef on the context, then the parent is the focusScopeTree's root, represented by null\n  let parentScope = ctx?.scopeRef ?? null;\n\n  useLayoutEffect(() => {\n    // Find all rendered nodes between the sentinels and add them to the scope.\n    let node = startRef.current.nextSibling;\n    let nodes = [];\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node = node.nextSibling;\n    }\n\n    scopeRef.current = nodes;\n  }, [children, parentScope]);\n\n  // add to the focus scope tree in render order because useEffects/useLayoutEffects run children first whereas render runs parent first\n  // which matters when constructing a tree\n  if (focusScopeTree.getTreeNode(parentScope) && !focusScopeTree.getTreeNode(scopeRef)) {\n    focusScopeTree.addTreeNode(scopeRef, parentScope);\n  }\n\n  let node = focusScopeTree.getTreeNode(scopeRef);\n  node.contain = contain;\n\n  useFocusContainment(scopeRef, contain);\n  useRestoreFocus(scopeRef, restoreFocus, contain);\n  useAutoFocus(scopeRef, autoFocus);\n\n  // this layout effect needs to run last so that focusScopeTree cleanup happens at the last moment possible\n  useLayoutEffect(() => {\n    if (scopeRef && (parentScope || parentScope == null)) {\n      return () => {\n        // Restore the active scope on unmount if this scope or a descendant scope is active.\n        // Parent effect cleanups run before children, so we need to check if the\n        // parent scope actually still exists before restoring the active scope to it.\n        if (\n          (scopeRef === activeScope || isAncestorScope(scopeRef, activeScope)) &&\n          (!parentScope || focusScopeTree.getTreeNode(parentScope))\n        ) {\n          activeScope = parentScope;\n        }\n        focusScopeTree.removeTreeNode(scopeRef);\n      };\n    }\n  }, [scopeRef, parentScope]);\n\n  let focusManager = createFocusManagerForScope(scopeRef);\n\n  return (\n    <FocusContext.Provider value={{scopeRef, focusManager}}>\n      <span data-focus-scope-start hidden ref={startRef} />\n      {children}\n      <span data-focus-scope-end hidden ref={endRef} />\n    </FocusContext.Provider>\n  );\n}\n\n/**\n * Returns a FocusManager interface for the parent FocusScope.\n * A FocusManager can be used to programmatically move focus within\n * a FocusScope, e.g. in response to user events like keyboard navigation.\n */\nexport function useFocusManager(): FocusManager {\n  return useContext(FocusContext)?.focusManager;\n}\n\nfunction createFocusManagerForScope(scopeRef: React.RefObject<Element[]>): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current;\n      let {from, tabbable, wrap, accept} = opts;\n      let node = from || document.activeElement;\n      let sentinel = scope[0].previousElementSibling;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode() as FocusableElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current;\n      let {from, tabbable, wrap, accept} = opts;\n      let node = from || document.activeElement;\n      let sentinel = scope[scope.length - 1].nextElementSibling;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode() as FocusableElement;\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    },\n    focusFirst(opts = {}) {\n      let scope = scopeRef.current;\n      let {tabbable, accept} = opts;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = scope[0].previousElementSibling;\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusLast(opts = {}) {\n      let scope = scopeRef.current;\n      let {tabbable, accept} = opts;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = scope[scope.length - 1].nextElementSibling;\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    }\n  };\n}\n\nconst focusableElements = [\n  'input:not([disabled]):not([type=hidden])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  'button:not([disabled])',\n  'a[href]',\n  'area[href]',\n  'summary',\n  'iframe',\n  'object',\n  'embed',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]'\n];\n\nconst FOCUSABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]),') + ',[tabindex]:not([disabled]):not([hidden])';\n\nfocusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nconst TABBABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\n\nfunction getScopeRoot(scope: Element[]) {\n  return scope[0].parentElement;\n}\n\nfunction shouldContainFocus(scopeRef: ScopeRef) {\n  let scope = focusScopeTree.getTreeNode(activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.contain) {\n      return false;\n    }\n\n    scope = scope.parent;\n  }\n\n  return true;\n}\n\nfunction useFocusContainment(scopeRef: RefObject<Element[]>, contain: boolean) {\n  let focusedNode = useRef<FocusableElement>();\n\n  let raf = useRef(null);\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    if (!contain) {\n      // if contain was changed, then we should cancel any ongoing waits to pull focus back into containment\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n        raf.current = null;\n      }\n      return;\n    }\n\n    // Handle the Tab key to contain focus within the scope\n    let onKeyDown = (e) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey || !shouldContainFocus(scopeRef)) {\n        return;\n      }\n\n      let focusedElement = document.activeElement;\n      let scope = scopeRef.current;\n      if (!isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable: true}, scope);\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n        nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode())  as FocusableElement;\n      }\n\n      e.preventDefault();\n      if (nextElement) {\n        focusElement(nextElement, true);\n      }\n    };\n\n    let onFocus = (e) => {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if (!activeScope || isAncestorScope(activeScope, scopeRef)) {\n        activeScope = scopeRef;\n        focusedNode.current = e.target;\n      } else if (shouldContainFocus(scopeRef) && !isElementInChildScope(e.target, scopeRef)) {\n        // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),\n        // restore focus to the previously focused node or the first tabbable element in the active scope.\n        if (focusedNode.current) {\n          focusedNode.current.focus();\n        } else if (activeScope) {\n          focusFirstInScope(activeScope.current);\n        }\n      } else if (shouldContainFocus(scopeRef)) {\n        focusedNode.current = e.target;\n      }\n    };\n\n    let onBlur = (e) => {\n      // Firefox doesn't shift focus back to the Dialog properly without this\n      raf.current = requestAnimationFrame(() => {\n        // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe\n        if (shouldContainFocus(scopeRef) && !isElementInChildScope(document.activeElement, scopeRef)) {\n          activeScope = scopeRef;\n          if (document.body.contains(e.target)) {\n            focusedNode.current = e.target;\n            focusedNode.current.focus();\n          } else if (activeScope) {\n            focusFirstInScope(activeScope.current);\n          }\n        }\n      });\n    };\n\n    document.addEventListener('keydown', onKeyDown, false);\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(element => element.addEventListener('focusin', onFocus, false));\n    scope.forEach(element => element.addEventListener('focusout', onBlur, false));\n    return () => {\n      document.removeEventListener('keydown', onKeyDown, false);\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(element => element.removeEventListener('focusin', onFocus, false));\n      scope.forEach(element => element.removeEventListener('focusout', onBlur, false));\n    };\n  }, [scopeRef, contain]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n      }\n    };\n  }, [raf]);\n}\n\nfunction isElementInAnyScope(element: Element) {\n  return isElementInChildScope(element);\n}\n\nfunction isElementInScope(element: Element, scope: Element[]) {\n  return scope.some(node => node.contains(element));\n}\n\nfunction isElementInChildScope(element: Element, scope: ScopeRef = null) {\n  // node.contains in isElementInScope covers child scopes that are also DOM children,\n  // but does not cover child scopes in portals.\n  for (let {scopeRef: s} of focusScopeTree.traverse(focusScopeTree.getTreeNode(scope))) {\n    if (isElementInScope(element, s.current)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isAncestorScope(ancestor: ScopeRef, scope: ScopeRef) {\n  let parent = focusScopeTree.getTreeNode(scope)?.parent;\n  while (parent) {\n    if (parent.scopeRef === ancestor) {\n      return true;\n    }\n    parent = parent.parent;\n  }\n  return false;\n}\n\nfunction focusElement(element: FocusableElement | null, scroll = false) {\n  if (element != null && !scroll) {\n    try {\n      focusSafely(element);\n    } catch (err) {\n      // ignore\n    }\n  } else if (element != null) {\n    try {\n      element.focus();\n    } catch (err) {\n      // ignore\n    }\n  }\n}\n\nfunction focusFirstInScope(scope: Element[], tabbable:boolean = true) {\n  let sentinel = scope[0].previousElementSibling;\n  let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable}, scope);\n  walker.currentNode = sentinel;\n  let nextNode = walker.nextNode();\n\n  // If the scope does not contain a tabbable element, use the first focusable element.\n  if (tabbable && !nextNode) {\n    walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable: false}, scope);\n    walker.currentNode = sentinel;\n    nextNode = walker.nextNode();\n  }\n\n  focusElement(nextNode as FocusableElement);\n}\n\nfunction useAutoFocus(scopeRef: RefObject<Element[]>, autoFocus: boolean) {\n  const autoFocusRef = React.useRef(autoFocus);\n  useEffect(() => {\n    if (autoFocusRef.current) {\n      activeScope = scopeRef;\n      if (!isElementInScope(document.activeElement, activeScope.current)) {\n        focusFirstInScope(scopeRef.current);\n      }\n    }\n    autoFocusRef.current = false;\n  }, [scopeRef]);\n}\n\nfunction useRestoreFocus(scopeRef: RefObject<Element[]>, restoreFocus: boolean, contain: boolean) {\n  // create a ref during render instead of useLayoutEffect so the active element is saved before a child with autoFocus=true mounts.\n  const nodeToRestoreRef = useRef(typeof document !== 'undefined' ? document.activeElement as FocusableElement : null);\n\n  // restoring scopes should all track if they are active regardless of contain, but contain already tracks it plus logic to contain the focus\n  // restoring-non-containing scopes should only care if they become active so they can perform the restore\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    if (!restoreFocus || contain) {\n      return;\n    }\n\n    let onFocus = () => {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if (!activeScope || isAncestorScope(activeScope, scopeRef)) {\n        activeScope = scopeRef;\n      }\n    };\n\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(element => element.addEventListener('focusin', onFocus, false));\n    return () => {\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(element => element.removeEventListener('focusin', onFocus, false));\n    };\n  }, [scopeRef, contain]);\n\n  // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.\n  useLayoutEffect(() => {\n    focusScopeTree.getTreeNode(scopeRef).nodeToRestore = nodeToRestoreRef.current;\n    if (!restoreFocus) {\n      return;\n    }\n\n    // Handle the Tab key so that tabbing out of the scope goes to the next element\n    // after the node that had focus when the scope mounted. This is important when\n    // using portals for overlays, so that focus goes to the expected element when\n    // tabbing out of the overlay.\n    let onKeyDown = (e: KeyboardEvent) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n\n      let focusedElement = document.activeElement as FocusableElement;\n      if (!isElementInScope(focusedElement, scopeRef.current)) {\n        return;\n      }\n      let nodeToRestore = focusScopeTree.getTreeNode(scopeRef).nodeToRestore;\n\n      // Create a DOM tree walker that matches all tabbable elements\n      let walker = getFocusableTreeWalker(document.body, {tabbable: true});\n\n      // Find the next tabbable element after the currently focused element\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n\n      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body) {\n        nodeToRestore = null;\n        focusScopeTree.getTreeNode(scopeRef).nodeToRestore = null;\n      }\n\n      // If there is no next element, or it is outside the current scope, move focus to the\n      // next element after the node to restore to instead.\n      if ((!nextElement || !isElementInScope(nextElement, scopeRef.current)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n\n        // Skip over elements within the scope, in case the scope immediately follows the node to restore.\n        do {\n          nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n        } while (isElementInScope(nextElement, scopeRef.current));\n\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) {\n          focusElement(nextElement, true);\n        } else {\n           // If there is no next element and the nodeToRestore isn't within a FocusScope (i.e. we are leaving the top level focus scope)\n           // then move focus to the body.\n           // Otherwise restore focus to the nodeToRestore (e.g menu within a popover -> tabbing to close the menu should move focus to menu trigger)\n          if (!isElementInAnyScope(nodeToRestore)) {\n            focusedElement.blur();\n          } else {\n            focusElement(nodeToRestore, true);\n          }\n        }\n      }\n    };\n\n    if (!contain) {\n      document.addEventListener('keydown', onKeyDown, true);\n    }\n\n    return () => {\n      if (!contain) {\n        document.removeEventListener('keydown', onKeyDown, true);\n      }\n      let nodeToRestore = focusScopeTree.getTreeNode(scopeRef).nodeToRestore;\n\n      // if we already lost focus to the body and this was the active scope, then we should attempt to restore\n      if (\n        restoreFocus\n        && nodeToRestore\n        && (\n          isElementInScope(document.activeElement, scopeRef.current)\n          || (document.activeElement === document.body && activeScope === scopeRef)\n        )\n      ) {\n        // freeze the focusScopeTree so it persists after the raf, otherwise during unmount nodes are removed from it\n        let clonedTree = focusScopeTree.clone();\n        requestAnimationFrame(() => {\n          // Only restore focus if we've lost focus to the body, the alternative is that focus has been purposefully moved elsewhere\n          if (document.activeElement === document.body) {\n            // look up the tree starting with our scope to find a nodeToRestore still in the DOM\n            let treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.nodeToRestore && document.body.contains(treeNode.nodeToRestore)) {\n                focusElement(treeNode.nodeToRestore);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus, contain]);\n}\n\n/**\n * Create a [TreeWalker]{@link https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker}\n * that matches all focusable/tabbable elements.\n */\nexport function getFocusableTreeWalker(root: Element, opts?: FocusManagerOptions, scope?: Element[]) {\n  let selector = opts?.tabbable ? TABBABLE_ELEMENT_SELECTOR : FOCUSABLE_ELEMENT_SELECTOR;\n  let walker = document.createTreeWalker(\n    root,\n    NodeFilter.SHOW_ELEMENT,\n    {\n      acceptNode(node) {\n        // Skip nodes inside the starting node.\n        if (opts?.from?.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        if ((node as Element).matches(selector)\n          && isElementVisible(node as Element)\n          && (!scope || isElementInScope(node as Element, scope))\n          && (!opts?.accept || opts.accept(node as Element))\n        ) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n\n        return NodeFilter.FILTER_SKIP;\n      }\n    }\n  );\n\n  if (opts?.from) {\n    walker.currentNode = opts.from;\n  }\n\n  return walker;\n}\n\n/**\n * Creates a FocusManager object that can be used to move focus within an element.\n */\nexport function createFocusManager(ref: RefObject<Element>, defaultOptions: FocusManagerOptions = {}): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept} = opts;\n      let node = from || document.activeElement;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      }\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = root;\n        nextNode = walker.nextNode() as FocusableElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept} = opts;\n      let node = from || document.activeElement;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      } else {\n        let next = last(walker);\n        if (next) {\n          focusElement(next, true);\n        }\n        return next;\n      }\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = root;\n        previousNode = last(walker);\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    },\n    focusFirst(opts = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {tabbable = defaultOptions.tabbable, accept = defaultOptions.accept} = opts;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusLast(opts = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {tabbable = defaultOptions.tabbable, accept = defaultOptions.accept} = opts;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      let next = last(walker);\n      if (next) {\n        focusElement(next, true);\n      }\n      return next;\n    }\n  };\n}\n\nfunction last(walker: TreeWalker) {\n  let next: FocusableElement;\n  let last: FocusableElement;\n  do {\n    last = walker.lastChild() as FocusableElement;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n\n\nclass Tree {\n  private root: TreeNode;\n  private fastMap = new Map<ScopeRef, TreeNode>();\n\n  constructor() {\n    this.root = new TreeNode({scopeRef: null});\n    this.fastMap.set(null, this.root);\n  }\n\n  get size() {\n    return this.fastMap.size;\n  }\n\n  getTreeNode(data: ScopeRef) {\n    return this.fastMap.get(data);\n  }\n\n  addTreeNode(scopeRef: ScopeRef, parent: ScopeRef, nodeToRestore?: FocusableElement) {\n    let parentNode = this.fastMap.get(parent ?? null);\n    let node = new TreeNode({scopeRef});\n    parentNode.addChild(node);\n    node.parent = parentNode;\n    this.fastMap.set(scopeRef, node);\n    if (nodeToRestore) {\n      node.nodeToRestore = nodeToRestore;\n    }\n  }\n\n  removeTreeNode(scopeRef: ScopeRef) {\n    // never remove the root\n    if (scopeRef === null) {\n      return;\n    }\n    let node = this.fastMap.get(scopeRef);\n    let parentNode = node.parent;\n    // when we remove a scope, check if any sibling scopes are trying to restore focus to something inside the scope we're removing\n    // if we are, then replace the siblings restore with the restore from the scope we're removing\n    for (let current of this.traverse()) {\n      if (\n        current !== node &&\n        node.nodeToRestore &&\n        current.nodeToRestore &&\n        node.scopeRef.current &&\n        isElementInScope(current.nodeToRestore, node.scopeRef.current)\n      ) {\n        current.nodeToRestore = node.nodeToRestore;\n      }\n    }\n    let children = node.children;\n    parentNode.removeChild(node);\n    if (children.length > 0) {\n      children.forEach(child => parentNode.addChild(child));\n    }\n    this.fastMap.delete(node.scopeRef);\n  }\n\n  // Pre Order Depth First\n  *traverse(node: TreeNode = this.root): Generator<TreeNode> {\n    if (node.scopeRef != null) {\n      yield node;\n    }\n    if (node.children.length > 0) {\n      for (let child of node.children) {\n        yield* this.traverse(child);\n      }\n    }\n  }\n\n  clone(): Tree {\n    let newTree = new Tree();\n    for (let node of this.traverse()) {\n      newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);\n    }\n    return newTree;\n  }\n}\n\nclass TreeNode {\n  public scopeRef: ScopeRef;\n  public nodeToRestore: FocusableElement;\n  public parent: TreeNode;\n  public children: TreeNode[] = [];\n  public contain = false;\n\n  constructor(props: {scopeRef: ScopeRef}) {\n    this.scopeRef = props.scopeRef;\n  }\n  addChild(node: TreeNode) {\n    this.children.push(node);\n    node.parent = this;\n  }\n  removeChild(node: TreeNode) {\n    this.children.splice(this.children.indexOf(node), 1);\n    node.parent = undefined;\n  }\n}\n\nexport let focusScopeTree = new Tree();\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {focusWithoutScrolling, runAfterTransition} from '@react-aria/utils';\nimport {getInteractionModality} from '@react-aria/interactions';\n\n/**\n * A utility function that focuses an element while avoiding undesired side effects such\n * as page scrolling and screen reader issues with CSS transitions.\n */\nexport function focusSafely(element: FocusableElement) {\n  // If the user is interacting with a virtual cursor, e.g. screen reader, then\n  // wait until after any animated transitions that are currently occurring on\n  // the page before shifting focus. This avoids issues with VoiceOver on iOS\n  // causing the page to scroll when moving focus if the element is transitioning\n  // from off the screen.\n  if (getInteractionModality() === 'virtual') {\n    let lastFocusedElement = document.activeElement;\n    runAfterTransition(() => {\n      // If focus did not move and the element is still in the document, focus it.\n      if (document.activeElement === lastFocusedElement && document.contains(element)) {\n        focusWithoutScrolling(element);\n      }\n    });\n  } else {\n    focusWithoutScrolling(element);\n  }\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction isStyleVisible(element: Element) {\n  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) {\n    return false;\n  }\n\n  let {display, visibility} = element.style;\n\n  let isVisible = (\n    display !== 'none' &&\n    visibility !== 'hidden' &&\n    visibility !== 'collapse'\n  );\n\n  if (isVisible) {\n    const {getComputedStyle} = element.ownerDocument.defaultView;\n    let {display: computedDisplay, visibility: computedVisibility} = getComputedStyle(element);\n\n    isVisible = (\n      computedDisplay !== 'none' &&\n      computedVisibility !== 'hidden' &&\n      computedVisibility !== 'collapse'\n    );\n  }\n\n  return isVisible;\n}\n\nfunction isAttributeVisible(element: Element, childElement?: Element) {\n  return (\n    !element.hasAttribute('hidden') &&\n    (element.nodeName === 'DETAILS' &&\n      childElement &&\n      childElement.nodeName !== 'SUMMARY'\n      ? element.hasAttribute('open')\n      : true)\n  );\n}\n\n/**\n * Adapted from https://github.com/testing-library/jest-dom and \n * https://github.com/vuejs/vue-test-utils-next/.\n * Licensed under the MIT License.\n * @param element - Element to evaluate for display or visibility.\n */  \nexport function isElementVisible(element: Element, childElement?: Element) {\n  return (\n    element.nodeName !== '#comment' &&\n    isStyleVisible(element) &&\n    isAttributeVisible(element, childElement) &&\n    (!element.parentElement || isElementVisible(element.parentElement, element))\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport clsx from 'clsx';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {ReactElement} from 'react';\nimport {useFocusRing} from './useFocusRing';\n\nexport interface FocusRingProps {\n  /** Child element to apply CSS classes to. */\n  children: ReactElement,\n  /** CSS class to apply when the element is focused. */\n  focusClass?: string,\n  /** CSS class to apply when the element has keyboard focus. */\n  focusRingClass?: string,\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default false\n   */\n  within?: boolean,\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\n/**\n * A utility component that applies a CSS class when an element has keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function FocusRing(props: FocusRingProps) {\n  let {children, focusClass, focusRingClass} = props;\n  let {isFocused, isFocusVisible, focusProps} = useFocusRing(props);\n  let child = React.Children.only(children);\n\n  return React.cloneElement(child, mergeProps(child.props, {\n    ...focusProps,\n    className: clsx({\n      [focusClass || '']: isFocused,\n      [focusRingClass || '']: isFocusVisible\n    })\n  }));\n}\n","import {DOMAttributes} from '@react-types/shared';\nimport {isFocusVisible, useFocus, useFocusVisibleListener, useFocusWithin} from '@react-aria/interactions';\nimport {useCallback, useState} from 'react';\nimport {useRef} from 'react';\n\nexport interface AriaFocusRingProps {\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default 'false'\n   */\n  within?: boolean,\n\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusRingAria {\n  /** Whether the element is currently focused. */\n  isFocused: boolean,\n\n  /** Whether keyboard focus should be visible. */\n  isFocusVisible: boolean,\n\n  /** Props to apply to the container element with the focus ring. */\n  focusProps: DOMAttributes\n}\n\n/**\n * Determines whether a focus ring should be shown to indicate keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function useFocusRing(props: AriaFocusRingProps = {}): FocusRingAria {\n  let {\n    autoFocus = false,\n    isTextInput,\n    within\n  } = props;\n  let state = useRef({\n    isFocused: false,\n    isFocusVisible: autoFocus || isFocusVisible()\n  });\n  let [isFocused, setFocused] = useState(false);\n  let [isFocusVisibleState, setFocusVisible] = useState(() => state.current.isFocused && state.current.isFocusVisible);\n\n  let updateState = useCallback(() => setFocusVisible(state.current.isFocused && state.current.isFocusVisible), []);\n\n  let onFocusChange = useCallback(isFocused => {\n    state.current.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  }, [updateState]);\n\n  useFocusVisibleListener((isFocusVisible) => {\n    state.current.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {isTextInput});\n\n  let {focusProps} = useFocus({\n    isDisabled: within,\n    onFocusChange\n  });\n\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !within,\n    onFocusWithinChange: onFocusChange\n  });\n\n  return {\n    isFocused,\n    isFocusVisible: state.current.isFocused && isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableDOMProps, FocusableElement, FocusableProps} from '@react-types/shared';\nimport {focusSafely} from './';\nimport {mergeProps, useSyncRef} from '@react-aria/utils';\nimport React, {MutableRefObject, ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\nimport {useFocus, useKeyboard} from '@react-aria/interactions';\n\nexport interface FocusableOptions extends FocusableProps, FocusableDOMProps {\n  /** Whether focus should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface FocusableProviderProps extends DOMAttributes {\n  /** The child element to provide DOM props to. */\n  children?: ReactNode\n}\n\ninterface FocusableContextValue extends FocusableProviderProps {\n  ref?: MutableRefObject<FocusableElement>\n}\n\nlet FocusableContext = React.createContext<FocusableContextValue>(null);\n\nfunction useFocusableContext(ref: RefObject<FocusableElement>): FocusableContextValue {\n  let context = useContext(FocusableContext) || {};\n  useSyncRef(context, ref);\n\n  // eslint-disable-next-line\n  let {ref: _, ...otherProps} = context;\n  return otherProps;\n}\n\n/**\n * Provides DOM props to the nearest focusable child.\n */\nfunction FocusableProvider(props: FocusableProviderProps, ref: RefObject<FocusableElement>) {\n  let {children, ...otherProps} = props;\n  let context = {\n    ...otherProps,\n    ref\n  };\n\n  return (\n    <FocusableContext.Provider value={context}>\n      {children}\n    </FocusableContext.Provider>\n  );\n}\n\nlet _FocusableProvider = React.forwardRef(FocusableProvider);\nexport {_FocusableProvider as FocusableProvider};\n\nexport interface FocusableAria {\n  /** Props for the focusable element. */\n  focusableProps: DOMAttributes\n}\n\n/**\n * Used to make an element focusable and capable of auto focus.\n */\nexport function useFocusable(props: FocusableOptions, domRef: RefObject<FocusableElement>): FocusableAria {\n  let {focusProps} = useFocus(props);\n  let {keyboardProps} = useKeyboard(props);\n  let interactions = mergeProps(focusProps, keyboardProps);\n  let domProps = useFocusableContext(domRef);\n  let interactionProps = props.isDisabled ? {} : domProps;\n  let autoFocusRef = useRef(props.autoFocus);\n\n  useEffect(() => {\n    if (autoFocusRef.current && domRef.current) {\n      focusSafely(domRef.current);\n    }\n    autoFocusRef.current = false;\n  }, [domRef]);\n\n  return {\n    focusableProps: mergeProps(\n      {\n        ...interactions,\n        tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n      },\n      interactionProps\n    )\n  };\n}\n","import React from 'react';\nimport {\n  FocusScope as AriaFocusScope,\n  useFocusManager,\n} from '@react-aria/focus';\nimport type { FocusScopeProps } from './FocusScope';\nconst FocusScope = ({ children, contain, ...props }: FocusScopeProps) => {\n  /* Todo: stoping mounted and unMounted everytime contain is change */\n  // if (contain === false) return <></>;\n\n  return (\n    <AriaFocusScope contain={contain} {...props}>\n      {children}\n    </AriaFocusScope>\n  );\n};\n\nexport { FocusScope, useFocusManager };\n","export { useFocusRing } from './useFocusRing.web';\nexport { FocusScope } from './FocusScope.web';\nexport { useFocusManager } from './FocusScope.web';\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef, memo } from 'react';\nimport { Pressable as RNPressable } from 'react-native';\nimport { composeEventHandlers } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useFocusRing } from '@react-native-aria/focus';\nexport const useHover = () => {\n  const [isHovered, setHovered] = React.useState(false);\n  return {\n    hoverProps: {\n      onHoverIn: () => setHovered(true),\n      onHoverOut: () => setHovered(false)\n    },\n    isHovered\n  };\n};\nexport const useFocus = () => {\n  const [isFocused, setFocused] = React.useState(false);\n  return {\n    focusProps: {\n      onFocus: () => setFocused(true),\n      onBlur: () => setFocused(false)\n    },\n    isFocused\n  };\n};\nexport const useIsPressed = () => {\n  const [isPressed, setIsPressed] = React.useState(false);\n  return {\n    pressableProps: {\n      onPressIn: () => setIsPressed(true),\n      onPressOut: () => setIsPressed(false)\n    },\n    isPressed\n  };\n};\nconst StyledPressable = makeStyledComponent(RNPressable);\n\nconst Pressable = ({\n  children,\n  isDisabled,\n  disabled,\n  isHovered: isHoveredProp,\n  isPressed: isPressedProp,\n  isFocused: isFocusedProp,\n  isFocusVisible: isFocusVisibleProp,\n  ...props\n}, ref) => {\n  const {\n    hoverProps,\n    isHovered\n  } = useHover();\n  const {\n    pressableProps,\n    isPressed\n  } = useIsPressed();\n  const {\n    focusProps,\n    isFocused\n  } = useFocus();\n  const {\n    isFocusVisible,\n    focusProps: focusRingProps\n  } = useFocusRing();\n  const stateProps = {\n    isPressed: isPressedProp || isPressed,\n    isFocused: isFocusedProp || isFocused,\n    isHovered: isHoveredProp || isHovered\n  };\n  const {\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...resolvedProps\n  } = usePropsResolution('Pressable', props, { ...stateProps,\n    isFocusVisible: isFocusVisibleProp || isFocusVisible,\n    isDisabled: disabled || isDisabled\n  }); // TODO: Replace Render props with Context Hook\n  //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  } // TODO: Replace Render props with Context Hook\n\n\n  return /*#__PURE__*/React.createElement(StyledPressable, _extends({\n    ref: ref,\n    onPressIn: composeEventHandlers(onPressIn, pressableProps.onPressIn),\n    onPressOut: composeEventHandlers(onPressOut, pressableProps.onPressOut) // @ts-ignore - web only\n    ,\n    onHoverIn: composeEventHandlers(onHoverIn, hoverProps.onHoverIn) // @ts-ignore - web only\n    ,\n    onHoverOut: composeEventHandlers(onHoverOut, hoverProps.onHoverOut) // @ts-ignore - web only\n    ,\n    onFocus: composeEventHandlers(composeEventHandlers(onFocus, focusProps.onFocus), focusRingProps.onFocus) // @ts-ignore - web only\n    ,\n    onBlur: composeEventHandlers(composeEventHandlers(onBlur, focusProps.onBlur), focusRingProps.onBlur),\n    disabled: disabled || isDisabled\n  }, resolvedProps), typeof children !== 'function' ? children : children({ ...stateProps\n  }));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Pressable));\n//# sourceMappingURL=Pressable.js.map","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport Spinner from '../Spinner';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { default as Box } from '../Box';\nimport HStack from '../Stack/HStack';\nimport { Pressable } from '../Pressable';\nimport { composeEventHandlers } from '../../../utils';\nimport { useHover, useFocus, useIsPressed } from '../../primitives/Pressable/Pressable';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Button = ({\n  //@ts-ignore\n  children,\n  startIcon,\n  rightIcon,\n  leftIcon,\n  endIcon,\n  spinner,\n  isDisabled,\n  isLoading,\n  isHovered: isHoveredProp,\n  isPressed: isPressedProp,\n  isFocused: isFocusedProp,\n  isFocusVisible: isFocusVisibleProp,\n  spinnerPlacement = 'start',\n  ...props\n}, ref) => {\n  var _props$accessibilityR;\n\n  const {\n    hoverProps,\n    isHovered\n  } = useHover();\n  const {\n    pressableProps,\n    isPressed\n  } = useIsPressed();\n  const {\n    focusProps,\n    isFocused\n  } = useFocus();\n  const {\n    isFocusVisible,\n    focusProps: focusRingProps\n  } = useFocusRing();\n  const {\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    _text,\n    _stack,\n    _spinner,\n    isLoadingText,\n    _icon,\n    ...resolvedProps\n  } = usePropsResolution('Button', props, {\n    isDisabled,\n    isHovered: isHoveredProp || isHovered,\n    isFocused: isFocusedProp || isFocused,\n    isPressed: isPressedProp || isPressed,\n    isLoading,\n    isFocusVisible: isFocusVisibleProp || isFocusVisible\n  }); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n\n  if (endIcon && /*#__PURE__*/React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(endIcon, (child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        key: \"button-end-icon-\".concat(index),\n        ..._icon,\n        ...child.props\n      });\n    });\n  }\n\n  if (startIcon && /*#__PURE__*/React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(startIcon, (child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        key: \"button-start-icon-\".concat(index),\n        ..._icon,\n        ...child.props\n      });\n    });\n  }\n\n  const spinnerElement = spinner ? spinner : /*#__PURE__*/React.createElement(Spinner, _extends({\n    color: _text === null || _text === void 0 ? void 0 : _text.color\n  }, _spinner));\n\n  const boxChildren = child => {\n    return child ? /*#__PURE__*/React.createElement(Box, {\n      _text: _text\n    }, child) : null;\n  };\n\n  return /*#__PURE__*/React.createElement(Pressable, _extends({\n    disabled: isDisabled || isLoading,\n    ref: ref,\n    onPressIn: composeEventHandlers(onPressIn, pressableProps.onPressIn),\n    onPressOut: composeEventHandlers(onPressOut, pressableProps.onPressOut) // @ts-ignore - web only\n    ,\n    onHoverIn: composeEventHandlers(onHoverIn, hoverProps.onHoverIn) // @ts-ignore - web only\n    ,\n    onHoverOut: composeEventHandlers(onHoverOut, hoverProps.onHoverOut) // @ts-ignore - web only\n    ,\n    onFocus: composeEventHandlers(composeEventHandlers(onFocus, focusProps.onFocus), focusRingProps.onFocus) // @ts-ignore - web only\n    ,\n    onBlur: composeEventHandlers(composeEventHandlers(onBlur, focusProps.onBlur), focusRingProps.onBlur)\n  }, resolvedProps, {\n    accessibilityRole: (_props$accessibilityR = props.accessibilityRole) !== null && _props$accessibilityR !== void 0 ? _props$accessibilityR : 'button'\n  }), /*#__PURE__*/React.createElement(HStack, _extends({}, _stack, {\n    test: true\n  }), startIcon && !isLoading ? startIcon : null, isLoading && spinnerPlacement === 'start' ? spinnerElement : null, isLoading ? isLoadingText ? boxChildren(isLoadingText) : null : boxChildren(children), endIcon && !isLoading ? endIcon : null, isLoading && spinnerPlacement === 'end' ? spinnerElement : null));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Button));\n//# sourceMappingURL=Button.js.map","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Stack } from '../Stack';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(({\n  children,\n  divider,\n  variant,\n  ...props\n}, ref) => {\n  const {\n    space,\n    direction,\n    size,\n    colorScheme,\n    isDisabled,\n    isAttached,\n    ...newProps\n  } = usePropsResolution('ButtonGroup', props);\n  const {\n    borderRadius\n  } = usePropsResolution('Button', props);\n  let computedChildren;\n\n  if (Array.isArray(children)) {\n    computedChildren = React.Children.toArray(children).map((child, index) => {\n      if (typeof child === 'string' || typeof child === 'number') return child;\n      return /*#__PURE__*/React.cloneElement(child, {\n        key: \"button-group-child-\".concat(index),\n        variant,\n        size,\n        colorScheme,\n        isDisabled,\n        // when buttons are attached, remove rounded corners of all buttons except extreme buttons\n        ...(isAttached ? {\n          borderRadius: 0\n        } : {}),\n        ...(isAttached && index === 0 ? direction === 'column' ? {\n          borderTopRadius: borderRadius\n        } : {\n          borderLeftRadius: borderRadius\n        } : {}),\n        ...(isAttached && index === (children === null || children === void 0 ? void 0 : children.length) - 1 ? direction === 'column' ? {\n          borderBottomRadius: borderRadius\n        } : {\n          borderRightRadius: borderRadius\n        } : {}),\n        //when buttons are attached, remove double border from them, just keep borderRight in case for direction row and borderBottom in case of direction column for every component\n        ...(isAttached && index !== 0 ? direction === 'column' ? {\n          borderTopWidth: 0\n        } : {\n          borderLeftWidth: 0\n        } : {}),\n        ...child.props\n      });\n    });\n  } else {\n    computedChildren = React.Children.toArray(children).map((child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        key: \"button-group-child-\".concat(index),\n        variant,\n        size,\n        colorScheme,\n        isDisabled,\n        ...child.props\n      });\n    });\n  } //TODO: refactor for responsive prop\n\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Stack, _extends({\n    divider: divider,\n    space: isAttached ? 0 : space,\n    direction: direction\n  }, newProps, {\n    ref: ref\n  }), computedChildren);\n}));\n//# sourceMappingURL=ButtonGroup.js.map","import ButtonMain from './Button';\nimport ButtonGroup from './ButtonGroup';\nconst ButtonTemp = ButtonMain;\nButtonTemp.Group = ButtonGroup; // To add typings\n\nconst Button = ButtonTemp;\nexport { Button };\n//# sourceMappingURL=index.js.map","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport StackMain from './Stack';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst HStack = (props, ref) => {\n  const resolvedProps = usePropsResolution('HStack', props); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(StackMain, _extends({\n    ref: ref,\n    direction: \"row\"\n  }, resolvedProps));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(HStack));\n//# sourceMappingURL=HStack.js.map"],"names":["previousModality","previousActiveModality","_excluded","createSvgCircle","style","React","cx","cy","fill","r","strokeWidth","ActivityIndicator","props","forwardedRef","_props$animating","animating","_props$color","color","_props$hidesWhenStopp","hidesWhenStopped","_props$size","size","other","_objectWithoutPropertiesLoose","svg","height","viewBox","width","stroke","opacity","strokeDasharray","strokeDashoffset","View","_extends","ref","role","styles","container","children","indicatorSizes","animation","animationPause","displayName","StyleSheet","create","alignItems","justifyContent","visibility","animationDuration","animationKeyframes","transform","animationTimingFunction","animationIterationCount","animationPlayState","small","large","primitives_Spinner","memo","forwardRef","_usePropsResolution","usePropsResolution","testID","resolvedProps","resolvedColor","getColor","useTheme","colors","resolvedStyle","useStyledSystemPropsResolver","useHasResponsiveProps","accessible","accessibilityLabel","emptyFunction","canUsePassiveEvents","supportsPassiveEvents","supported","canUseDOM","options","Object","defineProperty","get","window","addEventListener","removeEventListener","e","isPropagationStopped","cancelBubble","isDefaultPrevented","defaultPrevented","createEventHandle","type","opts","Boolean","capture","target","listener","compatListener","event","nativeEvent","persist","element","activeModality","modality","isEmulatingMouseEvents","listeners","Set","KEYBOARD","MOUSE","TOUCH","CONTEXTMENU","MOUSEDOWN","MOUSEMOVE","MOUSEUP","POINTERDOWN","POINTERMOVE","SCROLL","SELECTIONCHANGE","TOUCHCANCEL","TOUCHMOVE","TOUCHSTART","bubbleOptions","passive","captureOptions","addBlurListener","addFocusListener","addVisibilityChangeListener","addKeyDownListener","addPointerDownListener","addPointerMoveListener","addContextMenuListener","addMouseDownListener","addMouseMoveListener","addMouseUpListener","addScrollListener","addSelectiomChangeListener","addTouchCancelListener","addTouchMoveListener","addTouchStartListener","restoreModality","callListeners","onPointerish","eventType","PointerEvent","pointerType","touches","length","value","forEach","document","metaKey","altKey","ctrlKey","visibilityState","useEvent","targetListeners","useStable","Map","addListener","callback","removeTargetListener","delete","set","useLayoutEffect","removeListener","clear","emptyObject","lockEventType","unlockEventType","dispatchCustomEvent","payload","createEvent","_ref","_ref$bubbles","bubbles","_ref$cancelable","cancelable","detail","initCustomEvent","dispatchEvent","getPointerType","DELAY","ERROR","LONG_PRESS_DETECTED","NOT_RESPONDER","RESPONDER_ACTIVE_LONG_PRESS_START","RESPONDER_ACTIVE_PRESS_START","RESPONDER_INACTIVE_PRESS_START","RESPONDER_RELEASE","RESPONDER_TERMINATED","Transitions","freeze","RESPONDER_GRANT","isActiveSignal","signal","isButtonRole","getAttribute","isPressStartSignal","isValidKeyPress","key","isSpacebar","PressResponder","constructor","config","classCallCheck","Z","_eventHandlers","_isPointerTouch","_longPressDelayTimeout","_longPressDispatched","_pressDelayTimeout","_pressOutDelayTimeout","_touchState","configure","createClass","_config","reset","_cancelLongPressDelayTimeout","_cancelPressDelayTimeout","_cancelPressOutDelayTimeout","getEventHandlers","_createEventHandlers","_this","start","shouldDelay","_selectionTerminated","_receiveSignal","delayPressStart","normalizeDelay","setTimeout","delayLongPress","_handleLongPress","end","keyupHandler","onPress","elementType","tagName","toLowerCase","onStartShouldSetResponder","disabled","currentTarget","stopPropagation","onKeyDown","preventDefault","onResponderGrant","onResponderMove","onPressMove","touch","getTouchFromResponderEvent","_touchActivatePosition","Math","hypot","pageX","pageY","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","_this$_config","onLongPress","onClick","_this$_config2","onContextMenu","_this$_config3","prevState","nextState","console","error","_performTransitionSideEffects","_this2","isPrevActive","isNextActive","_activate","_deactivate","_this$_config4","_onLongPress","_this$_config5","onPressChange","onPressStart","_this$_config6","onPressEnd","delayPressEnd","clearTimeout","delay","min","fallback","max","_event$nativeEvent","changedTouches","useForceableState","forced","_useState","useState","bool","active","cursor","touchAction","pointerEvents","MemoedPressable","pressResponderRef","pressResponder","contain","onHoverStart","onHoverChange","onHoverUpdate","onHoverEnd","canUsePE","addMoveListener","addEnterListener","addLeaveListener","addLockListener","addUnlockListener","_tabIndex","delayPressIn","delayPressOut","onBlur","onFocus","onHoverIn","onHoverOut","onPressIn","onPressOut","tabIndex","testOnly_hovered","testOnly_pressed","rest","_useForceableState","hovered","setHovered","_useForceableState2","focused","setFocused","_useForceableState3","pressed","setPressed","hostRef","useRef","setRef","useMergeRefs","pressEventHandlers","useMemo","current","useEffect","useDebugValue","onContextMenuPress","onKeyDownPress","targetRef","hoverEnd","leaveListener","moveListener","x","clientX","y","clientY","hoverStart","lockEvent","interactionState","blurHandler","focusHandler","contextMenuHandler","keyDownHandler","undefined","react","createContext","$9bf71ea28793e738$var$focusableElements","join","push","$9bf71ea28793e738$var$Tree","esm_classCallCheck","fastMap","root","$9bf71ea28793e738$var$TreeNode","scopeRef","esm_createClass","data","parent","nodeToRestore","parentNode","node","addChild","traverse","$9bf71ea28793e738$var$isElementInScope","scope","some","contains","removeChild","child","arguments","newTree","addTreeNode","splice","indexOf","$f7dceffc5ad7768b$export$4e328f61c538687f","_props$autoFocus","autoFocus","isTextInput","within","state","isFocused","isFocusVisible","dist_module","E","_$6nfFC$useState","_$6nfFC$useState2","slicedToArray","isFocused1","_$6nfFC$useState3","_$6nfFC$useState4","isFocusVisibleState","setFocusVisible","updateState","useCallback","onFocusChange","mG","focusProps","_$6nfFC$useFocus","KK","isDisabled","focusWithinProps","_$6nfFC$useFocusWithi","L_","onFocusWithinChange","$e6afbd83fe6ebbd2$var$FocusableContext","context","_objectSpread","objectWithoutProperties","_excluded2","createElement","Provider","assign","i","source","prototype","hasOwnProperty","call","apply","useHover","_React$useState","_React$useState2","isHovered","hoverProps","useFocus","_React$useState3","_React$useState4","useIsPressed","_React$useState5","_React$useState6","isPressed","setIsPressed","pressableProps","StyledPressable","makeStyledComponent","primitives_Pressable_Pressable","param","isHoveredProp","isPressedProp","isFocusedProp","isFocusVisibleProp","Pressable_Pressable_excluded","_useHover","_useIsPressed","_useFocus","_useFocusRing","useFocusRing","focusRingProps","stateProps","composeEventHandlers","Button_Button","_props$accessibilityR","startIcon","rightIcon","leftIcon","endIcon","spinner","isLoading","spinnerPlacement","_param$spinnerPlaceme","Button_excluded","_text","_stack","_spinner","isLoadingText","_icon","map","index","concat","spinnerElement","Spinner","boxChildren","Box","Pressable","accessibilityRole","HStack","test","ButtonGroup","computedChildren","divider","variant","ButtonGroup_excluded","space","direction","colorScheme","isAttached","newProps","borderRadius","_usePropsResolution2","Array","isArray","toArray","borderTopRadius","borderLeftRadius","borderBottomRadius","borderRightRadius","borderTopWidth","borderLeftWidth","Stack","ButtonTemp","ButtonMain","Group","Button","__webpack_exports__","StackMain"],"sourceRoot":""}